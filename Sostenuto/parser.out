Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    LIST
    RARROW
    COLON

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> COMP ID G1 F_VARDEC G2 F_FUNCDEC F1 MAIN_BLOCK
Rule 2     F_FUNCDEC -> FUNCDEC F_FUNCDEC
Rule 3     F_FUNCDEC -> e
Rule 4     VARDEC -> VAR LPAR TYPE ID VARIDB VARDECB RPAR
Rule 5     VARID -> LSQUARE NUMBER RSQUARE VARIDB
Rule 6     VARIDB -> LSQUARE NUMBER RSQUARE VARIDB
Rule 7     VARIDB -> e
Rule 8     EXPVARID -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB
Rule 9     EXPVARIDB -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB
Rule 10    EXPVARIDB -> e
Rule 11    VARDECB -> COMMA TYPE ID VARIDB VARDECB
Rule 12    VARDECB -> e
Rule 13    FUNCDEC -> FUNC F1 AUXFUNCDEC FUNCBLOCK
Rule 14    AUXFUNCDEC -> ID DDOT F_ARGS LARROW RETTYPE
Rule 15    F_ARGS -> ARGS
Rule 16    F_ARGS -> e
Rule 17    FUNCBLOCK -> LTRIAN F_VARDEC STATEMENTS F_RETURN RTRIAN
Rule 18    F_VARDEC -> VARDEC
Rule 19    F_VARDEC -> e
Rule 20    F_RETURN -> RETURN EXPRESSION SEMICOLON
Rule 21    F_RETURN -> e
Rule 22    STATEMENTS -> STATEMENT N0 STATEMENTS
Rule 23    STATEMENTS -> e
Rule 24    N0 -> e
Rule 25    MAIN_BLOCK -> MAIN FUNCBLOCK
Rule 26    STATEMENT -> ASSIGN SEMICOLON
Rule 27    STATEMENT -> FUNCCALL SEMICOLON
Rule 28    STATEMENT -> WHILE_BLOCK
Rule 29    STATEMENT -> RITORNELLO
Rule 30    STATEMENT -> IF_BLOCK
Rule 31    STATEMENT -> PRINT SEMICOLON
Rule 32    STATEMENT -> PLAYFUNCS SEMICOLON
Rule 33    STATEMENT -> MUSICFUNCS SEMICOLON
Rule 34    STATEMENT -> READ SEMICOLON
Rule 35    ARGS -> TYPE e ID H_ARGS
Rule 36    H_ARGS -> COMMA ARGS
Rule 37    H_ARGS -> e
Rule 38    CALLARGS -> C1 EXPRESSION C2 H_CALLARGS
Rule 39    CALLARGS -> e
Rule 40    C1 -> e
Rule 41    C2 -> e
Rule 42    H_CALLARGS -> COMMA CALLARGS
Rule 43    H_CALLARGS -> e
Rule 44    FUNCCALL -> ID LPAR CALLARGS RPAR
Rule 45    READ -> INPUT LPAR READAUX RPAR
Rule 46    READAUX -> NUMBERTYPE
Rule 47    READAUX -> STRINGTYPE
Rule 48    READAUX -> NOTETYPE
Rule 49    PRINT -> DISP LPAR CALLARGS RPAR
Rule 50    MUSICFUNCS -> STREAMT LPAR EXP RPAR
Rule 51    MUSICFUNCS -> MST LPAR RPAR
Rule 52    PLAYFUNCS -> PLAYT LPAR EXP COMMA EXP RPAR
Rule 53    PLAYFUNCS -> PLAYT LPAR SILENCE COMMA EXP COMMA EXP RPAR
Rule 54    TYPE -> NUMBERTYPE
Rule 55    TYPE -> NOTETYPE
Rule 56    TYPE -> BOOLTYPE
Rule 57    TYPE -> STRINGTYPE
Rule 58    RETTYPE -> NUMBERTYPE
Rule 59    RETTYPE -> NOTETYPE
Rule 60    RETTYPE -> BOOLTYPE
Rule 61    RETTYPE -> SILENCE
Rule 62    BLOCK -> LTRIAN STATEMENTS RTRIAN
Rule 63    ASSIGNH -> EXPRESSION
Rule 64    ASSIGNH -> ARRAY
Rule 65    ASSIGN -> ID EXPVARIDB ASSIGNATION ASSIGNH
Rule 66    IF_BLOCK -> IF DDOT EXPRESSION A1 IF_B
Rule 67    A1 -> e
Rule 68    A2 -> e
Rule 69    A3 -> e
Rule 70    A3B -> e
Rule 71    IF_B -> BLOCK F_ELSE A2
Rule 72    IF_B -> LARROW IF_ARROW SEMICOLON A2
Rule 73    IF_ARROW -> FUNCCALL
Rule 74    IF_ARROW -> ASSIGN
Rule 75    IF_ARROW -> PRINT
Rule 76    F_ELSE -> ELSE A3 A2 A3B ELSE_BLOCK
Rule 77    F_ELSE -> e
Rule 78    ELSE_BLOCK -> BLOCK
Rule 79    ELSE_BLOCK -> IF_BLOCK
Rule 80    WHILE_BLOCK -> WHILE W1 DDOT EXPRESSION A1 BLOCK W2
Rule 81    W1 -> e
Rule 82    W2 -> e
Rule 83    RITORNELLO -> LRITT RITARG STATEMENTS RRITT
Rule 84    RITARG -> LPAR EXPRESSION RPAR LARROW
Rule 85    RITARG -> e
Rule 86    EXPRESSION -> EXPOR
Rule 87    EXPOR -> EXPAND P10 EXPORB
Rule 88    EXPORB -> EXPOR_OPS EXPOR
Rule 89    EXPORB -> e
Rule 90    EXPOR_OPS -> OR
Rule 91    P10 -> e
Rule 92    EXPAND -> EXPEQ P9 EXPANDB
Rule 93    EXPANDB -> EXPAND_OPS EXPAND
Rule 94    EXPANDB -> e
Rule 95    EXPAND_OPS -> AND
Rule 96    P9 -> e
Rule 97    EXPEQ -> EXP P8 EXPEQB
Rule 98    EXPEQB -> EXPEQ_OPS EXPEQ
Rule 99    EXPEQB -> e
Rule 100   EXPEQ_OPS -> EQ
Rule 101   EXPEQ_OPS -> DIFF
Rule 102   P8 -> e
Rule 103   EXP -> EXPR P7 EXPB
Rule 104   EXPB -> e
Rule 105   EXPB -> EXP2_ops EXP
Rule 106   EXP2_ops -> GT
Rule 107   EXP2_ops -> LT
Rule 108   P7 -> e
Rule 109   EXPR -> TERM P4 EXPR_B
Rule 110   EXPR_B -> EXPR_B_OPS EXPR
Rule 111   EXPR_B -> e
Rule 112   EXPR_B_OPS -> PLUS
Rule 113   EXPR_B_OPS -> MINUS
Rule 114   P4 -> e
Rule 115   TERM -> FACTOR P5 TERM_B
Rule 116   TERM_B -> TERM_B_OPS TERM
Rule 117   TERM_B -> e
Rule 118   TERM_B_OPS -> TIMES
Rule 119   TERM_B_OPS -> DIVIDE
Rule 120   P5 -> e
Rule 121   IDVARID -> ID EXPVARID
Rule 122   ARRAY -> LSQUARE C1 EXP C2 ARRAYB RSQUARE
Rule 123   ARRAYB -> COMMA C1 EXP C2 ARRAYB
Rule 124   ARRAYB -> e
Rule 125   FACTOR -> NUMBER
Rule 126   FACTOR -> ID
Rule 127   FACTOR -> FACTOR_CTE
Rule 128   FACTOR -> LPAR P6 EXPRESSION RPAR
Rule 129   FACTOR -> IDVARID
Rule 130   FACTOR -> FUNCCALL
Rule 131   FACTOR -> VARCTE
Rule 132   FACTOR -> READ
Rule 133   P6 -> e
Rule 134   FACTOR_CTE -> PLUS NUMBER
Rule 135   FACTOR_CTE -> MINUS NUMBER
Rule 136   VARCTE -> NOTE
Rule 137   VARCTE -> BOOL
Rule 138   VARCTE -> STRING
Rule 139   e -> <empty>
Rule 140   F1 -> e
Rule 141   F2 -> e
Rule 142   G1 -> e
Rule 143   G2 -> e

Terminals, with rules where they appear

AND                  : 95
ASSIGNATION          : 65
BOOL                 : 137
BOOLTYPE             : 56 60
COLON                : 
COMMA                : 11 36 42 52 53 53 123
COMP                 : 1
DDOT                 : 14 66 80
DIFF                 : 101
DISP                 : 49
DIVIDE               : 119
ELSE                 : 76
EQ                   : 100
FUNC                 : 13
GT                   : 106
ID                   : 1 4 11 14 35 44 65 121 126
IF                   : 66
INPUT                : 45
LARROW               : 14 72 84
LIST                 : 
LPAR                 : 4 44 45 49 50 51 52 53 84 128
LRITT                : 83
LSQUARE              : 5 6 8 9 122
LT                   : 107
LTRIAN               : 17 62
MAIN                 : 25
MINUS                : 113 135
MST                  : 51
NOTE                 : 136
NOTETYPE             : 48 55 59
NUMBER               : 5 6 125 134 135
NUMBERTYPE           : 46 54 58
OR                   : 90
PLAYT                : 52 53
PLUS                 : 112 134
RARROW               : 
RETURN               : 20
RPAR                 : 4 44 45 49 50 51 52 53 84 128
RRITT                : 83
RSQUARE              : 5 6 8 9 122
RTRIAN               : 17 62
SEMICOLON            : 20 26 27 31 32 33 34 72
SILENCE              : 53 61
STREAMT              : 50
STRING               : 138
STRINGTYPE           : 47 57
TIMES                : 118
VAR                  : 4
WHILE                : 80
error                : 

Nonterminals, with rules where they appear

A1                   : 66 80
A2                   : 71 72 76
A3                   : 76
A3B                  : 76
ARGS                 : 15 36
ARRAY                : 64
ARRAYB               : 122 123
ASSIGN               : 26 74
ASSIGNH              : 65
AUXFUNCDEC           : 13
BLOCK                : 71 78 80
C1                   : 8 9 38 122 123
C2                   : 8 9 38 122 123
CALLARGS             : 42 44 49
ELSE_BLOCK           : 76
EXP                  : 8 9 50 52 52 53 53 97 105 122 123
EXP2_ops             : 105
EXPAND               : 87 93
EXPANDB              : 92
EXPAND_OPS           : 93
EXPB                 : 103
EXPEQ                : 92 98
EXPEQB               : 97
EXPEQ_OPS            : 98
EXPOR                : 86 88
EXPORB               : 87
EXPOR_OPS            : 88
EXPR                 : 103 110
EXPRESSION           : 20 38 63 66 80 84 128
EXPR_B               : 109
EXPR_B_OPS           : 110
EXPVARID             : 121
EXPVARIDB            : 8 9 65
F1                   : 1 13
F2                   : 
FACTOR               : 115
FACTOR_CTE           : 127
FUNCBLOCK            : 13 25
FUNCCALL             : 27 73 130
FUNCDEC              : 2
F_ARGS               : 14
F_ELSE               : 71
F_FUNCDEC            : 1 2
F_RETURN             : 17
F_VARDEC             : 1 17
G1                   : 1
G2                   : 1
H_ARGS               : 35
H_CALLARGS           : 38
IDVARID              : 129
IF_ARROW             : 72
IF_B                 : 66
IF_BLOCK             : 30 79
MAIN_BLOCK           : 1
MUSICFUNCS           : 33
N0                   : 22
P10                  : 87
P4                   : 109
P5                   : 115
P6                   : 128
P7                   : 103
P8                   : 97
P9                   : 92
PLAYFUNCS            : 32
PRINT                : 31 75
PROGRAM              : 0
READ                 : 34 132
READAUX              : 45
RETTYPE              : 14
RITARG               : 83
RITORNELLO           : 29
STATEMENT            : 22
STATEMENTS           : 17 22 62 83
TERM                 : 109 116
TERM_B               : 115
TERM_B_OPS           : 116
TYPE                 : 4 11 35
VARCTE               : 131
VARDEC               : 18
VARDECB              : 4 11
VARID                : 
VARIDB               : 4 5 6 11
W1                   : 80
W2                   : 80
WHILE_BLOCK          : 28
e                    : 3 7 10 12 16 19 21 23 24 35 37 39 40 41 43 67 68 69 70 77 81 82 85 89 91 94 96 99 102 104 108 111 114 117 120 124 133 140 141 142 143

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . COMP ID G1 F_VARDEC G2 F_FUNCDEC F1 MAIN_BLOCK

    COMP            shift and go to state 2

    PROGRAM                        shift and go to state 1

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> COMP . ID G1 F_VARDEC G2 F_FUNCDEC F1 MAIN_BLOCK

    ID              shift and go to state 3


state 3

    (1) PROGRAM -> COMP ID . G1 F_VARDEC G2 F_FUNCDEC F1 MAIN_BLOCK
    (142) G1 -> . e
    (139) e -> .

    VAR             reduce using rule 139 (e -> .)
    FUNC            reduce using rule 139 (e -> .)
    MAIN            reduce using rule 139 (e -> .)

    G1                             shift and go to state 4
    e                              shift and go to state 5

state 4

    (1) PROGRAM -> COMP ID G1 . F_VARDEC G2 F_FUNCDEC F1 MAIN_BLOCK
    (18) F_VARDEC -> . VARDEC
    (19) F_VARDEC -> . e
    (4) VARDEC -> . VAR LPAR TYPE ID VARIDB VARDECB RPAR
    (139) e -> .

    VAR             shift and go to state 9
    FUNC            reduce using rule 139 (e -> .)
    MAIN            reduce using rule 139 (e -> .)

    F_VARDEC                       shift and go to state 6
    VARDEC                         shift and go to state 7
    e                              shift and go to state 8

state 5

    (142) G1 -> e .

    VAR             reduce using rule 142 (G1 -> e .)
    FUNC            reduce using rule 142 (G1 -> e .)
    MAIN            reduce using rule 142 (G1 -> e .)


state 6

    (1) PROGRAM -> COMP ID G1 F_VARDEC . G2 F_FUNCDEC F1 MAIN_BLOCK
    (143) G2 -> . e
    (139) e -> .

    FUNC            reduce using rule 139 (e -> .)
    MAIN            reduce using rule 139 (e -> .)

    G2                             shift and go to state 10
    e                              shift and go to state 11

state 7

    (18) F_VARDEC -> VARDEC .

    FUNC            reduce using rule 18 (F_VARDEC -> VARDEC .)
    MAIN            reduce using rule 18 (F_VARDEC -> VARDEC .)
    ID              reduce using rule 18 (F_VARDEC -> VARDEC .)
    WHILE           reduce using rule 18 (F_VARDEC -> VARDEC .)
    LRITT           reduce using rule 18 (F_VARDEC -> VARDEC .)
    IF              reduce using rule 18 (F_VARDEC -> VARDEC .)
    DISP            reduce using rule 18 (F_VARDEC -> VARDEC .)
    PLAYT           reduce using rule 18 (F_VARDEC -> VARDEC .)
    STREAMT         reduce using rule 18 (F_VARDEC -> VARDEC .)
    MST             reduce using rule 18 (F_VARDEC -> VARDEC .)
    INPUT           reduce using rule 18 (F_VARDEC -> VARDEC .)
    RETURN          reduce using rule 18 (F_VARDEC -> VARDEC .)
    RTRIAN          reduce using rule 18 (F_VARDEC -> VARDEC .)


state 8

    (19) F_VARDEC -> e .

    FUNC            reduce using rule 19 (F_VARDEC -> e .)
    MAIN            reduce using rule 19 (F_VARDEC -> e .)
    ID              reduce using rule 19 (F_VARDEC -> e .)
    WHILE           reduce using rule 19 (F_VARDEC -> e .)
    LRITT           reduce using rule 19 (F_VARDEC -> e .)
    IF              reduce using rule 19 (F_VARDEC -> e .)
    DISP            reduce using rule 19 (F_VARDEC -> e .)
    PLAYT           reduce using rule 19 (F_VARDEC -> e .)
    STREAMT         reduce using rule 19 (F_VARDEC -> e .)
    MST             reduce using rule 19 (F_VARDEC -> e .)
    INPUT           reduce using rule 19 (F_VARDEC -> e .)
    RETURN          reduce using rule 19 (F_VARDEC -> e .)
    RTRIAN          reduce using rule 19 (F_VARDEC -> e .)


state 9

    (4) VARDEC -> VAR . LPAR TYPE ID VARIDB VARDECB RPAR

    LPAR            shift and go to state 12


state 10

    (1) PROGRAM -> COMP ID G1 F_VARDEC G2 . F_FUNCDEC F1 MAIN_BLOCK
    (2) F_FUNCDEC -> . FUNCDEC F_FUNCDEC
    (3) F_FUNCDEC -> . e
    (13) FUNCDEC -> . FUNC F1 AUXFUNCDEC FUNCBLOCK
    (139) e -> .

    FUNC            shift and go to state 16
    MAIN            reduce using rule 139 (e -> .)

    F_FUNCDEC                      shift and go to state 13
    FUNCDEC                        shift and go to state 14
    e                              shift and go to state 15

state 11

    (143) G2 -> e .

    FUNC            reduce using rule 143 (G2 -> e .)
    MAIN            reduce using rule 143 (G2 -> e .)


state 12

    (4) VARDEC -> VAR LPAR . TYPE ID VARIDB VARDECB RPAR
    (54) TYPE -> . NUMBERTYPE
    (55) TYPE -> . NOTETYPE
    (56) TYPE -> . BOOLTYPE
    (57) TYPE -> . STRINGTYPE

    NUMBERTYPE      shift and go to state 18
    NOTETYPE        shift and go to state 19
    BOOLTYPE        shift and go to state 20
    STRINGTYPE      shift and go to state 21

    TYPE                           shift and go to state 17

state 13

    (1) PROGRAM -> COMP ID G1 F_VARDEC G2 F_FUNCDEC . F1 MAIN_BLOCK
    (140) F1 -> . e
    (139) e -> .

    MAIN            reduce using rule 139 (e -> .)

    F1                             shift and go to state 22
    e                              shift and go to state 23

state 14

    (2) F_FUNCDEC -> FUNCDEC . F_FUNCDEC
    (2) F_FUNCDEC -> . FUNCDEC F_FUNCDEC
    (3) F_FUNCDEC -> . e
    (13) FUNCDEC -> . FUNC F1 AUXFUNCDEC FUNCBLOCK
    (139) e -> .

    FUNC            shift and go to state 16
    MAIN            reduce using rule 139 (e -> .)

    FUNCDEC                        shift and go to state 14
    F_FUNCDEC                      shift and go to state 24
    e                              shift and go to state 15

state 15

    (3) F_FUNCDEC -> e .

    MAIN            reduce using rule 3 (F_FUNCDEC -> e .)


state 16

    (13) FUNCDEC -> FUNC . F1 AUXFUNCDEC FUNCBLOCK
    (140) F1 -> . e
    (139) e -> .

    ID              reduce using rule 139 (e -> .)

    F1                             shift and go to state 25
    e                              shift and go to state 23

state 17

    (4) VARDEC -> VAR LPAR TYPE . ID VARIDB VARDECB RPAR

    ID              shift and go to state 26


state 18

    (54) TYPE -> NUMBERTYPE .

    ID              reduce using rule 54 (TYPE -> NUMBERTYPE .)


state 19

    (55) TYPE -> NOTETYPE .

    ID              reduce using rule 55 (TYPE -> NOTETYPE .)


state 20

    (56) TYPE -> BOOLTYPE .

    ID              reduce using rule 56 (TYPE -> BOOLTYPE .)


state 21

    (57) TYPE -> STRINGTYPE .

    ID              reduce using rule 57 (TYPE -> STRINGTYPE .)


state 22

    (1) PROGRAM -> COMP ID G1 F_VARDEC G2 F_FUNCDEC F1 . MAIN_BLOCK
    (25) MAIN_BLOCK -> . MAIN FUNCBLOCK

    MAIN            shift and go to state 28

    MAIN_BLOCK                     shift and go to state 27

state 23

    (140) F1 -> e .

    MAIN            reduce using rule 140 (F1 -> e .)
    ID              reduce using rule 140 (F1 -> e .)


state 24

    (2) F_FUNCDEC -> FUNCDEC F_FUNCDEC .

    MAIN            reduce using rule 2 (F_FUNCDEC -> FUNCDEC F_FUNCDEC .)


state 25

    (13) FUNCDEC -> FUNC F1 . AUXFUNCDEC FUNCBLOCK
    (14) AUXFUNCDEC -> . ID DDOT F_ARGS LARROW RETTYPE

    ID              shift and go to state 30

    AUXFUNCDEC                     shift and go to state 29

state 26

    (4) VARDEC -> VAR LPAR TYPE ID . VARIDB VARDECB RPAR
    (6) VARIDB -> . LSQUARE NUMBER RSQUARE VARIDB
    (7) VARIDB -> . e
    (139) e -> .

    LSQUARE         shift and go to state 32
    COMMA           reduce using rule 139 (e -> .)
    RPAR            reduce using rule 139 (e -> .)

    VARIDB                         shift and go to state 31
    e                              shift and go to state 33

state 27

    (1) PROGRAM -> COMP ID G1 F_VARDEC G2 F_FUNCDEC F1 MAIN_BLOCK .

    $end            reduce using rule 1 (PROGRAM -> COMP ID G1 F_VARDEC G2 F_FUNCDEC F1 MAIN_BLOCK .)


state 28

    (25) MAIN_BLOCK -> MAIN . FUNCBLOCK
    (17) FUNCBLOCK -> . LTRIAN F_VARDEC STATEMENTS F_RETURN RTRIAN

    LTRIAN          shift and go to state 35

    FUNCBLOCK                      shift and go to state 34

state 29

    (13) FUNCDEC -> FUNC F1 AUXFUNCDEC . FUNCBLOCK
    (17) FUNCBLOCK -> . LTRIAN F_VARDEC STATEMENTS F_RETURN RTRIAN

    LTRIAN          shift and go to state 35

    FUNCBLOCK                      shift and go to state 36

state 30

    (14) AUXFUNCDEC -> ID . DDOT F_ARGS LARROW RETTYPE

    DDOT            shift and go to state 37


state 31

    (4) VARDEC -> VAR LPAR TYPE ID VARIDB . VARDECB RPAR
    (11) VARDECB -> . COMMA TYPE ID VARIDB VARDECB
    (12) VARDECB -> . e
    (139) e -> .

    COMMA           shift and go to state 39
    RPAR            reduce using rule 139 (e -> .)

    VARDECB                        shift and go to state 38
    e                              shift and go to state 40

state 32

    (6) VARIDB -> LSQUARE . NUMBER RSQUARE VARIDB

    NUMBER          shift and go to state 41


state 33

    (7) VARIDB -> e .

    COMMA           reduce using rule 7 (VARIDB -> e .)
    RPAR            reduce using rule 7 (VARIDB -> e .)


state 34

    (25) MAIN_BLOCK -> MAIN FUNCBLOCK .

    $end            reduce using rule 25 (MAIN_BLOCK -> MAIN FUNCBLOCK .)


state 35

    (17) FUNCBLOCK -> LTRIAN . F_VARDEC STATEMENTS F_RETURN RTRIAN
    (18) F_VARDEC -> . VARDEC
    (19) F_VARDEC -> . e
    (4) VARDEC -> . VAR LPAR TYPE ID VARIDB VARDECB RPAR
    (139) e -> .

    VAR             shift and go to state 9
    ID              reduce using rule 139 (e -> .)
    WHILE           reduce using rule 139 (e -> .)
    LRITT           reduce using rule 139 (e -> .)
    IF              reduce using rule 139 (e -> .)
    DISP            reduce using rule 139 (e -> .)
    PLAYT           reduce using rule 139 (e -> .)
    STREAMT         reduce using rule 139 (e -> .)
    MST             reduce using rule 139 (e -> .)
    INPUT           reduce using rule 139 (e -> .)
    RETURN          reduce using rule 139 (e -> .)
    RTRIAN          reduce using rule 139 (e -> .)

    F_VARDEC                       shift and go to state 42
    VARDEC                         shift and go to state 7
    e                              shift and go to state 8

state 36

    (13) FUNCDEC -> FUNC F1 AUXFUNCDEC FUNCBLOCK .

    FUNC            reduce using rule 13 (FUNCDEC -> FUNC F1 AUXFUNCDEC FUNCBLOCK .)
    MAIN            reduce using rule 13 (FUNCDEC -> FUNC F1 AUXFUNCDEC FUNCBLOCK .)


state 37

    (14) AUXFUNCDEC -> ID DDOT . F_ARGS LARROW RETTYPE
    (15) F_ARGS -> . ARGS
    (16) F_ARGS -> . e
    (35) ARGS -> . TYPE e ID H_ARGS
    (139) e -> .
    (54) TYPE -> . NUMBERTYPE
    (55) TYPE -> . NOTETYPE
    (56) TYPE -> . BOOLTYPE
    (57) TYPE -> . STRINGTYPE

    LARROW          reduce using rule 139 (e -> .)
    NUMBERTYPE      shift and go to state 18
    NOTETYPE        shift and go to state 19
    BOOLTYPE        shift and go to state 20
    STRINGTYPE      shift and go to state 21

    F_ARGS                         shift and go to state 43
    ARGS                           shift and go to state 44
    e                              shift and go to state 45
    TYPE                           shift and go to state 46

state 38

    (4) VARDEC -> VAR LPAR TYPE ID VARIDB VARDECB . RPAR

    RPAR            shift and go to state 47


state 39

    (11) VARDECB -> COMMA . TYPE ID VARIDB VARDECB
    (54) TYPE -> . NUMBERTYPE
    (55) TYPE -> . NOTETYPE
    (56) TYPE -> . BOOLTYPE
    (57) TYPE -> . STRINGTYPE

    NUMBERTYPE      shift and go to state 18
    NOTETYPE        shift and go to state 19
    BOOLTYPE        shift and go to state 20
    STRINGTYPE      shift and go to state 21

    TYPE                           shift and go to state 48

state 40

    (12) VARDECB -> e .

    RPAR            reduce using rule 12 (VARDECB -> e .)


state 41

    (6) VARIDB -> LSQUARE NUMBER . RSQUARE VARIDB

    RSQUARE         shift and go to state 49


state 42

    (17) FUNCBLOCK -> LTRIAN F_VARDEC . STATEMENTS F_RETURN RTRIAN
    (22) STATEMENTS -> . STATEMENT N0 STATEMENTS
    (23) STATEMENTS -> . e
    (26) STATEMENT -> . ASSIGN SEMICOLON
    (27) STATEMENT -> . FUNCCALL SEMICOLON
    (28) STATEMENT -> . WHILE_BLOCK
    (29) STATEMENT -> . RITORNELLO
    (30) STATEMENT -> . IF_BLOCK
    (31) STATEMENT -> . PRINT SEMICOLON
    (32) STATEMENT -> . PLAYFUNCS SEMICOLON
    (33) STATEMENT -> . MUSICFUNCS SEMICOLON
    (34) STATEMENT -> . READ SEMICOLON
    (139) e -> .
    (65) ASSIGN -> . ID EXPVARIDB ASSIGNATION ASSIGNH
    (44) FUNCCALL -> . ID LPAR CALLARGS RPAR
    (80) WHILE_BLOCK -> . WHILE W1 DDOT EXPRESSION A1 BLOCK W2
    (83) RITORNELLO -> . LRITT RITARG STATEMENTS RRITT
    (66) IF_BLOCK -> . IF DDOT EXPRESSION A1 IF_B
    (49) PRINT -> . DISP LPAR CALLARGS RPAR
    (52) PLAYFUNCS -> . PLAYT LPAR EXP COMMA EXP RPAR
    (53) PLAYFUNCS -> . PLAYT LPAR SILENCE COMMA EXP COMMA EXP RPAR
    (50) MUSICFUNCS -> . STREAMT LPAR EXP RPAR
    (51) MUSICFUNCS -> . MST LPAR RPAR
    (45) READ -> . INPUT LPAR READAUX RPAR

    RETURN          reduce using rule 139 (e -> .)
    RTRIAN          reduce using rule 139 (e -> .)
    ID              shift and go to state 62
    WHILE           shift and go to state 63
    LRITT           shift and go to state 64
    IF              shift and go to state 65
    DISP            shift and go to state 66
    PLAYT           shift and go to state 67
    STREAMT         shift and go to state 68
    MST             shift and go to state 69
    INPUT           shift and go to state 70

    STATEMENTS                     shift and go to state 50
    STATEMENT                      shift and go to state 51
    e                              shift and go to state 52
    ASSIGN                         shift and go to state 53
    FUNCCALL                       shift and go to state 54
    WHILE_BLOCK                    shift and go to state 55
    RITORNELLO                     shift and go to state 56
    IF_BLOCK                       shift and go to state 57
    PRINT                          shift and go to state 58
    PLAYFUNCS                      shift and go to state 59
    MUSICFUNCS                     shift and go to state 60
    READ                           shift and go to state 61

state 43

    (14) AUXFUNCDEC -> ID DDOT F_ARGS . LARROW RETTYPE

    LARROW          shift and go to state 71


state 44

    (15) F_ARGS -> ARGS .

    LARROW          reduce using rule 15 (F_ARGS -> ARGS .)


state 45

    (16) F_ARGS -> e .

    LARROW          reduce using rule 16 (F_ARGS -> e .)


state 46

    (35) ARGS -> TYPE . e ID H_ARGS
    (139) e -> .

    ID              reduce using rule 139 (e -> .)

    e                              shift and go to state 72

state 47

    (4) VARDEC -> VAR LPAR TYPE ID VARIDB VARDECB RPAR .

    FUNC            reduce using rule 4 (VARDEC -> VAR LPAR TYPE ID VARIDB VARDECB RPAR .)
    MAIN            reduce using rule 4 (VARDEC -> VAR LPAR TYPE ID VARIDB VARDECB RPAR .)
    ID              reduce using rule 4 (VARDEC -> VAR LPAR TYPE ID VARIDB VARDECB RPAR .)
    WHILE           reduce using rule 4 (VARDEC -> VAR LPAR TYPE ID VARIDB VARDECB RPAR .)
    LRITT           reduce using rule 4 (VARDEC -> VAR LPAR TYPE ID VARIDB VARDECB RPAR .)
    IF              reduce using rule 4 (VARDEC -> VAR LPAR TYPE ID VARIDB VARDECB RPAR .)
    DISP            reduce using rule 4 (VARDEC -> VAR LPAR TYPE ID VARIDB VARDECB RPAR .)
    PLAYT           reduce using rule 4 (VARDEC -> VAR LPAR TYPE ID VARIDB VARDECB RPAR .)
    STREAMT         reduce using rule 4 (VARDEC -> VAR LPAR TYPE ID VARIDB VARDECB RPAR .)
    MST             reduce using rule 4 (VARDEC -> VAR LPAR TYPE ID VARIDB VARDECB RPAR .)
    INPUT           reduce using rule 4 (VARDEC -> VAR LPAR TYPE ID VARIDB VARDECB RPAR .)
    RETURN          reduce using rule 4 (VARDEC -> VAR LPAR TYPE ID VARIDB VARDECB RPAR .)
    RTRIAN          reduce using rule 4 (VARDEC -> VAR LPAR TYPE ID VARIDB VARDECB RPAR .)


state 48

    (11) VARDECB -> COMMA TYPE . ID VARIDB VARDECB

    ID              shift and go to state 73


state 49

    (6) VARIDB -> LSQUARE NUMBER RSQUARE . VARIDB
    (6) VARIDB -> . LSQUARE NUMBER RSQUARE VARIDB
    (7) VARIDB -> . e
    (139) e -> .

    LSQUARE         shift and go to state 32
    COMMA           reduce using rule 139 (e -> .)
    RPAR            reduce using rule 139 (e -> .)

    VARIDB                         shift and go to state 74
    e                              shift and go to state 33

state 50

    (17) FUNCBLOCK -> LTRIAN F_VARDEC STATEMENTS . F_RETURN RTRIAN
    (20) F_RETURN -> . RETURN EXPRESSION SEMICOLON
    (21) F_RETURN -> . e
    (139) e -> .

    RETURN          shift and go to state 76
    RTRIAN          reduce using rule 139 (e -> .)

    F_RETURN                       shift and go to state 75
    e                              shift and go to state 77

state 51

    (22) STATEMENTS -> STATEMENT . N0 STATEMENTS
    (24) N0 -> . e
    (139) e -> .

    ID              reduce using rule 139 (e -> .)
    WHILE           reduce using rule 139 (e -> .)
    LRITT           reduce using rule 139 (e -> .)
    IF              reduce using rule 139 (e -> .)
    DISP            reduce using rule 139 (e -> .)
    PLAYT           reduce using rule 139 (e -> .)
    STREAMT         reduce using rule 139 (e -> .)
    MST             reduce using rule 139 (e -> .)
    INPUT           reduce using rule 139 (e -> .)
    RETURN          reduce using rule 139 (e -> .)
    RTRIAN          reduce using rule 139 (e -> .)
    RRITT           reduce using rule 139 (e -> .)

    N0                             shift and go to state 78
    e                              shift and go to state 79

state 52

    (23) STATEMENTS -> e .

    RETURN          reduce using rule 23 (STATEMENTS -> e .)
    RTRIAN          reduce using rule 23 (STATEMENTS -> e .)
    RRITT           reduce using rule 23 (STATEMENTS -> e .)


state 53

    (26) STATEMENT -> ASSIGN . SEMICOLON

    SEMICOLON       shift and go to state 80


state 54

    (27) STATEMENT -> FUNCCALL . SEMICOLON

    SEMICOLON       shift and go to state 81


state 55

    (28) STATEMENT -> WHILE_BLOCK .

    ID              reduce using rule 28 (STATEMENT -> WHILE_BLOCK .)
    WHILE           reduce using rule 28 (STATEMENT -> WHILE_BLOCK .)
    LRITT           reduce using rule 28 (STATEMENT -> WHILE_BLOCK .)
    IF              reduce using rule 28 (STATEMENT -> WHILE_BLOCK .)
    DISP            reduce using rule 28 (STATEMENT -> WHILE_BLOCK .)
    PLAYT           reduce using rule 28 (STATEMENT -> WHILE_BLOCK .)
    STREAMT         reduce using rule 28 (STATEMENT -> WHILE_BLOCK .)
    MST             reduce using rule 28 (STATEMENT -> WHILE_BLOCK .)
    INPUT           reduce using rule 28 (STATEMENT -> WHILE_BLOCK .)
    RETURN          reduce using rule 28 (STATEMENT -> WHILE_BLOCK .)
    RTRIAN          reduce using rule 28 (STATEMENT -> WHILE_BLOCK .)
    RRITT           reduce using rule 28 (STATEMENT -> WHILE_BLOCK .)


state 56

    (29) STATEMENT -> RITORNELLO .

    ID              reduce using rule 29 (STATEMENT -> RITORNELLO .)
    WHILE           reduce using rule 29 (STATEMENT -> RITORNELLO .)
    LRITT           reduce using rule 29 (STATEMENT -> RITORNELLO .)
    IF              reduce using rule 29 (STATEMENT -> RITORNELLO .)
    DISP            reduce using rule 29 (STATEMENT -> RITORNELLO .)
    PLAYT           reduce using rule 29 (STATEMENT -> RITORNELLO .)
    STREAMT         reduce using rule 29 (STATEMENT -> RITORNELLO .)
    MST             reduce using rule 29 (STATEMENT -> RITORNELLO .)
    INPUT           reduce using rule 29 (STATEMENT -> RITORNELLO .)
    RETURN          reduce using rule 29 (STATEMENT -> RITORNELLO .)
    RTRIAN          reduce using rule 29 (STATEMENT -> RITORNELLO .)
    RRITT           reduce using rule 29 (STATEMENT -> RITORNELLO .)


state 57

    (30) STATEMENT -> IF_BLOCK .

    ID              reduce using rule 30 (STATEMENT -> IF_BLOCK .)
    WHILE           reduce using rule 30 (STATEMENT -> IF_BLOCK .)
    LRITT           reduce using rule 30 (STATEMENT -> IF_BLOCK .)
    IF              reduce using rule 30 (STATEMENT -> IF_BLOCK .)
    DISP            reduce using rule 30 (STATEMENT -> IF_BLOCK .)
    PLAYT           reduce using rule 30 (STATEMENT -> IF_BLOCK .)
    STREAMT         reduce using rule 30 (STATEMENT -> IF_BLOCK .)
    MST             reduce using rule 30 (STATEMENT -> IF_BLOCK .)
    INPUT           reduce using rule 30 (STATEMENT -> IF_BLOCK .)
    RETURN          reduce using rule 30 (STATEMENT -> IF_BLOCK .)
    RTRIAN          reduce using rule 30 (STATEMENT -> IF_BLOCK .)
    RRITT           reduce using rule 30 (STATEMENT -> IF_BLOCK .)


state 58

    (31) STATEMENT -> PRINT . SEMICOLON

    SEMICOLON       shift and go to state 82


state 59

    (32) STATEMENT -> PLAYFUNCS . SEMICOLON

    SEMICOLON       shift and go to state 83


state 60

    (33) STATEMENT -> MUSICFUNCS . SEMICOLON

    SEMICOLON       shift and go to state 84


state 61

    (34) STATEMENT -> READ . SEMICOLON

    SEMICOLON       shift and go to state 85


state 62

    (65) ASSIGN -> ID . EXPVARIDB ASSIGNATION ASSIGNH
    (44) FUNCCALL -> ID . LPAR CALLARGS RPAR
    (9) EXPVARIDB -> . LSQUARE C1 EXP C2 RSQUARE EXPVARIDB
    (10) EXPVARIDB -> . e
    (139) e -> .

    LPAR            shift and go to state 87
    LSQUARE         shift and go to state 88
    ASSIGNATION     reduce using rule 139 (e -> .)

    EXPVARIDB                      shift and go to state 86
    e                              shift and go to state 89

state 63

    (80) WHILE_BLOCK -> WHILE . W1 DDOT EXPRESSION A1 BLOCK W2
    (81) W1 -> . e
    (139) e -> .

    DDOT            reduce using rule 139 (e -> .)

    W1                             shift and go to state 90
    e                              shift and go to state 91

state 64

    (83) RITORNELLO -> LRITT . RITARG STATEMENTS RRITT
    (84) RITARG -> . LPAR EXPRESSION RPAR LARROW
    (85) RITARG -> . e
    (139) e -> .

    LPAR            shift and go to state 93
    ID              reduce using rule 139 (e -> .)
    WHILE           reduce using rule 139 (e -> .)
    LRITT           reduce using rule 139 (e -> .)
    IF              reduce using rule 139 (e -> .)
    DISP            reduce using rule 139 (e -> .)
    PLAYT           reduce using rule 139 (e -> .)
    STREAMT         reduce using rule 139 (e -> .)
    MST             reduce using rule 139 (e -> .)
    INPUT           reduce using rule 139 (e -> .)
    RRITT           reduce using rule 139 (e -> .)

    RITARG                         shift and go to state 92
    e                              shift and go to state 94

state 65

    (66) IF_BLOCK -> IF . DDOT EXPRESSION A1 IF_B

    DDOT            shift and go to state 95


state 66

    (49) PRINT -> DISP . LPAR CALLARGS RPAR

    LPAR            shift and go to state 96


state 67

    (52) PLAYFUNCS -> PLAYT . LPAR EXP COMMA EXP RPAR
    (53) PLAYFUNCS -> PLAYT . LPAR SILENCE COMMA EXP COMMA EXP RPAR

    LPAR            shift and go to state 97


state 68

    (50) MUSICFUNCS -> STREAMT . LPAR EXP RPAR

    LPAR            shift and go to state 98


state 69

    (51) MUSICFUNCS -> MST . LPAR RPAR

    LPAR            shift and go to state 99


state 70

    (45) READ -> INPUT . LPAR READAUX RPAR

    LPAR            shift and go to state 100


state 71

    (14) AUXFUNCDEC -> ID DDOT F_ARGS LARROW . RETTYPE
    (58) RETTYPE -> . NUMBERTYPE
    (59) RETTYPE -> . NOTETYPE
    (60) RETTYPE -> . BOOLTYPE
    (61) RETTYPE -> . SILENCE

    NUMBERTYPE      shift and go to state 102
    NOTETYPE        shift and go to state 103
    BOOLTYPE        shift and go to state 104
    SILENCE         shift and go to state 105

    RETTYPE                        shift and go to state 101

state 72

    (35) ARGS -> TYPE e . ID H_ARGS

    ID              shift and go to state 106


state 73

    (11) VARDECB -> COMMA TYPE ID . VARIDB VARDECB
    (6) VARIDB -> . LSQUARE NUMBER RSQUARE VARIDB
    (7) VARIDB -> . e
    (139) e -> .

    LSQUARE         shift and go to state 32
    COMMA           reduce using rule 139 (e -> .)
    RPAR            reduce using rule 139 (e -> .)

    VARIDB                         shift and go to state 107
    e                              shift and go to state 33

state 74

    (6) VARIDB -> LSQUARE NUMBER RSQUARE VARIDB .

    COMMA           reduce using rule 6 (VARIDB -> LSQUARE NUMBER RSQUARE VARIDB .)
    RPAR            reduce using rule 6 (VARIDB -> LSQUARE NUMBER RSQUARE VARIDB .)


state 75

    (17) FUNCBLOCK -> LTRIAN F_VARDEC STATEMENTS F_RETURN . RTRIAN

    RTRIAN          shift and go to state 108


state 76

    (20) F_RETURN -> RETURN . EXPRESSION SEMICOLON
    (86) EXPRESSION -> . EXPOR
    (87) EXPOR -> . EXPAND P10 EXPORB
    (92) EXPAND -> . EXPEQ P9 EXPANDB
    (97) EXPEQ -> . EXP P8 EXPEQB
    (103) EXP -> . EXPR P7 EXPB
    (109) EXPR -> . TERM P4 EXPR_B
    (115) TERM -> . FACTOR P5 TERM_B
    (125) FACTOR -> . NUMBER
    (126) FACTOR -> . ID
    (127) FACTOR -> . FACTOR_CTE
    (128) FACTOR -> . LPAR P6 EXPRESSION RPAR
    (129) FACTOR -> . IDVARID
    (130) FACTOR -> . FUNCCALL
    (131) FACTOR -> . VARCTE
    (132) FACTOR -> . READ
    (134) FACTOR_CTE -> . PLUS NUMBER
    (135) FACTOR_CTE -> . MINUS NUMBER
    (121) IDVARID -> . ID EXPVARID
    (44) FUNCCALL -> . ID LPAR CALLARGS RPAR
    (136) VARCTE -> . NOTE
    (137) VARCTE -> . BOOL
    (138) VARCTE -> . STRING
    (45) READ -> . INPUT LPAR READAUX RPAR

    NUMBER          shift and go to state 117
    ID              shift and go to state 118
    LPAR            shift and go to state 120
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    NOTE            shift and go to state 127
    BOOL            shift and go to state 128
    STRING          shift and go to state 129
    INPUT           shift and go to state 70

    EXPRESSION                     shift and go to state 109
    EXPOR                          shift and go to state 110
    EXPAND                         shift and go to state 111
    EXPEQ                          shift and go to state 112
    EXP                            shift and go to state 113
    EXPR                           shift and go to state 114
    TERM                           shift and go to state 115
    FACTOR                         shift and go to state 116
    FACTOR_CTE                     shift and go to state 119
    IDVARID                        shift and go to state 121
    FUNCCALL                       shift and go to state 122
    VARCTE                         shift and go to state 123
    READ                           shift and go to state 124

state 77

    (21) F_RETURN -> e .

    RTRIAN          reduce using rule 21 (F_RETURN -> e .)


state 78

    (22) STATEMENTS -> STATEMENT N0 . STATEMENTS
    (22) STATEMENTS -> . STATEMENT N0 STATEMENTS
    (23) STATEMENTS -> . e
    (26) STATEMENT -> . ASSIGN SEMICOLON
    (27) STATEMENT -> . FUNCCALL SEMICOLON
    (28) STATEMENT -> . WHILE_BLOCK
    (29) STATEMENT -> . RITORNELLO
    (30) STATEMENT -> . IF_BLOCK
    (31) STATEMENT -> . PRINT SEMICOLON
    (32) STATEMENT -> . PLAYFUNCS SEMICOLON
    (33) STATEMENT -> . MUSICFUNCS SEMICOLON
    (34) STATEMENT -> . READ SEMICOLON
    (139) e -> .
    (65) ASSIGN -> . ID EXPVARIDB ASSIGNATION ASSIGNH
    (44) FUNCCALL -> . ID LPAR CALLARGS RPAR
    (80) WHILE_BLOCK -> . WHILE W1 DDOT EXPRESSION A1 BLOCK W2
    (83) RITORNELLO -> . LRITT RITARG STATEMENTS RRITT
    (66) IF_BLOCK -> . IF DDOT EXPRESSION A1 IF_B
    (49) PRINT -> . DISP LPAR CALLARGS RPAR
    (52) PLAYFUNCS -> . PLAYT LPAR EXP COMMA EXP RPAR
    (53) PLAYFUNCS -> . PLAYT LPAR SILENCE COMMA EXP COMMA EXP RPAR
    (50) MUSICFUNCS -> . STREAMT LPAR EXP RPAR
    (51) MUSICFUNCS -> . MST LPAR RPAR
    (45) READ -> . INPUT LPAR READAUX RPAR

    RETURN          reduce using rule 139 (e -> .)
    RTRIAN          reduce using rule 139 (e -> .)
    RRITT           reduce using rule 139 (e -> .)
    ID              shift and go to state 62
    WHILE           shift and go to state 63
    LRITT           shift and go to state 64
    IF              shift and go to state 65
    DISP            shift and go to state 66
    PLAYT           shift and go to state 67
    STREAMT         shift and go to state 68
    MST             shift and go to state 69
    INPUT           shift and go to state 70

    STATEMENT                      shift and go to state 51
    STATEMENTS                     shift and go to state 130
    e                              shift and go to state 52
    ASSIGN                         shift and go to state 53
    FUNCCALL                       shift and go to state 54
    WHILE_BLOCK                    shift and go to state 55
    RITORNELLO                     shift and go to state 56
    IF_BLOCK                       shift and go to state 57
    PRINT                          shift and go to state 58
    PLAYFUNCS                      shift and go to state 59
    MUSICFUNCS                     shift and go to state 60
    READ                           shift and go to state 61

state 79

    (24) N0 -> e .

    ID              reduce using rule 24 (N0 -> e .)
    WHILE           reduce using rule 24 (N0 -> e .)
    LRITT           reduce using rule 24 (N0 -> e .)
    IF              reduce using rule 24 (N0 -> e .)
    DISP            reduce using rule 24 (N0 -> e .)
    PLAYT           reduce using rule 24 (N0 -> e .)
    STREAMT         reduce using rule 24 (N0 -> e .)
    MST             reduce using rule 24 (N0 -> e .)
    INPUT           reduce using rule 24 (N0 -> e .)
    RETURN          reduce using rule 24 (N0 -> e .)
    RTRIAN          reduce using rule 24 (N0 -> e .)
    RRITT           reduce using rule 24 (N0 -> e .)


state 80

    (26) STATEMENT -> ASSIGN SEMICOLON .

    ID              reduce using rule 26 (STATEMENT -> ASSIGN SEMICOLON .)
    WHILE           reduce using rule 26 (STATEMENT -> ASSIGN SEMICOLON .)
    LRITT           reduce using rule 26 (STATEMENT -> ASSIGN SEMICOLON .)
    IF              reduce using rule 26 (STATEMENT -> ASSIGN SEMICOLON .)
    DISP            reduce using rule 26 (STATEMENT -> ASSIGN SEMICOLON .)
    PLAYT           reduce using rule 26 (STATEMENT -> ASSIGN SEMICOLON .)
    STREAMT         reduce using rule 26 (STATEMENT -> ASSIGN SEMICOLON .)
    MST             reduce using rule 26 (STATEMENT -> ASSIGN SEMICOLON .)
    INPUT           reduce using rule 26 (STATEMENT -> ASSIGN SEMICOLON .)
    RETURN          reduce using rule 26 (STATEMENT -> ASSIGN SEMICOLON .)
    RTRIAN          reduce using rule 26 (STATEMENT -> ASSIGN SEMICOLON .)
    RRITT           reduce using rule 26 (STATEMENT -> ASSIGN SEMICOLON .)


state 81

    (27) STATEMENT -> FUNCCALL SEMICOLON .

    ID              reduce using rule 27 (STATEMENT -> FUNCCALL SEMICOLON .)
    WHILE           reduce using rule 27 (STATEMENT -> FUNCCALL SEMICOLON .)
    LRITT           reduce using rule 27 (STATEMENT -> FUNCCALL SEMICOLON .)
    IF              reduce using rule 27 (STATEMENT -> FUNCCALL SEMICOLON .)
    DISP            reduce using rule 27 (STATEMENT -> FUNCCALL SEMICOLON .)
    PLAYT           reduce using rule 27 (STATEMENT -> FUNCCALL SEMICOLON .)
    STREAMT         reduce using rule 27 (STATEMENT -> FUNCCALL SEMICOLON .)
    MST             reduce using rule 27 (STATEMENT -> FUNCCALL SEMICOLON .)
    INPUT           reduce using rule 27 (STATEMENT -> FUNCCALL SEMICOLON .)
    RETURN          reduce using rule 27 (STATEMENT -> FUNCCALL SEMICOLON .)
    RTRIAN          reduce using rule 27 (STATEMENT -> FUNCCALL SEMICOLON .)
    RRITT           reduce using rule 27 (STATEMENT -> FUNCCALL SEMICOLON .)


state 82

    (31) STATEMENT -> PRINT SEMICOLON .

    ID              reduce using rule 31 (STATEMENT -> PRINT SEMICOLON .)
    WHILE           reduce using rule 31 (STATEMENT -> PRINT SEMICOLON .)
    LRITT           reduce using rule 31 (STATEMENT -> PRINT SEMICOLON .)
    IF              reduce using rule 31 (STATEMENT -> PRINT SEMICOLON .)
    DISP            reduce using rule 31 (STATEMENT -> PRINT SEMICOLON .)
    PLAYT           reduce using rule 31 (STATEMENT -> PRINT SEMICOLON .)
    STREAMT         reduce using rule 31 (STATEMENT -> PRINT SEMICOLON .)
    MST             reduce using rule 31 (STATEMENT -> PRINT SEMICOLON .)
    INPUT           reduce using rule 31 (STATEMENT -> PRINT SEMICOLON .)
    RETURN          reduce using rule 31 (STATEMENT -> PRINT SEMICOLON .)
    RTRIAN          reduce using rule 31 (STATEMENT -> PRINT SEMICOLON .)
    RRITT           reduce using rule 31 (STATEMENT -> PRINT SEMICOLON .)


state 83

    (32) STATEMENT -> PLAYFUNCS SEMICOLON .

    ID              reduce using rule 32 (STATEMENT -> PLAYFUNCS SEMICOLON .)
    WHILE           reduce using rule 32 (STATEMENT -> PLAYFUNCS SEMICOLON .)
    LRITT           reduce using rule 32 (STATEMENT -> PLAYFUNCS SEMICOLON .)
    IF              reduce using rule 32 (STATEMENT -> PLAYFUNCS SEMICOLON .)
    DISP            reduce using rule 32 (STATEMENT -> PLAYFUNCS SEMICOLON .)
    PLAYT           reduce using rule 32 (STATEMENT -> PLAYFUNCS SEMICOLON .)
    STREAMT         reduce using rule 32 (STATEMENT -> PLAYFUNCS SEMICOLON .)
    MST             reduce using rule 32 (STATEMENT -> PLAYFUNCS SEMICOLON .)
    INPUT           reduce using rule 32 (STATEMENT -> PLAYFUNCS SEMICOLON .)
    RETURN          reduce using rule 32 (STATEMENT -> PLAYFUNCS SEMICOLON .)
    RTRIAN          reduce using rule 32 (STATEMENT -> PLAYFUNCS SEMICOLON .)
    RRITT           reduce using rule 32 (STATEMENT -> PLAYFUNCS SEMICOLON .)


state 84

    (33) STATEMENT -> MUSICFUNCS SEMICOLON .

    ID              reduce using rule 33 (STATEMENT -> MUSICFUNCS SEMICOLON .)
    WHILE           reduce using rule 33 (STATEMENT -> MUSICFUNCS SEMICOLON .)
    LRITT           reduce using rule 33 (STATEMENT -> MUSICFUNCS SEMICOLON .)
    IF              reduce using rule 33 (STATEMENT -> MUSICFUNCS SEMICOLON .)
    DISP            reduce using rule 33 (STATEMENT -> MUSICFUNCS SEMICOLON .)
    PLAYT           reduce using rule 33 (STATEMENT -> MUSICFUNCS SEMICOLON .)
    STREAMT         reduce using rule 33 (STATEMENT -> MUSICFUNCS SEMICOLON .)
    MST             reduce using rule 33 (STATEMENT -> MUSICFUNCS SEMICOLON .)
    INPUT           reduce using rule 33 (STATEMENT -> MUSICFUNCS SEMICOLON .)
    RETURN          reduce using rule 33 (STATEMENT -> MUSICFUNCS SEMICOLON .)
    RTRIAN          reduce using rule 33 (STATEMENT -> MUSICFUNCS SEMICOLON .)
    RRITT           reduce using rule 33 (STATEMENT -> MUSICFUNCS SEMICOLON .)


state 85

    (34) STATEMENT -> READ SEMICOLON .

    ID              reduce using rule 34 (STATEMENT -> READ SEMICOLON .)
    WHILE           reduce using rule 34 (STATEMENT -> READ SEMICOLON .)
    LRITT           reduce using rule 34 (STATEMENT -> READ SEMICOLON .)
    IF              reduce using rule 34 (STATEMENT -> READ SEMICOLON .)
    DISP            reduce using rule 34 (STATEMENT -> READ SEMICOLON .)
    PLAYT           reduce using rule 34 (STATEMENT -> READ SEMICOLON .)
    STREAMT         reduce using rule 34 (STATEMENT -> READ SEMICOLON .)
    MST             reduce using rule 34 (STATEMENT -> READ SEMICOLON .)
    INPUT           reduce using rule 34 (STATEMENT -> READ SEMICOLON .)
    RETURN          reduce using rule 34 (STATEMENT -> READ SEMICOLON .)
    RTRIAN          reduce using rule 34 (STATEMENT -> READ SEMICOLON .)
    RRITT           reduce using rule 34 (STATEMENT -> READ SEMICOLON .)


state 86

    (65) ASSIGN -> ID EXPVARIDB . ASSIGNATION ASSIGNH

    ASSIGNATION     shift and go to state 131


state 87

    (44) FUNCCALL -> ID LPAR . CALLARGS RPAR
    (38) CALLARGS -> . C1 EXPRESSION C2 H_CALLARGS
    (39) CALLARGS -> . e
    (40) C1 -> . e
    (139) e -> .

    RPAR            reduce using rule 139 (e -> .)
    NUMBER          reduce using rule 139 (e -> .)
    ID              reduce using rule 139 (e -> .)
    LPAR            reduce using rule 139 (e -> .)
    PLUS            reduce using rule 139 (e -> .)
    MINUS           reduce using rule 139 (e -> .)
    NOTE            reduce using rule 139 (e -> .)
    BOOL            reduce using rule 139 (e -> .)
    STRING          reduce using rule 139 (e -> .)
    INPUT           reduce using rule 139 (e -> .)

    CALLARGS                       shift and go to state 132
    C1                             shift and go to state 133
    e                              shift and go to state 134

state 88

    (9) EXPVARIDB -> LSQUARE . C1 EXP C2 RSQUARE EXPVARIDB
    (40) C1 -> . e
    (139) e -> .

    NUMBER          reduce using rule 139 (e -> .)
    ID              reduce using rule 139 (e -> .)
    LPAR            reduce using rule 139 (e -> .)
    PLUS            reduce using rule 139 (e -> .)
    MINUS           reduce using rule 139 (e -> .)
    NOTE            reduce using rule 139 (e -> .)
    BOOL            reduce using rule 139 (e -> .)
    STRING          reduce using rule 139 (e -> .)
    INPUT           reduce using rule 139 (e -> .)

    C1                             shift and go to state 135
    e                              shift and go to state 136

state 89

    (10) EXPVARIDB -> e .

    ASSIGNATION     reduce using rule 10 (EXPVARIDB -> e .)
    TIMES           reduce using rule 10 (EXPVARIDB -> e .)
    DIVIDE          reduce using rule 10 (EXPVARIDB -> e .)
    PLUS            reduce using rule 10 (EXPVARIDB -> e .)
    MINUS           reduce using rule 10 (EXPVARIDB -> e .)
    GT              reduce using rule 10 (EXPVARIDB -> e .)
    LT              reduce using rule 10 (EXPVARIDB -> e .)
    EQ              reduce using rule 10 (EXPVARIDB -> e .)
    DIFF            reduce using rule 10 (EXPVARIDB -> e .)
    AND             reduce using rule 10 (EXPVARIDB -> e .)
    OR              reduce using rule 10 (EXPVARIDB -> e .)
    SEMICOLON       reduce using rule 10 (EXPVARIDB -> e .)
    RPAR            reduce using rule 10 (EXPVARIDB -> e .)
    LARROW          reduce using rule 10 (EXPVARIDB -> e .)
    LTRIAN          reduce using rule 10 (EXPVARIDB -> e .)
    COMMA           reduce using rule 10 (EXPVARIDB -> e .)
    RSQUARE         reduce using rule 10 (EXPVARIDB -> e .)


state 90

    (80) WHILE_BLOCK -> WHILE W1 . DDOT EXPRESSION A1 BLOCK W2

    DDOT            shift and go to state 137


state 91

    (81) W1 -> e .

    DDOT            reduce using rule 81 (W1 -> e .)


state 92

    (83) RITORNELLO -> LRITT RITARG . STATEMENTS RRITT
    (22) STATEMENTS -> . STATEMENT N0 STATEMENTS
    (23) STATEMENTS -> . e
    (26) STATEMENT -> . ASSIGN SEMICOLON
    (27) STATEMENT -> . FUNCCALL SEMICOLON
    (28) STATEMENT -> . WHILE_BLOCK
    (29) STATEMENT -> . RITORNELLO
    (30) STATEMENT -> . IF_BLOCK
    (31) STATEMENT -> . PRINT SEMICOLON
    (32) STATEMENT -> . PLAYFUNCS SEMICOLON
    (33) STATEMENT -> . MUSICFUNCS SEMICOLON
    (34) STATEMENT -> . READ SEMICOLON
    (139) e -> .
    (65) ASSIGN -> . ID EXPVARIDB ASSIGNATION ASSIGNH
    (44) FUNCCALL -> . ID LPAR CALLARGS RPAR
    (80) WHILE_BLOCK -> . WHILE W1 DDOT EXPRESSION A1 BLOCK W2
    (83) RITORNELLO -> . LRITT RITARG STATEMENTS RRITT
    (66) IF_BLOCK -> . IF DDOT EXPRESSION A1 IF_B
    (49) PRINT -> . DISP LPAR CALLARGS RPAR
    (52) PLAYFUNCS -> . PLAYT LPAR EXP COMMA EXP RPAR
    (53) PLAYFUNCS -> . PLAYT LPAR SILENCE COMMA EXP COMMA EXP RPAR
    (50) MUSICFUNCS -> . STREAMT LPAR EXP RPAR
    (51) MUSICFUNCS -> . MST LPAR RPAR
    (45) READ -> . INPUT LPAR READAUX RPAR

    RRITT           reduce using rule 139 (e -> .)
    ID              shift and go to state 62
    WHILE           shift and go to state 63
    LRITT           shift and go to state 64
    IF              shift and go to state 65
    DISP            shift and go to state 66
    PLAYT           shift and go to state 67
    STREAMT         shift and go to state 68
    MST             shift and go to state 69
    INPUT           shift and go to state 70

    STATEMENTS                     shift and go to state 138
    STATEMENT                      shift and go to state 51
    e                              shift and go to state 52
    ASSIGN                         shift and go to state 53
    FUNCCALL                       shift and go to state 54
    WHILE_BLOCK                    shift and go to state 55
    RITORNELLO                     shift and go to state 56
    IF_BLOCK                       shift and go to state 57
    PRINT                          shift and go to state 58
    PLAYFUNCS                      shift and go to state 59
    MUSICFUNCS                     shift and go to state 60
    READ                           shift and go to state 61

state 93

    (84) RITARG -> LPAR . EXPRESSION RPAR LARROW
    (86) EXPRESSION -> . EXPOR
    (87) EXPOR -> . EXPAND P10 EXPORB
    (92) EXPAND -> . EXPEQ P9 EXPANDB
    (97) EXPEQ -> . EXP P8 EXPEQB
    (103) EXP -> . EXPR P7 EXPB
    (109) EXPR -> . TERM P4 EXPR_B
    (115) TERM -> . FACTOR P5 TERM_B
    (125) FACTOR -> . NUMBER
    (126) FACTOR -> . ID
    (127) FACTOR -> . FACTOR_CTE
    (128) FACTOR -> . LPAR P6 EXPRESSION RPAR
    (129) FACTOR -> . IDVARID
    (130) FACTOR -> . FUNCCALL
    (131) FACTOR -> . VARCTE
    (132) FACTOR -> . READ
    (134) FACTOR_CTE -> . PLUS NUMBER
    (135) FACTOR_CTE -> . MINUS NUMBER
    (121) IDVARID -> . ID EXPVARID
    (44) FUNCCALL -> . ID LPAR CALLARGS RPAR
    (136) VARCTE -> . NOTE
    (137) VARCTE -> . BOOL
    (138) VARCTE -> . STRING
    (45) READ -> . INPUT LPAR READAUX RPAR

    NUMBER          shift and go to state 117
    ID              shift and go to state 118
    LPAR            shift and go to state 120
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    NOTE            shift and go to state 127
    BOOL            shift and go to state 128
    STRING          shift and go to state 129
    INPUT           shift and go to state 70

    EXPRESSION                     shift and go to state 139
    EXPOR                          shift and go to state 110
    EXPAND                         shift and go to state 111
    EXPEQ                          shift and go to state 112
    EXP                            shift and go to state 113
    EXPR                           shift and go to state 114
    TERM                           shift and go to state 115
    FACTOR                         shift and go to state 116
    FACTOR_CTE                     shift and go to state 119
    IDVARID                        shift and go to state 121
    FUNCCALL                       shift and go to state 122
    VARCTE                         shift and go to state 123
    READ                           shift and go to state 124

state 94

    (85) RITARG -> e .

    ID              reduce using rule 85 (RITARG -> e .)
    WHILE           reduce using rule 85 (RITARG -> e .)
    LRITT           reduce using rule 85 (RITARG -> e .)
    IF              reduce using rule 85 (RITARG -> e .)
    DISP            reduce using rule 85 (RITARG -> e .)
    PLAYT           reduce using rule 85 (RITARG -> e .)
    STREAMT         reduce using rule 85 (RITARG -> e .)
    MST             reduce using rule 85 (RITARG -> e .)
    INPUT           reduce using rule 85 (RITARG -> e .)
    RRITT           reduce using rule 85 (RITARG -> e .)


state 95

    (66) IF_BLOCK -> IF DDOT . EXPRESSION A1 IF_B
    (86) EXPRESSION -> . EXPOR
    (87) EXPOR -> . EXPAND P10 EXPORB
    (92) EXPAND -> . EXPEQ P9 EXPANDB
    (97) EXPEQ -> . EXP P8 EXPEQB
    (103) EXP -> . EXPR P7 EXPB
    (109) EXPR -> . TERM P4 EXPR_B
    (115) TERM -> . FACTOR P5 TERM_B
    (125) FACTOR -> . NUMBER
    (126) FACTOR -> . ID
    (127) FACTOR -> . FACTOR_CTE
    (128) FACTOR -> . LPAR P6 EXPRESSION RPAR
    (129) FACTOR -> . IDVARID
    (130) FACTOR -> . FUNCCALL
    (131) FACTOR -> . VARCTE
    (132) FACTOR -> . READ
    (134) FACTOR_CTE -> . PLUS NUMBER
    (135) FACTOR_CTE -> . MINUS NUMBER
    (121) IDVARID -> . ID EXPVARID
    (44) FUNCCALL -> . ID LPAR CALLARGS RPAR
    (136) VARCTE -> . NOTE
    (137) VARCTE -> . BOOL
    (138) VARCTE -> . STRING
    (45) READ -> . INPUT LPAR READAUX RPAR

    NUMBER          shift and go to state 117
    ID              shift and go to state 118
    LPAR            shift and go to state 120
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    NOTE            shift and go to state 127
    BOOL            shift and go to state 128
    STRING          shift and go to state 129
    INPUT           shift and go to state 70

    EXPRESSION                     shift and go to state 140
    EXPOR                          shift and go to state 110
    EXPAND                         shift and go to state 111
    EXPEQ                          shift and go to state 112
    EXP                            shift and go to state 113
    EXPR                           shift and go to state 114
    TERM                           shift and go to state 115
    FACTOR                         shift and go to state 116
    FACTOR_CTE                     shift and go to state 119
    IDVARID                        shift and go to state 121
    FUNCCALL                       shift and go to state 122
    VARCTE                         shift and go to state 123
    READ                           shift and go to state 124

state 96

    (49) PRINT -> DISP LPAR . CALLARGS RPAR
    (38) CALLARGS -> . C1 EXPRESSION C2 H_CALLARGS
    (39) CALLARGS -> . e
    (40) C1 -> . e
    (139) e -> .

    RPAR            reduce using rule 139 (e -> .)
    NUMBER          reduce using rule 139 (e -> .)
    ID              reduce using rule 139 (e -> .)
    LPAR            reduce using rule 139 (e -> .)
    PLUS            reduce using rule 139 (e -> .)
    MINUS           reduce using rule 139 (e -> .)
    NOTE            reduce using rule 139 (e -> .)
    BOOL            reduce using rule 139 (e -> .)
    STRING          reduce using rule 139 (e -> .)
    INPUT           reduce using rule 139 (e -> .)

    CALLARGS                       shift and go to state 141
    C1                             shift and go to state 133
    e                              shift and go to state 134

state 97

    (52) PLAYFUNCS -> PLAYT LPAR . EXP COMMA EXP RPAR
    (53) PLAYFUNCS -> PLAYT LPAR . SILENCE COMMA EXP COMMA EXP RPAR
    (103) EXP -> . EXPR P7 EXPB
    (109) EXPR -> . TERM P4 EXPR_B
    (115) TERM -> . FACTOR P5 TERM_B
    (125) FACTOR -> . NUMBER
    (126) FACTOR -> . ID
    (127) FACTOR -> . FACTOR_CTE
    (128) FACTOR -> . LPAR P6 EXPRESSION RPAR
    (129) FACTOR -> . IDVARID
    (130) FACTOR -> . FUNCCALL
    (131) FACTOR -> . VARCTE
    (132) FACTOR -> . READ
    (134) FACTOR_CTE -> . PLUS NUMBER
    (135) FACTOR_CTE -> . MINUS NUMBER
    (121) IDVARID -> . ID EXPVARID
    (44) FUNCCALL -> . ID LPAR CALLARGS RPAR
    (136) VARCTE -> . NOTE
    (137) VARCTE -> . BOOL
    (138) VARCTE -> . STRING
    (45) READ -> . INPUT LPAR READAUX RPAR

    SILENCE         shift and go to state 143
    NUMBER          shift and go to state 117
    ID              shift and go to state 118
    LPAR            shift and go to state 120
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    NOTE            shift and go to state 127
    BOOL            shift and go to state 128
    STRING          shift and go to state 129
    INPUT           shift and go to state 70

    EXP                            shift and go to state 142
    EXPR                           shift and go to state 114
    TERM                           shift and go to state 115
    FACTOR                         shift and go to state 116
    FACTOR_CTE                     shift and go to state 119
    IDVARID                        shift and go to state 121
    FUNCCALL                       shift and go to state 122
    VARCTE                         shift and go to state 123
    READ                           shift and go to state 124

state 98

    (50) MUSICFUNCS -> STREAMT LPAR . EXP RPAR
    (103) EXP -> . EXPR P7 EXPB
    (109) EXPR -> . TERM P4 EXPR_B
    (115) TERM -> . FACTOR P5 TERM_B
    (125) FACTOR -> . NUMBER
    (126) FACTOR -> . ID
    (127) FACTOR -> . FACTOR_CTE
    (128) FACTOR -> . LPAR P6 EXPRESSION RPAR
    (129) FACTOR -> . IDVARID
    (130) FACTOR -> . FUNCCALL
    (131) FACTOR -> . VARCTE
    (132) FACTOR -> . READ
    (134) FACTOR_CTE -> . PLUS NUMBER
    (135) FACTOR_CTE -> . MINUS NUMBER
    (121) IDVARID -> . ID EXPVARID
    (44) FUNCCALL -> . ID LPAR CALLARGS RPAR
    (136) VARCTE -> . NOTE
    (137) VARCTE -> . BOOL
    (138) VARCTE -> . STRING
    (45) READ -> . INPUT LPAR READAUX RPAR

    NUMBER          shift and go to state 117
    ID              shift and go to state 118
    LPAR            shift and go to state 120
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    NOTE            shift and go to state 127
    BOOL            shift and go to state 128
    STRING          shift and go to state 129
    INPUT           shift and go to state 70

    EXP                            shift and go to state 144
    EXPR                           shift and go to state 114
    TERM                           shift and go to state 115
    FACTOR                         shift and go to state 116
    FACTOR_CTE                     shift and go to state 119
    IDVARID                        shift and go to state 121
    FUNCCALL                       shift and go to state 122
    VARCTE                         shift and go to state 123
    READ                           shift and go to state 124

state 99

    (51) MUSICFUNCS -> MST LPAR . RPAR

    RPAR            shift and go to state 145


state 100

    (45) READ -> INPUT LPAR . READAUX RPAR
    (46) READAUX -> . NUMBERTYPE
    (47) READAUX -> . STRINGTYPE
    (48) READAUX -> . NOTETYPE

    NUMBERTYPE      shift and go to state 147
    STRINGTYPE      shift and go to state 148
    NOTETYPE        shift and go to state 149

    READAUX                        shift and go to state 146

state 101

    (14) AUXFUNCDEC -> ID DDOT F_ARGS LARROW RETTYPE .

    LTRIAN          reduce using rule 14 (AUXFUNCDEC -> ID DDOT F_ARGS LARROW RETTYPE .)


state 102

    (58) RETTYPE -> NUMBERTYPE .

    LTRIAN          reduce using rule 58 (RETTYPE -> NUMBERTYPE .)


state 103

    (59) RETTYPE -> NOTETYPE .

    LTRIAN          reduce using rule 59 (RETTYPE -> NOTETYPE .)


state 104

    (60) RETTYPE -> BOOLTYPE .

    LTRIAN          reduce using rule 60 (RETTYPE -> BOOLTYPE .)


state 105

    (61) RETTYPE -> SILENCE .

    LTRIAN          reduce using rule 61 (RETTYPE -> SILENCE .)


state 106

    (35) ARGS -> TYPE e ID . H_ARGS
    (36) H_ARGS -> . COMMA ARGS
    (37) H_ARGS -> . e
    (139) e -> .

    COMMA           shift and go to state 152
    LARROW          reduce using rule 139 (e -> .)

    e                              shift and go to state 150
    H_ARGS                         shift and go to state 151

state 107

    (11) VARDECB -> COMMA TYPE ID VARIDB . VARDECB
    (11) VARDECB -> . COMMA TYPE ID VARIDB VARDECB
    (12) VARDECB -> . e
    (139) e -> .

    COMMA           shift and go to state 39
    RPAR            reduce using rule 139 (e -> .)

    VARDECB                        shift and go to state 153
    e                              shift and go to state 40

state 108

    (17) FUNCBLOCK -> LTRIAN F_VARDEC STATEMENTS F_RETURN RTRIAN .

    $end            reduce using rule 17 (FUNCBLOCK -> LTRIAN F_VARDEC STATEMENTS F_RETURN RTRIAN .)
    FUNC            reduce using rule 17 (FUNCBLOCK -> LTRIAN F_VARDEC STATEMENTS F_RETURN RTRIAN .)
    MAIN            reduce using rule 17 (FUNCBLOCK -> LTRIAN F_VARDEC STATEMENTS F_RETURN RTRIAN .)


state 109

    (20) F_RETURN -> RETURN EXPRESSION . SEMICOLON

    SEMICOLON       shift and go to state 154


state 110

    (86) EXPRESSION -> EXPOR .

    SEMICOLON       reduce using rule 86 (EXPRESSION -> EXPOR .)
    RPAR            reduce using rule 86 (EXPRESSION -> EXPOR .)
    LARROW          reduce using rule 86 (EXPRESSION -> EXPOR .)
    LTRIAN          reduce using rule 86 (EXPRESSION -> EXPOR .)
    COMMA           reduce using rule 86 (EXPRESSION -> EXPOR .)


state 111

    (87) EXPOR -> EXPAND . P10 EXPORB
    (91) P10 -> . e
    (139) e -> .

    OR              reduce using rule 139 (e -> .)
    SEMICOLON       reduce using rule 139 (e -> .)
    RPAR            reduce using rule 139 (e -> .)
    LARROW          reduce using rule 139 (e -> .)
    LTRIAN          reduce using rule 139 (e -> .)
    COMMA           reduce using rule 139 (e -> .)

    P10                            shift and go to state 155
    e                              shift and go to state 156

state 112

    (92) EXPAND -> EXPEQ . P9 EXPANDB
    (96) P9 -> . e
    (139) e -> .

    AND             reduce using rule 139 (e -> .)
    OR              reduce using rule 139 (e -> .)
    SEMICOLON       reduce using rule 139 (e -> .)
    RPAR            reduce using rule 139 (e -> .)
    LARROW          reduce using rule 139 (e -> .)
    LTRIAN          reduce using rule 139 (e -> .)
    COMMA           reduce using rule 139 (e -> .)

    P9                             shift and go to state 157
    e                              shift and go to state 158

state 113

    (97) EXPEQ -> EXP . P8 EXPEQB
    (102) P8 -> . e
    (139) e -> .

    EQ              reduce using rule 139 (e -> .)
    DIFF            reduce using rule 139 (e -> .)
    AND             reduce using rule 139 (e -> .)
    OR              reduce using rule 139 (e -> .)
    SEMICOLON       reduce using rule 139 (e -> .)
    RPAR            reduce using rule 139 (e -> .)
    LARROW          reduce using rule 139 (e -> .)
    LTRIAN          reduce using rule 139 (e -> .)
    COMMA           reduce using rule 139 (e -> .)

    P8                             shift and go to state 159
    e                              shift and go to state 160

state 114

    (103) EXP -> EXPR . P7 EXPB
    (108) P7 -> . e
    (139) e -> .

    GT              reduce using rule 139 (e -> .)
    LT              reduce using rule 139 (e -> .)
    EQ              reduce using rule 139 (e -> .)
    DIFF            reduce using rule 139 (e -> .)
    AND             reduce using rule 139 (e -> .)
    OR              reduce using rule 139 (e -> .)
    SEMICOLON       reduce using rule 139 (e -> .)
    RPAR            reduce using rule 139 (e -> .)
    LARROW          reduce using rule 139 (e -> .)
    LTRIAN          reduce using rule 139 (e -> .)
    COMMA           reduce using rule 139 (e -> .)
    RSQUARE         reduce using rule 139 (e -> .)

    P7                             shift and go to state 161
    e                              shift and go to state 162

state 115

    (109) EXPR -> TERM . P4 EXPR_B
    (114) P4 -> . e
    (139) e -> .

    PLUS            reduce using rule 139 (e -> .)
    MINUS           reduce using rule 139 (e -> .)
    GT              reduce using rule 139 (e -> .)
    LT              reduce using rule 139 (e -> .)
    EQ              reduce using rule 139 (e -> .)
    DIFF            reduce using rule 139 (e -> .)
    AND             reduce using rule 139 (e -> .)
    OR              reduce using rule 139 (e -> .)
    SEMICOLON       reduce using rule 139 (e -> .)
    RPAR            reduce using rule 139 (e -> .)
    LARROW          reduce using rule 139 (e -> .)
    LTRIAN          reduce using rule 139 (e -> .)
    COMMA           reduce using rule 139 (e -> .)
    RSQUARE         reduce using rule 139 (e -> .)

    P4                             shift and go to state 163
    e                              shift and go to state 164

state 116

    (115) TERM -> FACTOR . P5 TERM_B
    (120) P5 -> . e
    (139) e -> .

    TIMES           reduce using rule 139 (e -> .)
    DIVIDE          reduce using rule 139 (e -> .)
    PLUS            reduce using rule 139 (e -> .)
    MINUS           reduce using rule 139 (e -> .)
    GT              reduce using rule 139 (e -> .)
    LT              reduce using rule 139 (e -> .)
    EQ              reduce using rule 139 (e -> .)
    DIFF            reduce using rule 139 (e -> .)
    AND             reduce using rule 139 (e -> .)
    OR              reduce using rule 139 (e -> .)
    SEMICOLON       reduce using rule 139 (e -> .)
    RPAR            reduce using rule 139 (e -> .)
    LARROW          reduce using rule 139 (e -> .)
    LTRIAN          reduce using rule 139 (e -> .)
    COMMA           reduce using rule 139 (e -> .)
    RSQUARE         reduce using rule 139 (e -> .)

    P5                             shift and go to state 165
    e                              shift and go to state 166

state 117

    (125) FACTOR -> NUMBER .

    TIMES           reduce using rule 125 (FACTOR -> NUMBER .)
    DIVIDE          reduce using rule 125 (FACTOR -> NUMBER .)
    PLUS            reduce using rule 125 (FACTOR -> NUMBER .)
    MINUS           reduce using rule 125 (FACTOR -> NUMBER .)
    GT              reduce using rule 125 (FACTOR -> NUMBER .)
    LT              reduce using rule 125 (FACTOR -> NUMBER .)
    EQ              reduce using rule 125 (FACTOR -> NUMBER .)
    DIFF            reduce using rule 125 (FACTOR -> NUMBER .)
    AND             reduce using rule 125 (FACTOR -> NUMBER .)
    OR              reduce using rule 125 (FACTOR -> NUMBER .)
    SEMICOLON       reduce using rule 125 (FACTOR -> NUMBER .)
    RPAR            reduce using rule 125 (FACTOR -> NUMBER .)
    LARROW          reduce using rule 125 (FACTOR -> NUMBER .)
    LTRIAN          reduce using rule 125 (FACTOR -> NUMBER .)
    COMMA           reduce using rule 125 (FACTOR -> NUMBER .)
    RSQUARE         reduce using rule 125 (FACTOR -> NUMBER .)


state 118

    (126) FACTOR -> ID .
    (121) IDVARID -> ID . EXPVARID
    (44) FUNCCALL -> ID . LPAR CALLARGS RPAR
    (8) EXPVARID -> . LSQUARE C1 EXP C2 RSQUARE EXPVARIDB

    TIMES           reduce using rule 126 (FACTOR -> ID .)
    DIVIDE          reduce using rule 126 (FACTOR -> ID .)
    PLUS            reduce using rule 126 (FACTOR -> ID .)
    MINUS           reduce using rule 126 (FACTOR -> ID .)
    GT              reduce using rule 126 (FACTOR -> ID .)
    LT              reduce using rule 126 (FACTOR -> ID .)
    EQ              reduce using rule 126 (FACTOR -> ID .)
    DIFF            reduce using rule 126 (FACTOR -> ID .)
    AND             reduce using rule 126 (FACTOR -> ID .)
    OR              reduce using rule 126 (FACTOR -> ID .)
    SEMICOLON       reduce using rule 126 (FACTOR -> ID .)
    RPAR            reduce using rule 126 (FACTOR -> ID .)
    LARROW          reduce using rule 126 (FACTOR -> ID .)
    LTRIAN          reduce using rule 126 (FACTOR -> ID .)
    COMMA           reduce using rule 126 (FACTOR -> ID .)
    RSQUARE         reduce using rule 126 (FACTOR -> ID .)
    LPAR            shift and go to state 87
    LSQUARE         shift and go to state 168

    EXPVARID                       shift and go to state 167

state 119

    (127) FACTOR -> FACTOR_CTE .

    TIMES           reduce using rule 127 (FACTOR -> FACTOR_CTE .)
    DIVIDE          reduce using rule 127 (FACTOR -> FACTOR_CTE .)
    PLUS            reduce using rule 127 (FACTOR -> FACTOR_CTE .)
    MINUS           reduce using rule 127 (FACTOR -> FACTOR_CTE .)
    GT              reduce using rule 127 (FACTOR -> FACTOR_CTE .)
    LT              reduce using rule 127 (FACTOR -> FACTOR_CTE .)
    EQ              reduce using rule 127 (FACTOR -> FACTOR_CTE .)
    DIFF            reduce using rule 127 (FACTOR -> FACTOR_CTE .)
    AND             reduce using rule 127 (FACTOR -> FACTOR_CTE .)
    OR              reduce using rule 127 (FACTOR -> FACTOR_CTE .)
    SEMICOLON       reduce using rule 127 (FACTOR -> FACTOR_CTE .)
    RPAR            reduce using rule 127 (FACTOR -> FACTOR_CTE .)
    LARROW          reduce using rule 127 (FACTOR -> FACTOR_CTE .)
    LTRIAN          reduce using rule 127 (FACTOR -> FACTOR_CTE .)
    COMMA           reduce using rule 127 (FACTOR -> FACTOR_CTE .)
    RSQUARE         reduce using rule 127 (FACTOR -> FACTOR_CTE .)


state 120

    (128) FACTOR -> LPAR . P6 EXPRESSION RPAR
    (133) P6 -> . e
    (139) e -> .

    NUMBER          reduce using rule 139 (e -> .)
    ID              reduce using rule 139 (e -> .)
    LPAR            reduce using rule 139 (e -> .)
    PLUS            reduce using rule 139 (e -> .)
    MINUS           reduce using rule 139 (e -> .)
    NOTE            reduce using rule 139 (e -> .)
    BOOL            reduce using rule 139 (e -> .)
    STRING          reduce using rule 139 (e -> .)
    INPUT           reduce using rule 139 (e -> .)

    P6                             shift and go to state 169
    e                              shift and go to state 170

state 121

    (129) FACTOR -> IDVARID .

    TIMES           reduce using rule 129 (FACTOR -> IDVARID .)
    DIVIDE          reduce using rule 129 (FACTOR -> IDVARID .)
    PLUS            reduce using rule 129 (FACTOR -> IDVARID .)
    MINUS           reduce using rule 129 (FACTOR -> IDVARID .)
    GT              reduce using rule 129 (FACTOR -> IDVARID .)
    LT              reduce using rule 129 (FACTOR -> IDVARID .)
    EQ              reduce using rule 129 (FACTOR -> IDVARID .)
    DIFF            reduce using rule 129 (FACTOR -> IDVARID .)
    AND             reduce using rule 129 (FACTOR -> IDVARID .)
    OR              reduce using rule 129 (FACTOR -> IDVARID .)
    SEMICOLON       reduce using rule 129 (FACTOR -> IDVARID .)
    RPAR            reduce using rule 129 (FACTOR -> IDVARID .)
    LARROW          reduce using rule 129 (FACTOR -> IDVARID .)
    LTRIAN          reduce using rule 129 (FACTOR -> IDVARID .)
    COMMA           reduce using rule 129 (FACTOR -> IDVARID .)
    RSQUARE         reduce using rule 129 (FACTOR -> IDVARID .)


state 122

    (130) FACTOR -> FUNCCALL .

    TIMES           reduce using rule 130 (FACTOR -> FUNCCALL .)
    DIVIDE          reduce using rule 130 (FACTOR -> FUNCCALL .)
    PLUS            reduce using rule 130 (FACTOR -> FUNCCALL .)
    MINUS           reduce using rule 130 (FACTOR -> FUNCCALL .)
    GT              reduce using rule 130 (FACTOR -> FUNCCALL .)
    LT              reduce using rule 130 (FACTOR -> FUNCCALL .)
    EQ              reduce using rule 130 (FACTOR -> FUNCCALL .)
    DIFF            reduce using rule 130 (FACTOR -> FUNCCALL .)
    AND             reduce using rule 130 (FACTOR -> FUNCCALL .)
    OR              reduce using rule 130 (FACTOR -> FUNCCALL .)
    SEMICOLON       reduce using rule 130 (FACTOR -> FUNCCALL .)
    RPAR            reduce using rule 130 (FACTOR -> FUNCCALL .)
    LARROW          reduce using rule 130 (FACTOR -> FUNCCALL .)
    LTRIAN          reduce using rule 130 (FACTOR -> FUNCCALL .)
    COMMA           reduce using rule 130 (FACTOR -> FUNCCALL .)
    RSQUARE         reduce using rule 130 (FACTOR -> FUNCCALL .)


state 123

    (131) FACTOR -> VARCTE .

    TIMES           reduce using rule 131 (FACTOR -> VARCTE .)
    DIVIDE          reduce using rule 131 (FACTOR -> VARCTE .)
    PLUS            reduce using rule 131 (FACTOR -> VARCTE .)
    MINUS           reduce using rule 131 (FACTOR -> VARCTE .)
    GT              reduce using rule 131 (FACTOR -> VARCTE .)
    LT              reduce using rule 131 (FACTOR -> VARCTE .)
    EQ              reduce using rule 131 (FACTOR -> VARCTE .)
    DIFF            reduce using rule 131 (FACTOR -> VARCTE .)
    AND             reduce using rule 131 (FACTOR -> VARCTE .)
    OR              reduce using rule 131 (FACTOR -> VARCTE .)
    SEMICOLON       reduce using rule 131 (FACTOR -> VARCTE .)
    RPAR            reduce using rule 131 (FACTOR -> VARCTE .)
    LARROW          reduce using rule 131 (FACTOR -> VARCTE .)
    LTRIAN          reduce using rule 131 (FACTOR -> VARCTE .)
    COMMA           reduce using rule 131 (FACTOR -> VARCTE .)
    RSQUARE         reduce using rule 131 (FACTOR -> VARCTE .)


state 124

    (132) FACTOR -> READ .

    TIMES           reduce using rule 132 (FACTOR -> READ .)
    DIVIDE          reduce using rule 132 (FACTOR -> READ .)
    PLUS            reduce using rule 132 (FACTOR -> READ .)
    MINUS           reduce using rule 132 (FACTOR -> READ .)
    GT              reduce using rule 132 (FACTOR -> READ .)
    LT              reduce using rule 132 (FACTOR -> READ .)
    EQ              reduce using rule 132 (FACTOR -> READ .)
    DIFF            reduce using rule 132 (FACTOR -> READ .)
    AND             reduce using rule 132 (FACTOR -> READ .)
    OR              reduce using rule 132 (FACTOR -> READ .)
    SEMICOLON       reduce using rule 132 (FACTOR -> READ .)
    RPAR            reduce using rule 132 (FACTOR -> READ .)
    LARROW          reduce using rule 132 (FACTOR -> READ .)
    LTRIAN          reduce using rule 132 (FACTOR -> READ .)
    COMMA           reduce using rule 132 (FACTOR -> READ .)
    RSQUARE         reduce using rule 132 (FACTOR -> READ .)


state 125

    (134) FACTOR_CTE -> PLUS . NUMBER

    NUMBER          shift and go to state 171


state 126

    (135) FACTOR_CTE -> MINUS . NUMBER

    NUMBER          shift and go to state 172


state 127

    (136) VARCTE -> NOTE .

    TIMES           reduce using rule 136 (VARCTE -> NOTE .)
    DIVIDE          reduce using rule 136 (VARCTE -> NOTE .)
    PLUS            reduce using rule 136 (VARCTE -> NOTE .)
    MINUS           reduce using rule 136 (VARCTE -> NOTE .)
    GT              reduce using rule 136 (VARCTE -> NOTE .)
    LT              reduce using rule 136 (VARCTE -> NOTE .)
    EQ              reduce using rule 136 (VARCTE -> NOTE .)
    DIFF            reduce using rule 136 (VARCTE -> NOTE .)
    AND             reduce using rule 136 (VARCTE -> NOTE .)
    OR              reduce using rule 136 (VARCTE -> NOTE .)
    SEMICOLON       reduce using rule 136 (VARCTE -> NOTE .)
    RPAR            reduce using rule 136 (VARCTE -> NOTE .)
    LARROW          reduce using rule 136 (VARCTE -> NOTE .)
    LTRIAN          reduce using rule 136 (VARCTE -> NOTE .)
    COMMA           reduce using rule 136 (VARCTE -> NOTE .)
    RSQUARE         reduce using rule 136 (VARCTE -> NOTE .)


state 128

    (137) VARCTE -> BOOL .

    TIMES           reduce using rule 137 (VARCTE -> BOOL .)
    DIVIDE          reduce using rule 137 (VARCTE -> BOOL .)
    PLUS            reduce using rule 137 (VARCTE -> BOOL .)
    MINUS           reduce using rule 137 (VARCTE -> BOOL .)
    GT              reduce using rule 137 (VARCTE -> BOOL .)
    LT              reduce using rule 137 (VARCTE -> BOOL .)
    EQ              reduce using rule 137 (VARCTE -> BOOL .)
    DIFF            reduce using rule 137 (VARCTE -> BOOL .)
    AND             reduce using rule 137 (VARCTE -> BOOL .)
    OR              reduce using rule 137 (VARCTE -> BOOL .)
    SEMICOLON       reduce using rule 137 (VARCTE -> BOOL .)
    RPAR            reduce using rule 137 (VARCTE -> BOOL .)
    LARROW          reduce using rule 137 (VARCTE -> BOOL .)
    LTRIAN          reduce using rule 137 (VARCTE -> BOOL .)
    COMMA           reduce using rule 137 (VARCTE -> BOOL .)
    RSQUARE         reduce using rule 137 (VARCTE -> BOOL .)


state 129

    (138) VARCTE -> STRING .

    TIMES           reduce using rule 138 (VARCTE -> STRING .)
    DIVIDE          reduce using rule 138 (VARCTE -> STRING .)
    PLUS            reduce using rule 138 (VARCTE -> STRING .)
    MINUS           reduce using rule 138 (VARCTE -> STRING .)
    GT              reduce using rule 138 (VARCTE -> STRING .)
    LT              reduce using rule 138 (VARCTE -> STRING .)
    EQ              reduce using rule 138 (VARCTE -> STRING .)
    DIFF            reduce using rule 138 (VARCTE -> STRING .)
    AND             reduce using rule 138 (VARCTE -> STRING .)
    OR              reduce using rule 138 (VARCTE -> STRING .)
    SEMICOLON       reduce using rule 138 (VARCTE -> STRING .)
    RPAR            reduce using rule 138 (VARCTE -> STRING .)
    LARROW          reduce using rule 138 (VARCTE -> STRING .)
    LTRIAN          reduce using rule 138 (VARCTE -> STRING .)
    COMMA           reduce using rule 138 (VARCTE -> STRING .)
    RSQUARE         reduce using rule 138 (VARCTE -> STRING .)


state 130

    (22) STATEMENTS -> STATEMENT N0 STATEMENTS .

    RETURN          reduce using rule 22 (STATEMENTS -> STATEMENT N0 STATEMENTS .)
    RTRIAN          reduce using rule 22 (STATEMENTS -> STATEMENT N0 STATEMENTS .)
    RRITT           reduce using rule 22 (STATEMENTS -> STATEMENT N0 STATEMENTS .)


state 131

    (65) ASSIGN -> ID EXPVARIDB ASSIGNATION . ASSIGNH
    (63) ASSIGNH -> . EXPRESSION
    (64) ASSIGNH -> . ARRAY
    (86) EXPRESSION -> . EXPOR
    (122) ARRAY -> . LSQUARE C1 EXP C2 ARRAYB RSQUARE
    (87) EXPOR -> . EXPAND P10 EXPORB
    (92) EXPAND -> . EXPEQ P9 EXPANDB
    (97) EXPEQ -> . EXP P8 EXPEQB
    (103) EXP -> . EXPR P7 EXPB
    (109) EXPR -> . TERM P4 EXPR_B
    (115) TERM -> . FACTOR P5 TERM_B
    (125) FACTOR -> . NUMBER
    (126) FACTOR -> . ID
    (127) FACTOR -> . FACTOR_CTE
    (128) FACTOR -> . LPAR P6 EXPRESSION RPAR
    (129) FACTOR -> . IDVARID
    (130) FACTOR -> . FUNCCALL
    (131) FACTOR -> . VARCTE
    (132) FACTOR -> . READ
    (134) FACTOR_CTE -> . PLUS NUMBER
    (135) FACTOR_CTE -> . MINUS NUMBER
    (121) IDVARID -> . ID EXPVARID
    (44) FUNCCALL -> . ID LPAR CALLARGS RPAR
    (136) VARCTE -> . NOTE
    (137) VARCTE -> . BOOL
    (138) VARCTE -> . STRING
    (45) READ -> . INPUT LPAR READAUX RPAR

    LSQUARE         shift and go to state 176
    NUMBER          shift and go to state 117
    ID              shift and go to state 118
    LPAR            shift and go to state 120
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    NOTE            shift and go to state 127
    BOOL            shift and go to state 128
    STRING          shift and go to state 129
    INPUT           shift and go to state 70

    ASSIGNH                        shift and go to state 173
    EXPRESSION                     shift and go to state 174
    ARRAY                          shift and go to state 175
    EXPOR                          shift and go to state 110
    EXP                            shift and go to state 113
    EXPAND                         shift and go to state 111
    EXPEQ                          shift and go to state 112
    EXPR                           shift and go to state 114
    TERM                           shift and go to state 115
    FACTOR                         shift and go to state 116
    FACTOR_CTE                     shift and go to state 119
    IDVARID                        shift and go to state 121
    FUNCCALL                       shift and go to state 122
    VARCTE                         shift and go to state 123
    READ                           shift and go to state 124

state 132

    (44) FUNCCALL -> ID LPAR CALLARGS . RPAR

    RPAR            shift and go to state 177


state 133

    (38) CALLARGS -> C1 . EXPRESSION C2 H_CALLARGS
    (86) EXPRESSION -> . EXPOR
    (87) EXPOR -> . EXPAND P10 EXPORB
    (92) EXPAND -> . EXPEQ P9 EXPANDB
    (97) EXPEQ -> . EXP P8 EXPEQB
    (103) EXP -> . EXPR P7 EXPB
    (109) EXPR -> . TERM P4 EXPR_B
    (115) TERM -> . FACTOR P5 TERM_B
    (125) FACTOR -> . NUMBER
    (126) FACTOR -> . ID
    (127) FACTOR -> . FACTOR_CTE
    (128) FACTOR -> . LPAR P6 EXPRESSION RPAR
    (129) FACTOR -> . IDVARID
    (130) FACTOR -> . FUNCCALL
    (131) FACTOR -> . VARCTE
    (132) FACTOR -> . READ
    (134) FACTOR_CTE -> . PLUS NUMBER
    (135) FACTOR_CTE -> . MINUS NUMBER
    (121) IDVARID -> . ID EXPVARID
    (44) FUNCCALL -> . ID LPAR CALLARGS RPAR
    (136) VARCTE -> . NOTE
    (137) VARCTE -> . BOOL
    (138) VARCTE -> . STRING
    (45) READ -> . INPUT LPAR READAUX RPAR

    NUMBER          shift and go to state 117
    ID              shift and go to state 118
    LPAR            shift and go to state 120
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    NOTE            shift and go to state 127
    BOOL            shift and go to state 128
    STRING          shift and go to state 129
    INPUT           shift and go to state 70

    EXPRESSION                     shift and go to state 178
    EXPOR                          shift and go to state 110
    EXPAND                         shift and go to state 111
    EXPEQ                          shift and go to state 112
    EXP                            shift and go to state 113
    EXPR                           shift and go to state 114
    TERM                           shift and go to state 115
    FACTOR                         shift and go to state 116
    FACTOR_CTE                     shift and go to state 119
    IDVARID                        shift and go to state 121
    FUNCCALL                       shift and go to state 122
    VARCTE                         shift and go to state 123
    READ                           shift and go to state 124

state 134

    (39) CALLARGS -> e .
    (40) C1 -> e .

    RPAR            reduce using rule 39 (CALLARGS -> e .)
    NUMBER          reduce using rule 40 (C1 -> e .)
    ID              reduce using rule 40 (C1 -> e .)
    LPAR            reduce using rule 40 (C1 -> e .)
    PLUS            reduce using rule 40 (C1 -> e .)
    MINUS           reduce using rule 40 (C1 -> e .)
    NOTE            reduce using rule 40 (C1 -> e .)
    BOOL            reduce using rule 40 (C1 -> e .)
    STRING          reduce using rule 40 (C1 -> e .)
    INPUT           reduce using rule 40 (C1 -> e .)


state 135

    (9) EXPVARIDB -> LSQUARE C1 . EXP C2 RSQUARE EXPVARIDB
    (103) EXP -> . EXPR P7 EXPB
    (109) EXPR -> . TERM P4 EXPR_B
    (115) TERM -> . FACTOR P5 TERM_B
    (125) FACTOR -> . NUMBER
    (126) FACTOR -> . ID
    (127) FACTOR -> . FACTOR_CTE
    (128) FACTOR -> . LPAR P6 EXPRESSION RPAR
    (129) FACTOR -> . IDVARID
    (130) FACTOR -> . FUNCCALL
    (131) FACTOR -> . VARCTE
    (132) FACTOR -> . READ
    (134) FACTOR_CTE -> . PLUS NUMBER
    (135) FACTOR_CTE -> . MINUS NUMBER
    (121) IDVARID -> . ID EXPVARID
    (44) FUNCCALL -> . ID LPAR CALLARGS RPAR
    (136) VARCTE -> . NOTE
    (137) VARCTE -> . BOOL
    (138) VARCTE -> . STRING
    (45) READ -> . INPUT LPAR READAUX RPAR

    NUMBER          shift and go to state 117
    ID              shift and go to state 118
    LPAR            shift and go to state 120
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    NOTE            shift and go to state 127
    BOOL            shift and go to state 128
    STRING          shift and go to state 129
    INPUT           shift and go to state 70

    EXP                            shift and go to state 179
    EXPR                           shift and go to state 114
    TERM                           shift and go to state 115
    FACTOR                         shift and go to state 116
    FACTOR_CTE                     shift and go to state 119
    IDVARID                        shift and go to state 121
    FUNCCALL                       shift and go to state 122
    VARCTE                         shift and go to state 123
    READ                           shift and go to state 124

state 136

    (40) C1 -> e .

    NUMBER          reduce using rule 40 (C1 -> e .)
    ID              reduce using rule 40 (C1 -> e .)
    LPAR            reduce using rule 40 (C1 -> e .)
    PLUS            reduce using rule 40 (C1 -> e .)
    MINUS           reduce using rule 40 (C1 -> e .)
    NOTE            reduce using rule 40 (C1 -> e .)
    BOOL            reduce using rule 40 (C1 -> e .)
    STRING          reduce using rule 40 (C1 -> e .)
    INPUT           reduce using rule 40 (C1 -> e .)


state 137

    (80) WHILE_BLOCK -> WHILE W1 DDOT . EXPRESSION A1 BLOCK W2
    (86) EXPRESSION -> . EXPOR
    (87) EXPOR -> . EXPAND P10 EXPORB
    (92) EXPAND -> . EXPEQ P9 EXPANDB
    (97) EXPEQ -> . EXP P8 EXPEQB
    (103) EXP -> . EXPR P7 EXPB
    (109) EXPR -> . TERM P4 EXPR_B
    (115) TERM -> . FACTOR P5 TERM_B
    (125) FACTOR -> . NUMBER
    (126) FACTOR -> . ID
    (127) FACTOR -> . FACTOR_CTE
    (128) FACTOR -> . LPAR P6 EXPRESSION RPAR
    (129) FACTOR -> . IDVARID
    (130) FACTOR -> . FUNCCALL
    (131) FACTOR -> . VARCTE
    (132) FACTOR -> . READ
    (134) FACTOR_CTE -> . PLUS NUMBER
    (135) FACTOR_CTE -> . MINUS NUMBER
    (121) IDVARID -> . ID EXPVARID
    (44) FUNCCALL -> . ID LPAR CALLARGS RPAR
    (136) VARCTE -> . NOTE
    (137) VARCTE -> . BOOL
    (138) VARCTE -> . STRING
    (45) READ -> . INPUT LPAR READAUX RPAR

    NUMBER          shift and go to state 117
    ID              shift and go to state 118
    LPAR            shift and go to state 120
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    NOTE            shift and go to state 127
    BOOL            shift and go to state 128
    STRING          shift and go to state 129
    INPUT           shift and go to state 70

    EXPRESSION                     shift and go to state 180
    EXPOR                          shift and go to state 110
    EXPAND                         shift and go to state 111
    EXPEQ                          shift and go to state 112
    EXP                            shift and go to state 113
    EXPR                           shift and go to state 114
    TERM                           shift and go to state 115
    FACTOR                         shift and go to state 116
    FACTOR_CTE                     shift and go to state 119
    IDVARID                        shift and go to state 121
    FUNCCALL                       shift and go to state 122
    VARCTE                         shift and go to state 123
    READ                           shift and go to state 124

state 138

    (83) RITORNELLO -> LRITT RITARG STATEMENTS . RRITT

    RRITT           shift and go to state 181


state 139

    (84) RITARG -> LPAR EXPRESSION . RPAR LARROW

    RPAR            shift and go to state 182


state 140

    (66) IF_BLOCK -> IF DDOT EXPRESSION . A1 IF_B
    (67) A1 -> . e
    (139) e -> .

    LARROW          reduce using rule 139 (e -> .)
    LTRIAN          reduce using rule 139 (e -> .)

    A1                             shift and go to state 183
    e                              shift and go to state 184

state 141

    (49) PRINT -> DISP LPAR CALLARGS . RPAR

    RPAR            shift and go to state 185


state 142

    (52) PLAYFUNCS -> PLAYT LPAR EXP . COMMA EXP RPAR

    COMMA           shift and go to state 186


state 143

    (53) PLAYFUNCS -> PLAYT LPAR SILENCE . COMMA EXP COMMA EXP RPAR

    COMMA           shift and go to state 187


state 144

    (50) MUSICFUNCS -> STREAMT LPAR EXP . RPAR

    RPAR            shift and go to state 188


state 145

    (51) MUSICFUNCS -> MST LPAR RPAR .

    SEMICOLON       reduce using rule 51 (MUSICFUNCS -> MST LPAR RPAR .)


state 146

    (45) READ -> INPUT LPAR READAUX . RPAR

    RPAR            shift and go to state 189


state 147

    (46) READAUX -> NUMBERTYPE .

    RPAR            reduce using rule 46 (READAUX -> NUMBERTYPE .)


state 148

    (47) READAUX -> STRINGTYPE .

    RPAR            reduce using rule 47 (READAUX -> STRINGTYPE .)


state 149

    (48) READAUX -> NOTETYPE .

    RPAR            reduce using rule 48 (READAUX -> NOTETYPE .)


state 150

    (37) H_ARGS -> e .

    LARROW          reduce using rule 37 (H_ARGS -> e .)


state 151

    (35) ARGS -> TYPE e ID H_ARGS .

    LARROW          reduce using rule 35 (ARGS -> TYPE e ID H_ARGS .)


state 152

    (36) H_ARGS -> COMMA . ARGS
    (35) ARGS -> . TYPE e ID H_ARGS
    (54) TYPE -> . NUMBERTYPE
    (55) TYPE -> . NOTETYPE
    (56) TYPE -> . BOOLTYPE
    (57) TYPE -> . STRINGTYPE

    NUMBERTYPE      shift and go to state 18
    NOTETYPE        shift and go to state 19
    BOOLTYPE        shift and go to state 20
    STRINGTYPE      shift and go to state 21

    ARGS                           shift and go to state 190
    TYPE                           shift and go to state 46

state 153

    (11) VARDECB -> COMMA TYPE ID VARIDB VARDECB .

    RPAR            reduce using rule 11 (VARDECB -> COMMA TYPE ID VARIDB VARDECB .)


state 154

    (20) F_RETURN -> RETURN EXPRESSION SEMICOLON .

    RTRIAN          reduce using rule 20 (F_RETURN -> RETURN EXPRESSION SEMICOLON .)


state 155

    (87) EXPOR -> EXPAND P10 . EXPORB
    (88) EXPORB -> . EXPOR_OPS EXPOR
    (89) EXPORB -> . e
    (90) EXPOR_OPS -> . OR
    (139) e -> .

    OR              shift and go to state 194
    SEMICOLON       reduce using rule 139 (e -> .)
    RPAR            reduce using rule 139 (e -> .)
    LARROW          reduce using rule 139 (e -> .)
    LTRIAN          reduce using rule 139 (e -> .)
    COMMA           reduce using rule 139 (e -> .)

    EXPORB                         shift and go to state 191
    EXPOR_OPS                      shift and go to state 192
    e                              shift and go to state 193

state 156

    (91) P10 -> e .

    OR              reduce using rule 91 (P10 -> e .)
    SEMICOLON       reduce using rule 91 (P10 -> e .)
    RPAR            reduce using rule 91 (P10 -> e .)
    LARROW          reduce using rule 91 (P10 -> e .)
    LTRIAN          reduce using rule 91 (P10 -> e .)
    COMMA           reduce using rule 91 (P10 -> e .)


state 157

    (92) EXPAND -> EXPEQ P9 . EXPANDB
    (93) EXPANDB -> . EXPAND_OPS EXPAND
    (94) EXPANDB -> . e
    (95) EXPAND_OPS -> . AND
    (139) e -> .

    AND             shift and go to state 198
    OR              reduce using rule 139 (e -> .)
    SEMICOLON       reduce using rule 139 (e -> .)
    RPAR            reduce using rule 139 (e -> .)
    LARROW          reduce using rule 139 (e -> .)
    LTRIAN          reduce using rule 139 (e -> .)
    COMMA           reduce using rule 139 (e -> .)

    EXPANDB                        shift and go to state 195
    EXPAND_OPS                     shift and go to state 196
    e                              shift and go to state 197

state 158

    (96) P9 -> e .

    AND             reduce using rule 96 (P9 -> e .)
    OR              reduce using rule 96 (P9 -> e .)
    SEMICOLON       reduce using rule 96 (P9 -> e .)
    RPAR            reduce using rule 96 (P9 -> e .)
    LARROW          reduce using rule 96 (P9 -> e .)
    LTRIAN          reduce using rule 96 (P9 -> e .)
    COMMA           reduce using rule 96 (P9 -> e .)


state 159

    (97) EXPEQ -> EXP P8 . EXPEQB
    (98) EXPEQB -> . EXPEQ_OPS EXPEQ
    (99) EXPEQB -> . e
    (100) EXPEQ_OPS -> . EQ
    (101) EXPEQ_OPS -> . DIFF
    (139) e -> .

    EQ              shift and go to state 202
    DIFF            shift and go to state 203
    AND             reduce using rule 139 (e -> .)
    OR              reduce using rule 139 (e -> .)
    SEMICOLON       reduce using rule 139 (e -> .)
    RPAR            reduce using rule 139 (e -> .)
    LARROW          reduce using rule 139 (e -> .)
    LTRIAN          reduce using rule 139 (e -> .)
    COMMA           reduce using rule 139 (e -> .)

    EXPEQB                         shift and go to state 199
    EXPEQ_OPS                      shift and go to state 200
    e                              shift and go to state 201

state 160

    (102) P8 -> e .

    EQ              reduce using rule 102 (P8 -> e .)
    DIFF            reduce using rule 102 (P8 -> e .)
    AND             reduce using rule 102 (P8 -> e .)
    OR              reduce using rule 102 (P8 -> e .)
    SEMICOLON       reduce using rule 102 (P8 -> e .)
    RPAR            reduce using rule 102 (P8 -> e .)
    LARROW          reduce using rule 102 (P8 -> e .)
    LTRIAN          reduce using rule 102 (P8 -> e .)
    COMMA           reduce using rule 102 (P8 -> e .)


state 161

    (103) EXP -> EXPR P7 . EXPB
    (104) EXPB -> . e
    (105) EXPB -> . EXP2_ops EXP
    (139) e -> .
    (106) EXP2_ops -> . GT
    (107) EXP2_ops -> . LT

    EQ              reduce using rule 139 (e -> .)
    DIFF            reduce using rule 139 (e -> .)
    AND             reduce using rule 139 (e -> .)
    OR              reduce using rule 139 (e -> .)
    SEMICOLON       reduce using rule 139 (e -> .)
    RPAR            reduce using rule 139 (e -> .)
    LARROW          reduce using rule 139 (e -> .)
    LTRIAN          reduce using rule 139 (e -> .)
    COMMA           reduce using rule 139 (e -> .)
    RSQUARE         reduce using rule 139 (e -> .)
    GT              shift and go to state 207
    LT              shift and go to state 208

    EXPB                           shift and go to state 204
    e                              shift and go to state 205
    EXP2_ops                       shift and go to state 206

state 162

    (108) P7 -> e .

    GT              reduce using rule 108 (P7 -> e .)
    LT              reduce using rule 108 (P7 -> e .)
    EQ              reduce using rule 108 (P7 -> e .)
    DIFF            reduce using rule 108 (P7 -> e .)
    AND             reduce using rule 108 (P7 -> e .)
    OR              reduce using rule 108 (P7 -> e .)
    SEMICOLON       reduce using rule 108 (P7 -> e .)
    RPAR            reduce using rule 108 (P7 -> e .)
    LARROW          reduce using rule 108 (P7 -> e .)
    LTRIAN          reduce using rule 108 (P7 -> e .)
    COMMA           reduce using rule 108 (P7 -> e .)
    RSQUARE         reduce using rule 108 (P7 -> e .)


state 163

    (109) EXPR -> TERM P4 . EXPR_B
    (110) EXPR_B -> . EXPR_B_OPS EXPR
    (111) EXPR_B -> . e
    (112) EXPR_B_OPS -> . PLUS
    (113) EXPR_B_OPS -> . MINUS
    (139) e -> .

    PLUS            shift and go to state 212
    MINUS           shift and go to state 213
    GT              reduce using rule 139 (e -> .)
    LT              reduce using rule 139 (e -> .)
    EQ              reduce using rule 139 (e -> .)
    DIFF            reduce using rule 139 (e -> .)
    AND             reduce using rule 139 (e -> .)
    OR              reduce using rule 139 (e -> .)
    SEMICOLON       reduce using rule 139 (e -> .)
    RPAR            reduce using rule 139 (e -> .)
    LARROW          reduce using rule 139 (e -> .)
    LTRIAN          reduce using rule 139 (e -> .)
    COMMA           reduce using rule 139 (e -> .)
    RSQUARE         reduce using rule 139 (e -> .)

    EXPR_B                         shift and go to state 209
    EXPR_B_OPS                     shift and go to state 210
    e                              shift and go to state 211

state 164

    (114) P4 -> e .

    PLUS            reduce using rule 114 (P4 -> e .)
    MINUS           reduce using rule 114 (P4 -> e .)
    GT              reduce using rule 114 (P4 -> e .)
    LT              reduce using rule 114 (P4 -> e .)
    EQ              reduce using rule 114 (P4 -> e .)
    DIFF            reduce using rule 114 (P4 -> e .)
    AND             reduce using rule 114 (P4 -> e .)
    OR              reduce using rule 114 (P4 -> e .)
    SEMICOLON       reduce using rule 114 (P4 -> e .)
    RPAR            reduce using rule 114 (P4 -> e .)
    LARROW          reduce using rule 114 (P4 -> e .)
    LTRIAN          reduce using rule 114 (P4 -> e .)
    COMMA           reduce using rule 114 (P4 -> e .)
    RSQUARE         reduce using rule 114 (P4 -> e .)


state 165

    (115) TERM -> FACTOR P5 . TERM_B
    (116) TERM_B -> . TERM_B_OPS TERM
    (117) TERM_B -> . e
    (118) TERM_B_OPS -> . TIMES
    (119) TERM_B_OPS -> . DIVIDE
    (139) e -> .

    TIMES           shift and go to state 217
    DIVIDE          shift and go to state 218
    PLUS            reduce using rule 139 (e -> .)
    MINUS           reduce using rule 139 (e -> .)
    GT              reduce using rule 139 (e -> .)
    LT              reduce using rule 139 (e -> .)
    EQ              reduce using rule 139 (e -> .)
    DIFF            reduce using rule 139 (e -> .)
    AND             reduce using rule 139 (e -> .)
    OR              reduce using rule 139 (e -> .)
    SEMICOLON       reduce using rule 139 (e -> .)
    RPAR            reduce using rule 139 (e -> .)
    LARROW          reduce using rule 139 (e -> .)
    LTRIAN          reduce using rule 139 (e -> .)
    COMMA           reduce using rule 139 (e -> .)
    RSQUARE         reduce using rule 139 (e -> .)

    TERM_B                         shift and go to state 214
    TERM_B_OPS                     shift and go to state 215
    e                              shift and go to state 216

state 166

    (120) P5 -> e .

    TIMES           reduce using rule 120 (P5 -> e .)
    DIVIDE          reduce using rule 120 (P5 -> e .)
    PLUS            reduce using rule 120 (P5 -> e .)
    MINUS           reduce using rule 120 (P5 -> e .)
    GT              reduce using rule 120 (P5 -> e .)
    LT              reduce using rule 120 (P5 -> e .)
    EQ              reduce using rule 120 (P5 -> e .)
    DIFF            reduce using rule 120 (P5 -> e .)
    AND             reduce using rule 120 (P5 -> e .)
    OR              reduce using rule 120 (P5 -> e .)
    SEMICOLON       reduce using rule 120 (P5 -> e .)
    RPAR            reduce using rule 120 (P5 -> e .)
    LARROW          reduce using rule 120 (P5 -> e .)
    LTRIAN          reduce using rule 120 (P5 -> e .)
    COMMA           reduce using rule 120 (P5 -> e .)
    RSQUARE         reduce using rule 120 (P5 -> e .)


state 167

    (121) IDVARID -> ID EXPVARID .

    TIMES           reduce using rule 121 (IDVARID -> ID EXPVARID .)
    DIVIDE          reduce using rule 121 (IDVARID -> ID EXPVARID .)
    PLUS            reduce using rule 121 (IDVARID -> ID EXPVARID .)
    MINUS           reduce using rule 121 (IDVARID -> ID EXPVARID .)
    GT              reduce using rule 121 (IDVARID -> ID EXPVARID .)
    LT              reduce using rule 121 (IDVARID -> ID EXPVARID .)
    EQ              reduce using rule 121 (IDVARID -> ID EXPVARID .)
    DIFF            reduce using rule 121 (IDVARID -> ID EXPVARID .)
    AND             reduce using rule 121 (IDVARID -> ID EXPVARID .)
    OR              reduce using rule 121 (IDVARID -> ID EXPVARID .)
    SEMICOLON       reduce using rule 121 (IDVARID -> ID EXPVARID .)
    RPAR            reduce using rule 121 (IDVARID -> ID EXPVARID .)
    LARROW          reduce using rule 121 (IDVARID -> ID EXPVARID .)
    LTRIAN          reduce using rule 121 (IDVARID -> ID EXPVARID .)
    COMMA           reduce using rule 121 (IDVARID -> ID EXPVARID .)
    RSQUARE         reduce using rule 121 (IDVARID -> ID EXPVARID .)


state 168

    (8) EXPVARID -> LSQUARE . C1 EXP C2 RSQUARE EXPVARIDB
    (40) C1 -> . e
    (139) e -> .

    NUMBER          reduce using rule 139 (e -> .)
    ID              reduce using rule 139 (e -> .)
    LPAR            reduce using rule 139 (e -> .)
    PLUS            reduce using rule 139 (e -> .)
    MINUS           reduce using rule 139 (e -> .)
    NOTE            reduce using rule 139 (e -> .)
    BOOL            reduce using rule 139 (e -> .)
    STRING          reduce using rule 139 (e -> .)
    INPUT           reduce using rule 139 (e -> .)

    C1                             shift and go to state 219
    e                              shift and go to state 136

state 169

    (128) FACTOR -> LPAR P6 . EXPRESSION RPAR
    (86) EXPRESSION -> . EXPOR
    (87) EXPOR -> . EXPAND P10 EXPORB
    (92) EXPAND -> . EXPEQ P9 EXPANDB
    (97) EXPEQ -> . EXP P8 EXPEQB
    (103) EXP -> . EXPR P7 EXPB
    (109) EXPR -> . TERM P4 EXPR_B
    (115) TERM -> . FACTOR P5 TERM_B
    (125) FACTOR -> . NUMBER
    (126) FACTOR -> . ID
    (127) FACTOR -> . FACTOR_CTE
    (128) FACTOR -> . LPAR P6 EXPRESSION RPAR
    (129) FACTOR -> . IDVARID
    (130) FACTOR -> . FUNCCALL
    (131) FACTOR -> . VARCTE
    (132) FACTOR -> . READ
    (134) FACTOR_CTE -> . PLUS NUMBER
    (135) FACTOR_CTE -> . MINUS NUMBER
    (121) IDVARID -> . ID EXPVARID
    (44) FUNCCALL -> . ID LPAR CALLARGS RPAR
    (136) VARCTE -> . NOTE
    (137) VARCTE -> . BOOL
    (138) VARCTE -> . STRING
    (45) READ -> . INPUT LPAR READAUX RPAR

    NUMBER          shift and go to state 117
    ID              shift and go to state 118
    LPAR            shift and go to state 120
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    NOTE            shift and go to state 127
    BOOL            shift and go to state 128
    STRING          shift and go to state 129
    INPUT           shift and go to state 70

    EXPRESSION                     shift and go to state 220
    EXPOR                          shift and go to state 110
    EXPAND                         shift and go to state 111
    EXPEQ                          shift and go to state 112
    EXP                            shift and go to state 113
    EXPR                           shift and go to state 114
    TERM                           shift and go to state 115
    FACTOR                         shift and go to state 116
    FACTOR_CTE                     shift and go to state 119
    IDVARID                        shift and go to state 121
    FUNCCALL                       shift and go to state 122
    VARCTE                         shift and go to state 123
    READ                           shift and go to state 124

state 170

    (133) P6 -> e .

    NUMBER          reduce using rule 133 (P6 -> e .)
    ID              reduce using rule 133 (P6 -> e .)
    LPAR            reduce using rule 133 (P6 -> e .)
    PLUS            reduce using rule 133 (P6 -> e .)
    MINUS           reduce using rule 133 (P6 -> e .)
    NOTE            reduce using rule 133 (P6 -> e .)
    BOOL            reduce using rule 133 (P6 -> e .)
    STRING          reduce using rule 133 (P6 -> e .)
    INPUT           reduce using rule 133 (P6 -> e .)


state 171

    (134) FACTOR_CTE -> PLUS NUMBER .

    TIMES           reduce using rule 134 (FACTOR_CTE -> PLUS NUMBER .)
    DIVIDE          reduce using rule 134 (FACTOR_CTE -> PLUS NUMBER .)
    PLUS            reduce using rule 134 (FACTOR_CTE -> PLUS NUMBER .)
    MINUS           reduce using rule 134 (FACTOR_CTE -> PLUS NUMBER .)
    GT              reduce using rule 134 (FACTOR_CTE -> PLUS NUMBER .)
    LT              reduce using rule 134 (FACTOR_CTE -> PLUS NUMBER .)
    EQ              reduce using rule 134 (FACTOR_CTE -> PLUS NUMBER .)
    DIFF            reduce using rule 134 (FACTOR_CTE -> PLUS NUMBER .)
    AND             reduce using rule 134 (FACTOR_CTE -> PLUS NUMBER .)
    OR              reduce using rule 134 (FACTOR_CTE -> PLUS NUMBER .)
    SEMICOLON       reduce using rule 134 (FACTOR_CTE -> PLUS NUMBER .)
    RPAR            reduce using rule 134 (FACTOR_CTE -> PLUS NUMBER .)
    LARROW          reduce using rule 134 (FACTOR_CTE -> PLUS NUMBER .)
    LTRIAN          reduce using rule 134 (FACTOR_CTE -> PLUS NUMBER .)
    COMMA           reduce using rule 134 (FACTOR_CTE -> PLUS NUMBER .)
    RSQUARE         reduce using rule 134 (FACTOR_CTE -> PLUS NUMBER .)


state 172

    (135) FACTOR_CTE -> MINUS NUMBER .

    TIMES           reduce using rule 135 (FACTOR_CTE -> MINUS NUMBER .)
    DIVIDE          reduce using rule 135 (FACTOR_CTE -> MINUS NUMBER .)
    PLUS            reduce using rule 135 (FACTOR_CTE -> MINUS NUMBER .)
    MINUS           reduce using rule 135 (FACTOR_CTE -> MINUS NUMBER .)
    GT              reduce using rule 135 (FACTOR_CTE -> MINUS NUMBER .)
    LT              reduce using rule 135 (FACTOR_CTE -> MINUS NUMBER .)
    EQ              reduce using rule 135 (FACTOR_CTE -> MINUS NUMBER .)
    DIFF            reduce using rule 135 (FACTOR_CTE -> MINUS NUMBER .)
    AND             reduce using rule 135 (FACTOR_CTE -> MINUS NUMBER .)
    OR              reduce using rule 135 (FACTOR_CTE -> MINUS NUMBER .)
    SEMICOLON       reduce using rule 135 (FACTOR_CTE -> MINUS NUMBER .)
    RPAR            reduce using rule 135 (FACTOR_CTE -> MINUS NUMBER .)
    LARROW          reduce using rule 135 (FACTOR_CTE -> MINUS NUMBER .)
    LTRIAN          reduce using rule 135 (FACTOR_CTE -> MINUS NUMBER .)
    COMMA           reduce using rule 135 (FACTOR_CTE -> MINUS NUMBER .)
    RSQUARE         reduce using rule 135 (FACTOR_CTE -> MINUS NUMBER .)


state 173

    (65) ASSIGN -> ID EXPVARIDB ASSIGNATION ASSIGNH .

    SEMICOLON       reduce using rule 65 (ASSIGN -> ID EXPVARIDB ASSIGNATION ASSIGNH .)


state 174

    (63) ASSIGNH -> EXPRESSION .

    SEMICOLON       reduce using rule 63 (ASSIGNH -> EXPRESSION .)


state 175

    (64) ASSIGNH -> ARRAY .

    SEMICOLON       reduce using rule 64 (ASSIGNH -> ARRAY .)


state 176

    (122) ARRAY -> LSQUARE . C1 EXP C2 ARRAYB RSQUARE
    (40) C1 -> . e
    (139) e -> .

    NUMBER          reduce using rule 139 (e -> .)
    ID              reduce using rule 139 (e -> .)
    LPAR            reduce using rule 139 (e -> .)
    PLUS            reduce using rule 139 (e -> .)
    MINUS           reduce using rule 139 (e -> .)
    NOTE            reduce using rule 139 (e -> .)
    BOOL            reduce using rule 139 (e -> .)
    STRING          reduce using rule 139 (e -> .)
    INPUT           reduce using rule 139 (e -> .)

    C1                             shift and go to state 221
    e                              shift and go to state 136

state 177

    (44) FUNCCALL -> ID LPAR CALLARGS RPAR .

    SEMICOLON       reduce using rule 44 (FUNCCALL -> ID LPAR CALLARGS RPAR .)
    TIMES           reduce using rule 44 (FUNCCALL -> ID LPAR CALLARGS RPAR .)
    DIVIDE          reduce using rule 44 (FUNCCALL -> ID LPAR CALLARGS RPAR .)
    PLUS            reduce using rule 44 (FUNCCALL -> ID LPAR CALLARGS RPAR .)
    MINUS           reduce using rule 44 (FUNCCALL -> ID LPAR CALLARGS RPAR .)
    GT              reduce using rule 44 (FUNCCALL -> ID LPAR CALLARGS RPAR .)
    LT              reduce using rule 44 (FUNCCALL -> ID LPAR CALLARGS RPAR .)
    EQ              reduce using rule 44 (FUNCCALL -> ID LPAR CALLARGS RPAR .)
    DIFF            reduce using rule 44 (FUNCCALL -> ID LPAR CALLARGS RPAR .)
    AND             reduce using rule 44 (FUNCCALL -> ID LPAR CALLARGS RPAR .)
    OR              reduce using rule 44 (FUNCCALL -> ID LPAR CALLARGS RPAR .)
    RPAR            reduce using rule 44 (FUNCCALL -> ID LPAR CALLARGS RPAR .)
    LARROW          reduce using rule 44 (FUNCCALL -> ID LPAR CALLARGS RPAR .)
    LTRIAN          reduce using rule 44 (FUNCCALL -> ID LPAR CALLARGS RPAR .)
    COMMA           reduce using rule 44 (FUNCCALL -> ID LPAR CALLARGS RPAR .)
    RSQUARE         reduce using rule 44 (FUNCCALL -> ID LPAR CALLARGS RPAR .)


state 178

    (38) CALLARGS -> C1 EXPRESSION . C2 H_CALLARGS
    (41) C2 -> . e
    (139) e -> .

    COMMA           reduce using rule 139 (e -> .)
    RPAR            reduce using rule 139 (e -> .)

    C2                             shift and go to state 222
    e                              shift and go to state 223

state 179

    (9) EXPVARIDB -> LSQUARE C1 EXP . C2 RSQUARE EXPVARIDB
    (41) C2 -> . e
    (139) e -> .

    RSQUARE         reduce using rule 139 (e -> .)

    C2                             shift and go to state 224
    e                              shift and go to state 223

state 180

    (80) WHILE_BLOCK -> WHILE W1 DDOT EXPRESSION . A1 BLOCK W2
    (67) A1 -> . e
    (139) e -> .

    LTRIAN          reduce using rule 139 (e -> .)

    A1                             shift and go to state 225
    e                              shift and go to state 184

state 181

    (83) RITORNELLO -> LRITT RITARG STATEMENTS RRITT .

    ID              reduce using rule 83 (RITORNELLO -> LRITT RITARG STATEMENTS RRITT .)
    WHILE           reduce using rule 83 (RITORNELLO -> LRITT RITARG STATEMENTS RRITT .)
    LRITT           reduce using rule 83 (RITORNELLO -> LRITT RITARG STATEMENTS RRITT .)
    IF              reduce using rule 83 (RITORNELLO -> LRITT RITARG STATEMENTS RRITT .)
    DISP            reduce using rule 83 (RITORNELLO -> LRITT RITARG STATEMENTS RRITT .)
    PLAYT           reduce using rule 83 (RITORNELLO -> LRITT RITARG STATEMENTS RRITT .)
    STREAMT         reduce using rule 83 (RITORNELLO -> LRITT RITARG STATEMENTS RRITT .)
    MST             reduce using rule 83 (RITORNELLO -> LRITT RITARG STATEMENTS RRITT .)
    INPUT           reduce using rule 83 (RITORNELLO -> LRITT RITARG STATEMENTS RRITT .)
    RETURN          reduce using rule 83 (RITORNELLO -> LRITT RITARG STATEMENTS RRITT .)
    RTRIAN          reduce using rule 83 (RITORNELLO -> LRITT RITARG STATEMENTS RRITT .)
    RRITT           reduce using rule 83 (RITORNELLO -> LRITT RITARG STATEMENTS RRITT .)


state 182

    (84) RITARG -> LPAR EXPRESSION RPAR . LARROW

    LARROW          shift and go to state 226


state 183

    (66) IF_BLOCK -> IF DDOT EXPRESSION A1 . IF_B
    (71) IF_B -> . BLOCK F_ELSE A2
    (72) IF_B -> . LARROW IF_ARROW SEMICOLON A2
    (62) BLOCK -> . LTRIAN STATEMENTS RTRIAN

    LARROW          shift and go to state 229
    LTRIAN          shift and go to state 230

    IF_B                           shift and go to state 227
    BLOCK                          shift and go to state 228

state 184

    (67) A1 -> e .

    LARROW          reduce using rule 67 (A1 -> e .)
    LTRIAN          reduce using rule 67 (A1 -> e .)


state 185

    (49) PRINT -> DISP LPAR CALLARGS RPAR .

    SEMICOLON       reduce using rule 49 (PRINT -> DISP LPAR CALLARGS RPAR .)


state 186

    (52) PLAYFUNCS -> PLAYT LPAR EXP COMMA . EXP RPAR
    (103) EXP -> . EXPR P7 EXPB
    (109) EXPR -> . TERM P4 EXPR_B
    (115) TERM -> . FACTOR P5 TERM_B
    (125) FACTOR -> . NUMBER
    (126) FACTOR -> . ID
    (127) FACTOR -> . FACTOR_CTE
    (128) FACTOR -> . LPAR P6 EXPRESSION RPAR
    (129) FACTOR -> . IDVARID
    (130) FACTOR -> . FUNCCALL
    (131) FACTOR -> . VARCTE
    (132) FACTOR -> . READ
    (134) FACTOR_CTE -> . PLUS NUMBER
    (135) FACTOR_CTE -> . MINUS NUMBER
    (121) IDVARID -> . ID EXPVARID
    (44) FUNCCALL -> . ID LPAR CALLARGS RPAR
    (136) VARCTE -> . NOTE
    (137) VARCTE -> . BOOL
    (138) VARCTE -> . STRING
    (45) READ -> . INPUT LPAR READAUX RPAR

    NUMBER          shift and go to state 117
    ID              shift and go to state 118
    LPAR            shift and go to state 120
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    NOTE            shift and go to state 127
    BOOL            shift and go to state 128
    STRING          shift and go to state 129
    INPUT           shift and go to state 70

    EXP                            shift and go to state 231
    EXPR                           shift and go to state 114
    TERM                           shift and go to state 115
    FACTOR                         shift and go to state 116
    FACTOR_CTE                     shift and go to state 119
    IDVARID                        shift and go to state 121
    FUNCCALL                       shift and go to state 122
    VARCTE                         shift and go to state 123
    READ                           shift and go to state 124

state 187

    (53) PLAYFUNCS -> PLAYT LPAR SILENCE COMMA . EXP COMMA EXP RPAR
    (103) EXP -> . EXPR P7 EXPB
    (109) EXPR -> . TERM P4 EXPR_B
    (115) TERM -> . FACTOR P5 TERM_B
    (125) FACTOR -> . NUMBER
    (126) FACTOR -> . ID
    (127) FACTOR -> . FACTOR_CTE
    (128) FACTOR -> . LPAR P6 EXPRESSION RPAR
    (129) FACTOR -> . IDVARID
    (130) FACTOR -> . FUNCCALL
    (131) FACTOR -> . VARCTE
    (132) FACTOR -> . READ
    (134) FACTOR_CTE -> . PLUS NUMBER
    (135) FACTOR_CTE -> . MINUS NUMBER
    (121) IDVARID -> . ID EXPVARID
    (44) FUNCCALL -> . ID LPAR CALLARGS RPAR
    (136) VARCTE -> . NOTE
    (137) VARCTE -> . BOOL
    (138) VARCTE -> . STRING
    (45) READ -> . INPUT LPAR READAUX RPAR

    NUMBER          shift and go to state 117
    ID              shift and go to state 118
    LPAR            shift and go to state 120
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    NOTE            shift and go to state 127
    BOOL            shift and go to state 128
    STRING          shift and go to state 129
    INPUT           shift and go to state 70

    EXP                            shift and go to state 232
    EXPR                           shift and go to state 114
    TERM                           shift and go to state 115
    FACTOR                         shift and go to state 116
    FACTOR_CTE                     shift and go to state 119
    IDVARID                        shift and go to state 121
    FUNCCALL                       shift and go to state 122
    VARCTE                         shift and go to state 123
    READ                           shift and go to state 124

state 188

    (50) MUSICFUNCS -> STREAMT LPAR EXP RPAR .

    SEMICOLON       reduce using rule 50 (MUSICFUNCS -> STREAMT LPAR EXP RPAR .)


state 189

    (45) READ -> INPUT LPAR READAUX RPAR .

    SEMICOLON       reduce using rule 45 (READ -> INPUT LPAR READAUX RPAR .)
    TIMES           reduce using rule 45 (READ -> INPUT LPAR READAUX RPAR .)
    DIVIDE          reduce using rule 45 (READ -> INPUT LPAR READAUX RPAR .)
    PLUS            reduce using rule 45 (READ -> INPUT LPAR READAUX RPAR .)
    MINUS           reduce using rule 45 (READ -> INPUT LPAR READAUX RPAR .)
    GT              reduce using rule 45 (READ -> INPUT LPAR READAUX RPAR .)
    LT              reduce using rule 45 (READ -> INPUT LPAR READAUX RPAR .)
    EQ              reduce using rule 45 (READ -> INPUT LPAR READAUX RPAR .)
    DIFF            reduce using rule 45 (READ -> INPUT LPAR READAUX RPAR .)
    AND             reduce using rule 45 (READ -> INPUT LPAR READAUX RPAR .)
    OR              reduce using rule 45 (READ -> INPUT LPAR READAUX RPAR .)
    RPAR            reduce using rule 45 (READ -> INPUT LPAR READAUX RPAR .)
    LARROW          reduce using rule 45 (READ -> INPUT LPAR READAUX RPAR .)
    LTRIAN          reduce using rule 45 (READ -> INPUT LPAR READAUX RPAR .)
    COMMA           reduce using rule 45 (READ -> INPUT LPAR READAUX RPAR .)
    RSQUARE         reduce using rule 45 (READ -> INPUT LPAR READAUX RPAR .)


state 190

    (36) H_ARGS -> COMMA ARGS .

    LARROW          reduce using rule 36 (H_ARGS -> COMMA ARGS .)


state 191

    (87) EXPOR -> EXPAND P10 EXPORB .

    SEMICOLON       reduce using rule 87 (EXPOR -> EXPAND P10 EXPORB .)
    RPAR            reduce using rule 87 (EXPOR -> EXPAND P10 EXPORB .)
    LARROW          reduce using rule 87 (EXPOR -> EXPAND P10 EXPORB .)
    LTRIAN          reduce using rule 87 (EXPOR -> EXPAND P10 EXPORB .)
    COMMA           reduce using rule 87 (EXPOR -> EXPAND P10 EXPORB .)


state 192

    (88) EXPORB -> EXPOR_OPS . EXPOR
    (87) EXPOR -> . EXPAND P10 EXPORB
    (92) EXPAND -> . EXPEQ P9 EXPANDB
    (97) EXPEQ -> . EXP P8 EXPEQB
    (103) EXP -> . EXPR P7 EXPB
    (109) EXPR -> . TERM P4 EXPR_B
    (115) TERM -> . FACTOR P5 TERM_B
    (125) FACTOR -> . NUMBER
    (126) FACTOR -> . ID
    (127) FACTOR -> . FACTOR_CTE
    (128) FACTOR -> . LPAR P6 EXPRESSION RPAR
    (129) FACTOR -> . IDVARID
    (130) FACTOR -> . FUNCCALL
    (131) FACTOR -> . VARCTE
    (132) FACTOR -> . READ
    (134) FACTOR_CTE -> . PLUS NUMBER
    (135) FACTOR_CTE -> . MINUS NUMBER
    (121) IDVARID -> . ID EXPVARID
    (44) FUNCCALL -> . ID LPAR CALLARGS RPAR
    (136) VARCTE -> . NOTE
    (137) VARCTE -> . BOOL
    (138) VARCTE -> . STRING
    (45) READ -> . INPUT LPAR READAUX RPAR

    NUMBER          shift and go to state 117
    ID              shift and go to state 118
    LPAR            shift and go to state 120
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    NOTE            shift and go to state 127
    BOOL            shift and go to state 128
    STRING          shift and go to state 129
    INPUT           shift and go to state 70

    EXPOR                          shift and go to state 233
    EXPAND                         shift and go to state 111
    EXPEQ                          shift and go to state 112
    EXP                            shift and go to state 113
    EXPR                           shift and go to state 114
    TERM                           shift and go to state 115
    FACTOR                         shift and go to state 116
    FACTOR_CTE                     shift and go to state 119
    IDVARID                        shift and go to state 121
    FUNCCALL                       shift and go to state 122
    VARCTE                         shift and go to state 123
    READ                           shift and go to state 124

state 193

    (89) EXPORB -> e .

    SEMICOLON       reduce using rule 89 (EXPORB -> e .)
    RPAR            reduce using rule 89 (EXPORB -> e .)
    LARROW          reduce using rule 89 (EXPORB -> e .)
    LTRIAN          reduce using rule 89 (EXPORB -> e .)
    COMMA           reduce using rule 89 (EXPORB -> e .)


state 194

    (90) EXPOR_OPS -> OR .

    NUMBER          reduce using rule 90 (EXPOR_OPS -> OR .)
    ID              reduce using rule 90 (EXPOR_OPS -> OR .)
    LPAR            reduce using rule 90 (EXPOR_OPS -> OR .)
    PLUS            reduce using rule 90 (EXPOR_OPS -> OR .)
    MINUS           reduce using rule 90 (EXPOR_OPS -> OR .)
    NOTE            reduce using rule 90 (EXPOR_OPS -> OR .)
    BOOL            reduce using rule 90 (EXPOR_OPS -> OR .)
    STRING          reduce using rule 90 (EXPOR_OPS -> OR .)
    INPUT           reduce using rule 90 (EXPOR_OPS -> OR .)


state 195

    (92) EXPAND -> EXPEQ P9 EXPANDB .

    OR              reduce using rule 92 (EXPAND -> EXPEQ P9 EXPANDB .)
    SEMICOLON       reduce using rule 92 (EXPAND -> EXPEQ P9 EXPANDB .)
    RPAR            reduce using rule 92 (EXPAND -> EXPEQ P9 EXPANDB .)
    LARROW          reduce using rule 92 (EXPAND -> EXPEQ P9 EXPANDB .)
    LTRIAN          reduce using rule 92 (EXPAND -> EXPEQ P9 EXPANDB .)
    COMMA           reduce using rule 92 (EXPAND -> EXPEQ P9 EXPANDB .)


state 196

    (93) EXPANDB -> EXPAND_OPS . EXPAND
    (92) EXPAND -> . EXPEQ P9 EXPANDB
    (97) EXPEQ -> . EXP P8 EXPEQB
    (103) EXP -> . EXPR P7 EXPB
    (109) EXPR -> . TERM P4 EXPR_B
    (115) TERM -> . FACTOR P5 TERM_B
    (125) FACTOR -> . NUMBER
    (126) FACTOR -> . ID
    (127) FACTOR -> . FACTOR_CTE
    (128) FACTOR -> . LPAR P6 EXPRESSION RPAR
    (129) FACTOR -> . IDVARID
    (130) FACTOR -> . FUNCCALL
    (131) FACTOR -> . VARCTE
    (132) FACTOR -> . READ
    (134) FACTOR_CTE -> . PLUS NUMBER
    (135) FACTOR_CTE -> . MINUS NUMBER
    (121) IDVARID -> . ID EXPVARID
    (44) FUNCCALL -> . ID LPAR CALLARGS RPAR
    (136) VARCTE -> . NOTE
    (137) VARCTE -> . BOOL
    (138) VARCTE -> . STRING
    (45) READ -> . INPUT LPAR READAUX RPAR

    NUMBER          shift and go to state 117
    ID              shift and go to state 118
    LPAR            shift and go to state 120
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    NOTE            shift and go to state 127
    BOOL            shift and go to state 128
    STRING          shift and go to state 129
    INPUT           shift and go to state 70

    EXPAND                         shift and go to state 234
    EXPEQ                          shift and go to state 112
    EXP                            shift and go to state 113
    EXPR                           shift and go to state 114
    TERM                           shift and go to state 115
    FACTOR                         shift and go to state 116
    FACTOR_CTE                     shift and go to state 119
    IDVARID                        shift and go to state 121
    FUNCCALL                       shift and go to state 122
    VARCTE                         shift and go to state 123
    READ                           shift and go to state 124

state 197

    (94) EXPANDB -> e .

    OR              reduce using rule 94 (EXPANDB -> e .)
    SEMICOLON       reduce using rule 94 (EXPANDB -> e .)
    RPAR            reduce using rule 94 (EXPANDB -> e .)
    LARROW          reduce using rule 94 (EXPANDB -> e .)
    LTRIAN          reduce using rule 94 (EXPANDB -> e .)
    COMMA           reduce using rule 94 (EXPANDB -> e .)


state 198

    (95) EXPAND_OPS -> AND .

    NUMBER          reduce using rule 95 (EXPAND_OPS -> AND .)
    ID              reduce using rule 95 (EXPAND_OPS -> AND .)
    LPAR            reduce using rule 95 (EXPAND_OPS -> AND .)
    PLUS            reduce using rule 95 (EXPAND_OPS -> AND .)
    MINUS           reduce using rule 95 (EXPAND_OPS -> AND .)
    NOTE            reduce using rule 95 (EXPAND_OPS -> AND .)
    BOOL            reduce using rule 95 (EXPAND_OPS -> AND .)
    STRING          reduce using rule 95 (EXPAND_OPS -> AND .)
    INPUT           reduce using rule 95 (EXPAND_OPS -> AND .)


state 199

    (97) EXPEQ -> EXP P8 EXPEQB .

    AND             reduce using rule 97 (EXPEQ -> EXP P8 EXPEQB .)
    OR              reduce using rule 97 (EXPEQ -> EXP P8 EXPEQB .)
    SEMICOLON       reduce using rule 97 (EXPEQ -> EXP P8 EXPEQB .)
    RPAR            reduce using rule 97 (EXPEQ -> EXP P8 EXPEQB .)
    LARROW          reduce using rule 97 (EXPEQ -> EXP P8 EXPEQB .)
    LTRIAN          reduce using rule 97 (EXPEQ -> EXP P8 EXPEQB .)
    COMMA           reduce using rule 97 (EXPEQ -> EXP P8 EXPEQB .)


state 200

    (98) EXPEQB -> EXPEQ_OPS . EXPEQ
    (97) EXPEQ -> . EXP P8 EXPEQB
    (103) EXP -> . EXPR P7 EXPB
    (109) EXPR -> . TERM P4 EXPR_B
    (115) TERM -> . FACTOR P5 TERM_B
    (125) FACTOR -> . NUMBER
    (126) FACTOR -> . ID
    (127) FACTOR -> . FACTOR_CTE
    (128) FACTOR -> . LPAR P6 EXPRESSION RPAR
    (129) FACTOR -> . IDVARID
    (130) FACTOR -> . FUNCCALL
    (131) FACTOR -> . VARCTE
    (132) FACTOR -> . READ
    (134) FACTOR_CTE -> . PLUS NUMBER
    (135) FACTOR_CTE -> . MINUS NUMBER
    (121) IDVARID -> . ID EXPVARID
    (44) FUNCCALL -> . ID LPAR CALLARGS RPAR
    (136) VARCTE -> . NOTE
    (137) VARCTE -> . BOOL
    (138) VARCTE -> . STRING
    (45) READ -> . INPUT LPAR READAUX RPAR

    NUMBER          shift and go to state 117
    ID              shift and go to state 118
    LPAR            shift and go to state 120
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    NOTE            shift and go to state 127
    BOOL            shift and go to state 128
    STRING          shift and go to state 129
    INPUT           shift and go to state 70

    EXPEQ                          shift and go to state 235
    EXP                            shift and go to state 113
    EXPR                           shift and go to state 114
    TERM                           shift and go to state 115
    FACTOR                         shift and go to state 116
    FACTOR_CTE                     shift and go to state 119
    IDVARID                        shift and go to state 121
    FUNCCALL                       shift and go to state 122
    VARCTE                         shift and go to state 123
    READ                           shift and go to state 124

state 201

    (99) EXPEQB -> e .

    AND             reduce using rule 99 (EXPEQB -> e .)
    OR              reduce using rule 99 (EXPEQB -> e .)
    SEMICOLON       reduce using rule 99 (EXPEQB -> e .)
    RPAR            reduce using rule 99 (EXPEQB -> e .)
    LARROW          reduce using rule 99 (EXPEQB -> e .)
    LTRIAN          reduce using rule 99 (EXPEQB -> e .)
    COMMA           reduce using rule 99 (EXPEQB -> e .)


state 202

    (100) EXPEQ_OPS -> EQ .

    NUMBER          reduce using rule 100 (EXPEQ_OPS -> EQ .)
    ID              reduce using rule 100 (EXPEQ_OPS -> EQ .)
    LPAR            reduce using rule 100 (EXPEQ_OPS -> EQ .)
    PLUS            reduce using rule 100 (EXPEQ_OPS -> EQ .)
    MINUS           reduce using rule 100 (EXPEQ_OPS -> EQ .)
    NOTE            reduce using rule 100 (EXPEQ_OPS -> EQ .)
    BOOL            reduce using rule 100 (EXPEQ_OPS -> EQ .)
    STRING          reduce using rule 100 (EXPEQ_OPS -> EQ .)
    INPUT           reduce using rule 100 (EXPEQ_OPS -> EQ .)


state 203

    (101) EXPEQ_OPS -> DIFF .

    NUMBER          reduce using rule 101 (EXPEQ_OPS -> DIFF .)
    ID              reduce using rule 101 (EXPEQ_OPS -> DIFF .)
    LPAR            reduce using rule 101 (EXPEQ_OPS -> DIFF .)
    PLUS            reduce using rule 101 (EXPEQ_OPS -> DIFF .)
    MINUS           reduce using rule 101 (EXPEQ_OPS -> DIFF .)
    NOTE            reduce using rule 101 (EXPEQ_OPS -> DIFF .)
    BOOL            reduce using rule 101 (EXPEQ_OPS -> DIFF .)
    STRING          reduce using rule 101 (EXPEQ_OPS -> DIFF .)
    INPUT           reduce using rule 101 (EXPEQ_OPS -> DIFF .)


state 204

    (103) EXP -> EXPR P7 EXPB .

    EQ              reduce using rule 103 (EXP -> EXPR P7 EXPB .)
    DIFF            reduce using rule 103 (EXP -> EXPR P7 EXPB .)
    AND             reduce using rule 103 (EXP -> EXPR P7 EXPB .)
    OR              reduce using rule 103 (EXP -> EXPR P7 EXPB .)
    SEMICOLON       reduce using rule 103 (EXP -> EXPR P7 EXPB .)
    RPAR            reduce using rule 103 (EXP -> EXPR P7 EXPB .)
    LARROW          reduce using rule 103 (EXP -> EXPR P7 EXPB .)
    LTRIAN          reduce using rule 103 (EXP -> EXPR P7 EXPB .)
    COMMA           reduce using rule 103 (EXP -> EXPR P7 EXPB .)
    RSQUARE         reduce using rule 103 (EXP -> EXPR P7 EXPB .)


state 205

    (104) EXPB -> e .

    EQ              reduce using rule 104 (EXPB -> e .)
    DIFF            reduce using rule 104 (EXPB -> e .)
    AND             reduce using rule 104 (EXPB -> e .)
    OR              reduce using rule 104 (EXPB -> e .)
    SEMICOLON       reduce using rule 104 (EXPB -> e .)
    RPAR            reduce using rule 104 (EXPB -> e .)
    LARROW          reduce using rule 104 (EXPB -> e .)
    LTRIAN          reduce using rule 104 (EXPB -> e .)
    COMMA           reduce using rule 104 (EXPB -> e .)
    RSQUARE         reduce using rule 104 (EXPB -> e .)


state 206

    (105) EXPB -> EXP2_ops . EXP
    (103) EXP -> . EXPR P7 EXPB
    (109) EXPR -> . TERM P4 EXPR_B
    (115) TERM -> . FACTOR P5 TERM_B
    (125) FACTOR -> . NUMBER
    (126) FACTOR -> . ID
    (127) FACTOR -> . FACTOR_CTE
    (128) FACTOR -> . LPAR P6 EXPRESSION RPAR
    (129) FACTOR -> . IDVARID
    (130) FACTOR -> . FUNCCALL
    (131) FACTOR -> . VARCTE
    (132) FACTOR -> . READ
    (134) FACTOR_CTE -> . PLUS NUMBER
    (135) FACTOR_CTE -> . MINUS NUMBER
    (121) IDVARID -> . ID EXPVARID
    (44) FUNCCALL -> . ID LPAR CALLARGS RPAR
    (136) VARCTE -> . NOTE
    (137) VARCTE -> . BOOL
    (138) VARCTE -> . STRING
    (45) READ -> . INPUT LPAR READAUX RPAR

    NUMBER          shift and go to state 117
    ID              shift and go to state 118
    LPAR            shift and go to state 120
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    NOTE            shift and go to state 127
    BOOL            shift and go to state 128
    STRING          shift and go to state 129
    INPUT           shift and go to state 70

    EXP                            shift and go to state 236
    EXPR                           shift and go to state 114
    TERM                           shift and go to state 115
    FACTOR                         shift and go to state 116
    FACTOR_CTE                     shift and go to state 119
    IDVARID                        shift and go to state 121
    FUNCCALL                       shift and go to state 122
    VARCTE                         shift and go to state 123
    READ                           shift and go to state 124

state 207

    (106) EXP2_ops -> GT .

    NUMBER          reduce using rule 106 (EXP2_ops -> GT .)
    ID              reduce using rule 106 (EXP2_ops -> GT .)
    LPAR            reduce using rule 106 (EXP2_ops -> GT .)
    PLUS            reduce using rule 106 (EXP2_ops -> GT .)
    MINUS           reduce using rule 106 (EXP2_ops -> GT .)
    NOTE            reduce using rule 106 (EXP2_ops -> GT .)
    BOOL            reduce using rule 106 (EXP2_ops -> GT .)
    STRING          reduce using rule 106 (EXP2_ops -> GT .)
    INPUT           reduce using rule 106 (EXP2_ops -> GT .)


state 208

    (107) EXP2_ops -> LT .

    NUMBER          reduce using rule 107 (EXP2_ops -> LT .)
    ID              reduce using rule 107 (EXP2_ops -> LT .)
    LPAR            reduce using rule 107 (EXP2_ops -> LT .)
    PLUS            reduce using rule 107 (EXP2_ops -> LT .)
    MINUS           reduce using rule 107 (EXP2_ops -> LT .)
    NOTE            reduce using rule 107 (EXP2_ops -> LT .)
    BOOL            reduce using rule 107 (EXP2_ops -> LT .)
    STRING          reduce using rule 107 (EXP2_ops -> LT .)
    INPUT           reduce using rule 107 (EXP2_ops -> LT .)


state 209

    (109) EXPR -> TERM P4 EXPR_B .

    GT              reduce using rule 109 (EXPR -> TERM P4 EXPR_B .)
    LT              reduce using rule 109 (EXPR -> TERM P4 EXPR_B .)
    EQ              reduce using rule 109 (EXPR -> TERM P4 EXPR_B .)
    DIFF            reduce using rule 109 (EXPR -> TERM P4 EXPR_B .)
    AND             reduce using rule 109 (EXPR -> TERM P4 EXPR_B .)
    OR              reduce using rule 109 (EXPR -> TERM P4 EXPR_B .)
    SEMICOLON       reduce using rule 109 (EXPR -> TERM P4 EXPR_B .)
    RPAR            reduce using rule 109 (EXPR -> TERM P4 EXPR_B .)
    LARROW          reduce using rule 109 (EXPR -> TERM P4 EXPR_B .)
    LTRIAN          reduce using rule 109 (EXPR -> TERM P4 EXPR_B .)
    COMMA           reduce using rule 109 (EXPR -> TERM P4 EXPR_B .)
    RSQUARE         reduce using rule 109 (EXPR -> TERM P4 EXPR_B .)


state 210

    (110) EXPR_B -> EXPR_B_OPS . EXPR
    (109) EXPR -> . TERM P4 EXPR_B
    (115) TERM -> . FACTOR P5 TERM_B
    (125) FACTOR -> . NUMBER
    (126) FACTOR -> . ID
    (127) FACTOR -> . FACTOR_CTE
    (128) FACTOR -> . LPAR P6 EXPRESSION RPAR
    (129) FACTOR -> . IDVARID
    (130) FACTOR -> . FUNCCALL
    (131) FACTOR -> . VARCTE
    (132) FACTOR -> . READ
    (134) FACTOR_CTE -> . PLUS NUMBER
    (135) FACTOR_CTE -> . MINUS NUMBER
    (121) IDVARID -> . ID EXPVARID
    (44) FUNCCALL -> . ID LPAR CALLARGS RPAR
    (136) VARCTE -> . NOTE
    (137) VARCTE -> . BOOL
    (138) VARCTE -> . STRING
    (45) READ -> . INPUT LPAR READAUX RPAR

    NUMBER          shift and go to state 117
    ID              shift and go to state 118
    LPAR            shift and go to state 120
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    NOTE            shift and go to state 127
    BOOL            shift and go to state 128
    STRING          shift and go to state 129
    INPUT           shift and go to state 70

    EXPR                           shift and go to state 237
    TERM                           shift and go to state 115
    FACTOR                         shift and go to state 116
    FACTOR_CTE                     shift and go to state 119
    IDVARID                        shift and go to state 121
    FUNCCALL                       shift and go to state 122
    VARCTE                         shift and go to state 123
    READ                           shift and go to state 124

state 211

    (111) EXPR_B -> e .

    GT              reduce using rule 111 (EXPR_B -> e .)
    LT              reduce using rule 111 (EXPR_B -> e .)
    EQ              reduce using rule 111 (EXPR_B -> e .)
    DIFF            reduce using rule 111 (EXPR_B -> e .)
    AND             reduce using rule 111 (EXPR_B -> e .)
    OR              reduce using rule 111 (EXPR_B -> e .)
    SEMICOLON       reduce using rule 111 (EXPR_B -> e .)
    RPAR            reduce using rule 111 (EXPR_B -> e .)
    LARROW          reduce using rule 111 (EXPR_B -> e .)
    LTRIAN          reduce using rule 111 (EXPR_B -> e .)
    COMMA           reduce using rule 111 (EXPR_B -> e .)
    RSQUARE         reduce using rule 111 (EXPR_B -> e .)


state 212

    (112) EXPR_B_OPS -> PLUS .

    NUMBER          reduce using rule 112 (EXPR_B_OPS -> PLUS .)
    ID              reduce using rule 112 (EXPR_B_OPS -> PLUS .)
    LPAR            reduce using rule 112 (EXPR_B_OPS -> PLUS .)
    PLUS            reduce using rule 112 (EXPR_B_OPS -> PLUS .)
    MINUS           reduce using rule 112 (EXPR_B_OPS -> PLUS .)
    NOTE            reduce using rule 112 (EXPR_B_OPS -> PLUS .)
    BOOL            reduce using rule 112 (EXPR_B_OPS -> PLUS .)
    STRING          reduce using rule 112 (EXPR_B_OPS -> PLUS .)
    INPUT           reduce using rule 112 (EXPR_B_OPS -> PLUS .)


state 213

    (113) EXPR_B_OPS -> MINUS .

    NUMBER          reduce using rule 113 (EXPR_B_OPS -> MINUS .)
    ID              reduce using rule 113 (EXPR_B_OPS -> MINUS .)
    LPAR            reduce using rule 113 (EXPR_B_OPS -> MINUS .)
    PLUS            reduce using rule 113 (EXPR_B_OPS -> MINUS .)
    MINUS           reduce using rule 113 (EXPR_B_OPS -> MINUS .)
    NOTE            reduce using rule 113 (EXPR_B_OPS -> MINUS .)
    BOOL            reduce using rule 113 (EXPR_B_OPS -> MINUS .)
    STRING          reduce using rule 113 (EXPR_B_OPS -> MINUS .)
    INPUT           reduce using rule 113 (EXPR_B_OPS -> MINUS .)


state 214

    (115) TERM -> FACTOR P5 TERM_B .

    PLUS            reduce using rule 115 (TERM -> FACTOR P5 TERM_B .)
    MINUS           reduce using rule 115 (TERM -> FACTOR P5 TERM_B .)
    GT              reduce using rule 115 (TERM -> FACTOR P5 TERM_B .)
    LT              reduce using rule 115 (TERM -> FACTOR P5 TERM_B .)
    EQ              reduce using rule 115 (TERM -> FACTOR P5 TERM_B .)
    DIFF            reduce using rule 115 (TERM -> FACTOR P5 TERM_B .)
    AND             reduce using rule 115 (TERM -> FACTOR P5 TERM_B .)
    OR              reduce using rule 115 (TERM -> FACTOR P5 TERM_B .)
    SEMICOLON       reduce using rule 115 (TERM -> FACTOR P5 TERM_B .)
    RPAR            reduce using rule 115 (TERM -> FACTOR P5 TERM_B .)
    LARROW          reduce using rule 115 (TERM -> FACTOR P5 TERM_B .)
    LTRIAN          reduce using rule 115 (TERM -> FACTOR P5 TERM_B .)
    COMMA           reduce using rule 115 (TERM -> FACTOR P5 TERM_B .)
    RSQUARE         reduce using rule 115 (TERM -> FACTOR P5 TERM_B .)


state 215

    (116) TERM_B -> TERM_B_OPS . TERM
    (115) TERM -> . FACTOR P5 TERM_B
    (125) FACTOR -> . NUMBER
    (126) FACTOR -> . ID
    (127) FACTOR -> . FACTOR_CTE
    (128) FACTOR -> . LPAR P6 EXPRESSION RPAR
    (129) FACTOR -> . IDVARID
    (130) FACTOR -> . FUNCCALL
    (131) FACTOR -> . VARCTE
    (132) FACTOR -> . READ
    (134) FACTOR_CTE -> . PLUS NUMBER
    (135) FACTOR_CTE -> . MINUS NUMBER
    (121) IDVARID -> . ID EXPVARID
    (44) FUNCCALL -> . ID LPAR CALLARGS RPAR
    (136) VARCTE -> . NOTE
    (137) VARCTE -> . BOOL
    (138) VARCTE -> . STRING
    (45) READ -> . INPUT LPAR READAUX RPAR

    NUMBER          shift and go to state 117
    ID              shift and go to state 118
    LPAR            shift and go to state 120
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    NOTE            shift and go to state 127
    BOOL            shift and go to state 128
    STRING          shift and go to state 129
    INPUT           shift and go to state 70

    TERM                           shift and go to state 238
    FACTOR                         shift and go to state 116
    FACTOR_CTE                     shift and go to state 119
    IDVARID                        shift and go to state 121
    FUNCCALL                       shift and go to state 122
    VARCTE                         shift and go to state 123
    READ                           shift and go to state 124

state 216

    (117) TERM_B -> e .

    PLUS            reduce using rule 117 (TERM_B -> e .)
    MINUS           reduce using rule 117 (TERM_B -> e .)
    GT              reduce using rule 117 (TERM_B -> e .)
    LT              reduce using rule 117 (TERM_B -> e .)
    EQ              reduce using rule 117 (TERM_B -> e .)
    DIFF            reduce using rule 117 (TERM_B -> e .)
    AND             reduce using rule 117 (TERM_B -> e .)
    OR              reduce using rule 117 (TERM_B -> e .)
    SEMICOLON       reduce using rule 117 (TERM_B -> e .)
    RPAR            reduce using rule 117 (TERM_B -> e .)
    LARROW          reduce using rule 117 (TERM_B -> e .)
    LTRIAN          reduce using rule 117 (TERM_B -> e .)
    COMMA           reduce using rule 117 (TERM_B -> e .)
    RSQUARE         reduce using rule 117 (TERM_B -> e .)


state 217

    (118) TERM_B_OPS -> TIMES .

    NUMBER          reduce using rule 118 (TERM_B_OPS -> TIMES .)
    ID              reduce using rule 118 (TERM_B_OPS -> TIMES .)
    LPAR            reduce using rule 118 (TERM_B_OPS -> TIMES .)
    PLUS            reduce using rule 118 (TERM_B_OPS -> TIMES .)
    MINUS           reduce using rule 118 (TERM_B_OPS -> TIMES .)
    NOTE            reduce using rule 118 (TERM_B_OPS -> TIMES .)
    BOOL            reduce using rule 118 (TERM_B_OPS -> TIMES .)
    STRING          reduce using rule 118 (TERM_B_OPS -> TIMES .)
    INPUT           reduce using rule 118 (TERM_B_OPS -> TIMES .)


state 218

    (119) TERM_B_OPS -> DIVIDE .

    NUMBER          reduce using rule 119 (TERM_B_OPS -> DIVIDE .)
    ID              reduce using rule 119 (TERM_B_OPS -> DIVIDE .)
    LPAR            reduce using rule 119 (TERM_B_OPS -> DIVIDE .)
    PLUS            reduce using rule 119 (TERM_B_OPS -> DIVIDE .)
    MINUS           reduce using rule 119 (TERM_B_OPS -> DIVIDE .)
    NOTE            reduce using rule 119 (TERM_B_OPS -> DIVIDE .)
    BOOL            reduce using rule 119 (TERM_B_OPS -> DIVIDE .)
    STRING          reduce using rule 119 (TERM_B_OPS -> DIVIDE .)
    INPUT           reduce using rule 119 (TERM_B_OPS -> DIVIDE .)


state 219

    (8) EXPVARID -> LSQUARE C1 . EXP C2 RSQUARE EXPVARIDB
    (103) EXP -> . EXPR P7 EXPB
    (109) EXPR -> . TERM P4 EXPR_B
    (115) TERM -> . FACTOR P5 TERM_B
    (125) FACTOR -> . NUMBER
    (126) FACTOR -> . ID
    (127) FACTOR -> . FACTOR_CTE
    (128) FACTOR -> . LPAR P6 EXPRESSION RPAR
    (129) FACTOR -> . IDVARID
    (130) FACTOR -> . FUNCCALL
    (131) FACTOR -> . VARCTE
    (132) FACTOR -> . READ
    (134) FACTOR_CTE -> . PLUS NUMBER
    (135) FACTOR_CTE -> . MINUS NUMBER
    (121) IDVARID -> . ID EXPVARID
    (44) FUNCCALL -> . ID LPAR CALLARGS RPAR
    (136) VARCTE -> . NOTE
    (137) VARCTE -> . BOOL
    (138) VARCTE -> . STRING
    (45) READ -> . INPUT LPAR READAUX RPAR

    NUMBER          shift and go to state 117
    ID              shift and go to state 118
    LPAR            shift and go to state 120
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    NOTE            shift and go to state 127
    BOOL            shift and go to state 128
    STRING          shift and go to state 129
    INPUT           shift and go to state 70

    EXP                            shift and go to state 239
    EXPR                           shift and go to state 114
    TERM                           shift and go to state 115
    FACTOR                         shift and go to state 116
    FACTOR_CTE                     shift and go to state 119
    IDVARID                        shift and go to state 121
    FUNCCALL                       shift and go to state 122
    VARCTE                         shift and go to state 123
    READ                           shift and go to state 124

state 220

    (128) FACTOR -> LPAR P6 EXPRESSION . RPAR

    RPAR            shift and go to state 240


state 221

    (122) ARRAY -> LSQUARE C1 . EXP C2 ARRAYB RSQUARE
    (103) EXP -> . EXPR P7 EXPB
    (109) EXPR -> . TERM P4 EXPR_B
    (115) TERM -> . FACTOR P5 TERM_B
    (125) FACTOR -> . NUMBER
    (126) FACTOR -> . ID
    (127) FACTOR -> . FACTOR_CTE
    (128) FACTOR -> . LPAR P6 EXPRESSION RPAR
    (129) FACTOR -> . IDVARID
    (130) FACTOR -> . FUNCCALL
    (131) FACTOR -> . VARCTE
    (132) FACTOR -> . READ
    (134) FACTOR_CTE -> . PLUS NUMBER
    (135) FACTOR_CTE -> . MINUS NUMBER
    (121) IDVARID -> . ID EXPVARID
    (44) FUNCCALL -> . ID LPAR CALLARGS RPAR
    (136) VARCTE -> . NOTE
    (137) VARCTE -> . BOOL
    (138) VARCTE -> . STRING
    (45) READ -> . INPUT LPAR READAUX RPAR

    NUMBER          shift and go to state 117
    ID              shift and go to state 118
    LPAR            shift and go to state 120
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    NOTE            shift and go to state 127
    BOOL            shift and go to state 128
    STRING          shift and go to state 129
    INPUT           shift and go to state 70

    EXP                            shift and go to state 241
    EXPR                           shift and go to state 114
    TERM                           shift and go to state 115
    FACTOR                         shift and go to state 116
    FACTOR_CTE                     shift and go to state 119
    IDVARID                        shift and go to state 121
    FUNCCALL                       shift and go to state 122
    VARCTE                         shift and go to state 123
    READ                           shift and go to state 124

state 222

    (38) CALLARGS -> C1 EXPRESSION C2 . H_CALLARGS
    (42) H_CALLARGS -> . COMMA CALLARGS
    (43) H_CALLARGS -> . e
    (139) e -> .

    COMMA           shift and go to state 243
    RPAR            reduce using rule 139 (e -> .)

    H_CALLARGS                     shift and go to state 242
    e                              shift and go to state 244

state 223

    (41) C2 -> e .

    COMMA           reduce using rule 41 (C2 -> e .)
    RPAR            reduce using rule 41 (C2 -> e .)
    RSQUARE         reduce using rule 41 (C2 -> e .)


state 224

    (9) EXPVARIDB -> LSQUARE C1 EXP C2 . RSQUARE EXPVARIDB

    RSQUARE         shift and go to state 245


state 225

    (80) WHILE_BLOCK -> WHILE W1 DDOT EXPRESSION A1 . BLOCK W2
    (62) BLOCK -> . LTRIAN STATEMENTS RTRIAN

    LTRIAN          shift and go to state 230

    BLOCK                          shift and go to state 246

state 226

    (84) RITARG -> LPAR EXPRESSION RPAR LARROW .

    ID              reduce using rule 84 (RITARG -> LPAR EXPRESSION RPAR LARROW .)
    WHILE           reduce using rule 84 (RITARG -> LPAR EXPRESSION RPAR LARROW .)
    LRITT           reduce using rule 84 (RITARG -> LPAR EXPRESSION RPAR LARROW .)
    IF              reduce using rule 84 (RITARG -> LPAR EXPRESSION RPAR LARROW .)
    DISP            reduce using rule 84 (RITARG -> LPAR EXPRESSION RPAR LARROW .)
    PLAYT           reduce using rule 84 (RITARG -> LPAR EXPRESSION RPAR LARROW .)
    STREAMT         reduce using rule 84 (RITARG -> LPAR EXPRESSION RPAR LARROW .)
    MST             reduce using rule 84 (RITARG -> LPAR EXPRESSION RPAR LARROW .)
    INPUT           reduce using rule 84 (RITARG -> LPAR EXPRESSION RPAR LARROW .)
    RRITT           reduce using rule 84 (RITARG -> LPAR EXPRESSION RPAR LARROW .)


state 227

    (66) IF_BLOCK -> IF DDOT EXPRESSION A1 IF_B .

    ID              reduce using rule 66 (IF_BLOCK -> IF DDOT EXPRESSION A1 IF_B .)
    WHILE           reduce using rule 66 (IF_BLOCK -> IF DDOT EXPRESSION A1 IF_B .)
    LRITT           reduce using rule 66 (IF_BLOCK -> IF DDOT EXPRESSION A1 IF_B .)
    IF              reduce using rule 66 (IF_BLOCK -> IF DDOT EXPRESSION A1 IF_B .)
    DISP            reduce using rule 66 (IF_BLOCK -> IF DDOT EXPRESSION A1 IF_B .)
    PLAYT           reduce using rule 66 (IF_BLOCK -> IF DDOT EXPRESSION A1 IF_B .)
    STREAMT         reduce using rule 66 (IF_BLOCK -> IF DDOT EXPRESSION A1 IF_B .)
    MST             reduce using rule 66 (IF_BLOCK -> IF DDOT EXPRESSION A1 IF_B .)
    INPUT           reduce using rule 66 (IF_BLOCK -> IF DDOT EXPRESSION A1 IF_B .)
    RETURN          reduce using rule 66 (IF_BLOCK -> IF DDOT EXPRESSION A1 IF_B .)
    RTRIAN          reduce using rule 66 (IF_BLOCK -> IF DDOT EXPRESSION A1 IF_B .)
    RRITT           reduce using rule 66 (IF_BLOCK -> IF DDOT EXPRESSION A1 IF_B .)


state 228

    (71) IF_B -> BLOCK . F_ELSE A2
    (76) F_ELSE -> . ELSE A3 A2 A3B ELSE_BLOCK
    (77) F_ELSE -> . e
    (139) e -> .

    ELSE            shift and go to state 248
    ID              reduce using rule 139 (e -> .)
    WHILE           reduce using rule 139 (e -> .)
    LRITT           reduce using rule 139 (e -> .)
    IF              reduce using rule 139 (e -> .)
    DISP            reduce using rule 139 (e -> .)
    PLAYT           reduce using rule 139 (e -> .)
    STREAMT         reduce using rule 139 (e -> .)
    MST             reduce using rule 139 (e -> .)
    INPUT           reduce using rule 139 (e -> .)
    RETURN          reduce using rule 139 (e -> .)
    RTRIAN          reduce using rule 139 (e -> .)
    RRITT           reduce using rule 139 (e -> .)

    F_ELSE                         shift and go to state 247
    e                              shift and go to state 249

state 229

    (72) IF_B -> LARROW . IF_ARROW SEMICOLON A2
    (73) IF_ARROW -> . FUNCCALL
    (74) IF_ARROW -> . ASSIGN
    (75) IF_ARROW -> . PRINT
    (44) FUNCCALL -> . ID LPAR CALLARGS RPAR
    (65) ASSIGN -> . ID EXPVARIDB ASSIGNATION ASSIGNH
    (49) PRINT -> . DISP LPAR CALLARGS RPAR

    ID              shift and go to state 254
    DISP            shift and go to state 66

    IF_ARROW                       shift and go to state 250
    FUNCCALL                       shift and go to state 251
    ASSIGN                         shift and go to state 252
    PRINT                          shift and go to state 253

state 230

    (62) BLOCK -> LTRIAN . STATEMENTS RTRIAN
    (22) STATEMENTS -> . STATEMENT N0 STATEMENTS
    (23) STATEMENTS -> . e
    (26) STATEMENT -> . ASSIGN SEMICOLON
    (27) STATEMENT -> . FUNCCALL SEMICOLON
    (28) STATEMENT -> . WHILE_BLOCK
    (29) STATEMENT -> . RITORNELLO
    (30) STATEMENT -> . IF_BLOCK
    (31) STATEMENT -> . PRINT SEMICOLON
    (32) STATEMENT -> . PLAYFUNCS SEMICOLON
    (33) STATEMENT -> . MUSICFUNCS SEMICOLON
    (34) STATEMENT -> . READ SEMICOLON
    (139) e -> .
    (65) ASSIGN -> . ID EXPVARIDB ASSIGNATION ASSIGNH
    (44) FUNCCALL -> . ID LPAR CALLARGS RPAR
    (80) WHILE_BLOCK -> . WHILE W1 DDOT EXPRESSION A1 BLOCK W2
    (83) RITORNELLO -> . LRITT RITARG STATEMENTS RRITT
    (66) IF_BLOCK -> . IF DDOT EXPRESSION A1 IF_B
    (49) PRINT -> . DISP LPAR CALLARGS RPAR
    (52) PLAYFUNCS -> . PLAYT LPAR EXP COMMA EXP RPAR
    (53) PLAYFUNCS -> . PLAYT LPAR SILENCE COMMA EXP COMMA EXP RPAR
    (50) MUSICFUNCS -> . STREAMT LPAR EXP RPAR
    (51) MUSICFUNCS -> . MST LPAR RPAR
    (45) READ -> . INPUT LPAR READAUX RPAR

    RTRIAN          reduce using rule 139 (e -> .)
    ID              shift and go to state 62
    WHILE           shift and go to state 63
    LRITT           shift and go to state 64
    IF              shift and go to state 65
    DISP            shift and go to state 66
    PLAYT           shift and go to state 67
    STREAMT         shift and go to state 68
    MST             shift and go to state 69
    INPUT           shift and go to state 70

    STATEMENTS                     shift and go to state 255
    STATEMENT                      shift and go to state 51
    e                              shift and go to state 52
    ASSIGN                         shift and go to state 53
    FUNCCALL                       shift and go to state 54
    WHILE_BLOCK                    shift and go to state 55
    RITORNELLO                     shift and go to state 56
    IF_BLOCK                       shift and go to state 57
    PRINT                          shift and go to state 58
    PLAYFUNCS                      shift and go to state 59
    MUSICFUNCS                     shift and go to state 60
    READ                           shift and go to state 61

state 231

    (52) PLAYFUNCS -> PLAYT LPAR EXP COMMA EXP . RPAR

    RPAR            shift and go to state 256


state 232

    (53) PLAYFUNCS -> PLAYT LPAR SILENCE COMMA EXP . COMMA EXP RPAR

    COMMA           shift and go to state 257


state 233

    (88) EXPORB -> EXPOR_OPS EXPOR .

    SEMICOLON       reduce using rule 88 (EXPORB -> EXPOR_OPS EXPOR .)
    RPAR            reduce using rule 88 (EXPORB -> EXPOR_OPS EXPOR .)
    LARROW          reduce using rule 88 (EXPORB -> EXPOR_OPS EXPOR .)
    LTRIAN          reduce using rule 88 (EXPORB -> EXPOR_OPS EXPOR .)
    COMMA           reduce using rule 88 (EXPORB -> EXPOR_OPS EXPOR .)


state 234

    (93) EXPANDB -> EXPAND_OPS EXPAND .

    OR              reduce using rule 93 (EXPANDB -> EXPAND_OPS EXPAND .)
    SEMICOLON       reduce using rule 93 (EXPANDB -> EXPAND_OPS EXPAND .)
    RPAR            reduce using rule 93 (EXPANDB -> EXPAND_OPS EXPAND .)
    LARROW          reduce using rule 93 (EXPANDB -> EXPAND_OPS EXPAND .)
    LTRIAN          reduce using rule 93 (EXPANDB -> EXPAND_OPS EXPAND .)
    COMMA           reduce using rule 93 (EXPANDB -> EXPAND_OPS EXPAND .)


state 235

    (98) EXPEQB -> EXPEQ_OPS EXPEQ .

    AND             reduce using rule 98 (EXPEQB -> EXPEQ_OPS EXPEQ .)
    OR              reduce using rule 98 (EXPEQB -> EXPEQ_OPS EXPEQ .)
    SEMICOLON       reduce using rule 98 (EXPEQB -> EXPEQ_OPS EXPEQ .)
    RPAR            reduce using rule 98 (EXPEQB -> EXPEQ_OPS EXPEQ .)
    LARROW          reduce using rule 98 (EXPEQB -> EXPEQ_OPS EXPEQ .)
    LTRIAN          reduce using rule 98 (EXPEQB -> EXPEQ_OPS EXPEQ .)
    COMMA           reduce using rule 98 (EXPEQB -> EXPEQ_OPS EXPEQ .)


state 236

    (105) EXPB -> EXP2_ops EXP .

    EQ              reduce using rule 105 (EXPB -> EXP2_ops EXP .)
    DIFF            reduce using rule 105 (EXPB -> EXP2_ops EXP .)
    AND             reduce using rule 105 (EXPB -> EXP2_ops EXP .)
    OR              reduce using rule 105 (EXPB -> EXP2_ops EXP .)
    SEMICOLON       reduce using rule 105 (EXPB -> EXP2_ops EXP .)
    RPAR            reduce using rule 105 (EXPB -> EXP2_ops EXP .)
    LARROW          reduce using rule 105 (EXPB -> EXP2_ops EXP .)
    LTRIAN          reduce using rule 105 (EXPB -> EXP2_ops EXP .)
    COMMA           reduce using rule 105 (EXPB -> EXP2_ops EXP .)
    RSQUARE         reduce using rule 105 (EXPB -> EXP2_ops EXP .)


state 237

    (110) EXPR_B -> EXPR_B_OPS EXPR .

    GT              reduce using rule 110 (EXPR_B -> EXPR_B_OPS EXPR .)
    LT              reduce using rule 110 (EXPR_B -> EXPR_B_OPS EXPR .)
    EQ              reduce using rule 110 (EXPR_B -> EXPR_B_OPS EXPR .)
    DIFF            reduce using rule 110 (EXPR_B -> EXPR_B_OPS EXPR .)
    AND             reduce using rule 110 (EXPR_B -> EXPR_B_OPS EXPR .)
    OR              reduce using rule 110 (EXPR_B -> EXPR_B_OPS EXPR .)
    SEMICOLON       reduce using rule 110 (EXPR_B -> EXPR_B_OPS EXPR .)
    RPAR            reduce using rule 110 (EXPR_B -> EXPR_B_OPS EXPR .)
    LARROW          reduce using rule 110 (EXPR_B -> EXPR_B_OPS EXPR .)
    LTRIAN          reduce using rule 110 (EXPR_B -> EXPR_B_OPS EXPR .)
    COMMA           reduce using rule 110 (EXPR_B -> EXPR_B_OPS EXPR .)
    RSQUARE         reduce using rule 110 (EXPR_B -> EXPR_B_OPS EXPR .)


state 238

    (116) TERM_B -> TERM_B_OPS TERM .

    PLUS            reduce using rule 116 (TERM_B -> TERM_B_OPS TERM .)
    MINUS           reduce using rule 116 (TERM_B -> TERM_B_OPS TERM .)
    GT              reduce using rule 116 (TERM_B -> TERM_B_OPS TERM .)
    LT              reduce using rule 116 (TERM_B -> TERM_B_OPS TERM .)
    EQ              reduce using rule 116 (TERM_B -> TERM_B_OPS TERM .)
    DIFF            reduce using rule 116 (TERM_B -> TERM_B_OPS TERM .)
    AND             reduce using rule 116 (TERM_B -> TERM_B_OPS TERM .)
    OR              reduce using rule 116 (TERM_B -> TERM_B_OPS TERM .)
    SEMICOLON       reduce using rule 116 (TERM_B -> TERM_B_OPS TERM .)
    RPAR            reduce using rule 116 (TERM_B -> TERM_B_OPS TERM .)
    LARROW          reduce using rule 116 (TERM_B -> TERM_B_OPS TERM .)
    LTRIAN          reduce using rule 116 (TERM_B -> TERM_B_OPS TERM .)
    COMMA           reduce using rule 116 (TERM_B -> TERM_B_OPS TERM .)
    RSQUARE         reduce using rule 116 (TERM_B -> TERM_B_OPS TERM .)


state 239

    (8) EXPVARID -> LSQUARE C1 EXP . C2 RSQUARE EXPVARIDB
    (41) C2 -> . e
    (139) e -> .

    RSQUARE         reduce using rule 139 (e -> .)

    C2                             shift and go to state 258
    e                              shift and go to state 223

state 240

    (128) FACTOR -> LPAR P6 EXPRESSION RPAR .

    TIMES           reduce using rule 128 (FACTOR -> LPAR P6 EXPRESSION RPAR .)
    DIVIDE          reduce using rule 128 (FACTOR -> LPAR P6 EXPRESSION RPAR .)
    PLUS            reduce using rule 128 (FACTOR -> LPAR P6 EXPRESSION RPAR .)
    MINUS           reduce using rule 128 (FACTOR -> LPAR P6 EXPRESSION RPAR .)
    GT              reduce using rule 128 (FACTOR -> LPAR P6 EXPRESSION RPAR .)
    LT              reduce using rule 128 (FACTOR -> LPAR P6 EXPRESSION RPAR .)
    EQ              reduce using rule 128 (FACTOR -> LPAR P6 EXPRESSION RPAR .)
    DIFF            reduce using rule 128 (FACTOR -> LPAR P6 EXPRESSION RPAR .)
    AND             reduce using rule 128 (FACTOR -> LPAR P6 EXPRESSION RPAR .)
    OR              reduce using rule 128 (FACTOR -> LPAR P6 EXPRESSION RPAR .)
    SEMICOLON       reduce using rule 128 (FACTOR -> LPAR P6 EXPRESSION RPAR .)
    RPAR            reduce using rule 128 (FACTOR -> LPAR P6 EXPRESSION RPAR .)
    LARROW          reduce using rule 128 (FACTOR -> LPAR P6 EXPRESSION RPAR .)
    LTRIAN          reduce using rule 128 (FACTOR -> LPAR P6 EXPRESSION RPAR .)
    COMMA           reduce using rule 128 (FACTOR -> LPAR P6 EXPRESSION RPAR .)
    RSQUARE         reduce using rule 128 (FACTOR -> LPAR P6 EXPRESSION RPAR .)


state 241

    (122) ARRAY -> LSQUARE C1 EXP . C2 ARRAYB RSQUARE
    (41) C2 -> . e
    (139) e -> .

    COMMA           reduce using rule 139 (e -> .)
    RSQUARE         reduce using rule 139 (e -> .)

    C2                             shift and go to state 259
    e                              shift and go to state 223

state 242

    (38) CALLARGS -> C1 EXPRESSION C2 H_CALLARGS .

    RPAR            reduce using rule 38 (CALLARGS -> C1 EXPRESSION C2 H_CALLARGS .)


state 243

    (42) H_CALLARGS -> COMMA . CALLARGS
    (38) CALLARGS -> . C1 EXPRESSION C2 H_CALLARGS
    (39) CALLARGS -> . e
    (40) C1 -> . e
    (139) e -> .

    RPAR            reduce using rule 139 (e -> .)
    NUMBER          reduce using rule 139 (e -> .)
    ID              reduce using rule 139 (e -> .)
    LPAR            reduce using rule 139 (e -> .)
    PLUS            reduce using rule 139 (e -> .)
    MINUS           reduce using rule 139 (e -> .)
    NOTE            reduce using rule 139 (e -> .)
    BOOL            reduce using rule 139 (e -> .)
    STRING          reduce using rule 139 (e -> .)
    INPUT           reduce using rule 139 (e -> .)

    CALLARGS                       shift and go to state 260
    C1                             shift and go to state 133
    e                              shift and go to state 134

state 244

    (43) H_CALLARGS -> e .

    RPAR            reduce using rule 43 (H_CALLARGS -> e .)


state 245

    (9) EXPVARIDB -> LSQUARE C1 EXP C2 RSQUARE . EXPVARIDB
    (9) EXPVARIDB -> . LSQUARE C1 EXP C2 RSQUARE EXPVARIDB
    (10) EXPVARIDB -> . e
    (139) e -> .

    LSQUARE         shift and go to state 88
    ASSIGNATION     reduce using rule 139 (e -> .)
    TIMES           reduce using rule 139 (e -> .)
    DIVIDE          reduce using rule 139 (e -> .)
    PLUS            reduce using rule 139 (e -> .)
    MINUS           reduce using rule 139 (e -> .)
    GT              reduce using rule 139 (e -> .)
    LT              reduce using rule 139 (e -> .)
    EQ              reduce using rule 139 (e -> .)
    DIFF            reduce using rule 139 (e -> .)
    AND             reduce using rule 139 (e -> .)
    OR              reduce using rule 139 (e -> .)
    SEMICOLON       reduce using rule 139 (e -> .)
    RPAR            reduce using rule 139 (e -> .)
    LARROW          reduce using rule 139 (e -> .)
    LTRIAN          reduce using rule 139 (e -> .)
    COMMA           reduce using rule 139 (e -> .)
    RSQUARE         reduce using rule 139 (e -> .)

    EXPVARIDB                      shift and go to state 261
    e                              shift and go to state 89

state 246

    (80) WHILE_BLOCK -> WHILE W1 DDOT EXPRESSION A1 BLOCK . W2
    (82) W2 -> . e
    (139) e -> .

    ID              reduce using rule 139 (e -> .)
    WHILE           reduce using rule 139 (e -> .)
    LRITT           reduce using rule 139 (e -> .)
    IF              reduce using rule 139 (e -> .)
    DISP            reduce using rule 139 (e -> .)
    PLAYT           reduce using rule 139 (e -> .)
    STREAMT         reduce using rule 139 (e -> .)
    MST             reduce using rule 139 (e -> .)
    INPUT           reduce using rule 139 (e -> .)
    RETURN          reduce using rule 139 (e -> .)
    RTRIAN          reduce using rule 139 (e -> .)
    RRITT           reduce using rule 139 (e -> .)

    W2                             shift and go to state 262
    e                              shift and go to state 263

state 247

    (71) IF_B -> BLOCK F_ELSE . A2
    (68) A2 -> . e
    (139) e -> .

    ID              reduce using rule 139 (e -> .)
    WHILE           reduce using rule 139 (e -> .)
    LRITT           reduce using rule 139 (e -> .)
    IF              reduce using rule 139 (e -> .)
    DISP            reduce using rule 139 (e -> .)
    PLAYT           reduce using rule 139 (e -> .)
    STREAMT         reduce using rule 139 (e -> .)
    MST             reduce using rule 139 (e -> .)
    INPUT           reduce using rule 139 (e -> .)
    RETURN          reduce using rule 139 (e -> .)
    RTRIAN          reduce using rule 139 (e -> .)
    RRITT           reduce using rule 139 (e -> .)

    A2                             shift and go to state 264
    e                              shift and go to state 265

state 248

    (76) F_ELSE -> ELSE . A3 A2 A3B ELSE_BLOCK
    (69) A3 -> . e
    (139) e -> .

    LTRIAN          reduce using rule 139 (e -> .)
    IF              reduce using rule 139 (e -> .)

    A3                             shift and go to state 266
    e                              shift and go to state 267

state 249

    (77) F_ELSE -> e .

    ID              reduce using rule 77 (F_ELSE -> e .)
    WHILE           reduce using rule 77 (F_ELSE -> e .)
    LRITT           reduce using rule 77 (F_ELSE -> e .)
    IF              reduce using rule 77 (F_ELSE -> e .)
    DISP            reduce using rule 77 (F_ELSE -> e .)
    PLAYT           reduce using rule 77 (F_ELSE -> e .)
    STREAMT         reduce using rule 77 (F_ELSE -> e .)
    MST             reduce using rule 77 (F_ELSE -> e .)
    INPUT           reduce using rule 77 (F_ELSE -> e .)
    RETURN          reduce using rule 77 (F_ELSE -> e .)
    RTRIAN          reduce using rule 77 (F_ELSE -> e .)
    RRITT           reduce using rule 77 (F_ELSE -> e .)


state 250

    (72) IF_B -> LARROW IF_ARROW . SEMICOLON A2

    SEMICOLON       shift and go to state 268


state 251

    (73) IF_ARROW -> FUNCCALL .

    SEMICOLON       reduce using rule 73 (IF_ARROW -> FUNCCALL .)


state 252

    (74) IF_ARROW -> ASSIGN .

    SEMICOLON       reduce using rule 74 (IF_ARROW -> ASSIGN .)


state 253

    (75) IF_ARROW -> PRINT .

    SEMICOLON       reduce using rule 75 (IF_ARROW -> PRINT .)


state 254

    (44) FUNCCALL -> ID . LPAR CALLARGS RPAR
    (65) ASSIGN -> ID . EXPVARIDB ASSIGNATION ASSIGNH
    (9) EXPVARIDB -> . LSQUARE C1 EXP C2 RSQUARE EXPVARIDB
    (10) EXPVARIDB -> . e
    (139) e -> .

    LPAR            shift and go to state 87
    LSQUARE         shift and go to state 88
    ASSIGNATION     reduce using rule 139 (e -> .)

    EXPVARIDB                      shift and go to state 86
    e                              shift and go to state 89

state 255

    (62) BLOCK -> LTRIAN STATEMENTS . RTRIAN

    RTRIAN          shift and go to state 269


state 256

    (52) PLAYFUNCS -> PLAYT LPAR EXP COMMA EXP RPAR .

    SEMICOLON       reduce using rule 52 (PLAYFUNCS -> PLAYT LPAR EXP COMMA EXP RPAR .)


state 257

    (53) PLAYFUNCS -> PLAYT LPAR SILENCE COMMA EXP COMMA . EXP RPAR
    (103) EXP -> . EXPR P7 EXPB
    (109) EXPR -> . TERM P4 EXPR_B
    (115) TERM -> . FACTOR P5 TERM_B
    (125) FACTOR -> . NUMBER
    (126) FACTOR -> . ID
    (127) FACTOR -> . FACTOR_CTE
    (128) FACTOR -> . LPAR P6 EXPRESSION RPAR
    (129) FACTOR -> . IDVARID
    (130) FACTOR -> . FUNCCALL
    (131) FACTOR -> . VARCTE
    (132) FACTOR -> . READ
    (134) FACTOR_CTE -> . PLUS NUMBER
    (135) FACTOR_CTE -> . MINUS NUMBER
    (121) IDVARID -> . ID EXPVARID
    (44) FUNCCALL -> . ID LPAR CALLARGS RPAR
    (136) VARCTE -> . NOTE
    (137) VARCTE -> . BOOL
    (138) VARCTE -> . STRING
    (45) READ -> . INPUT LPAR READAUX RPAR

    NUMBER          shift and go to state 117
    ID              shift and go to state 118
    LPAR            shift and go to state 120
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    NOTE            shift and go to state 127
    BOOL            shift and go to state 128
    STRING          shift and go to state 129
    INPUT           shift and go to state 70

    EXP                            shift and go to state 270
    EXPR                           shift and go to state 114
    TERM                           shift and go to state 115
    FACTOR                         shift and go to state 116
    FACTOR_CTE                     shift and go to state 119
    IDVARID                        shift and go to state 121
    FUNCCALL                       shift and go to state 122
    VARCTE                         shift and go to state 123
    READ                           shift and go to state 124

state 258

    (8) EXPVARID -> LSQUARE C1 EXP C2 . RSQUARE EXPVARIDB

    RSQUARE         shift and go to state 271


state 259

    (122) ARRAY -> LSQUARE C1 EXP C2 . ARRAYB RSQUARE
    (123) ARRAYB -> . COMMA C1 EXP C2 ARRAYB
    (124) ARRAYB -> . e
    (139) e -> .

    COMMA           shift and go to state 273
    RSQUARE         reduce using rule 139 (e -> .)

    ARRAYB                         shift and go to state 272
    e                              shift and go to state 274

state 260

    (42) H_CALLARGS -> COMMA CALLARGS .

    RPAR            reduce using rule 42 (H_CALLARGS -> COMMA CALLARGS .)


state 261

    (9) EXPVARIDB -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .

    ASSIGNATION     reduce using rule 9 (EXPVARIDB -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    TIMES           reduce using rule 9 (EXPVARIDB -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    DIVIDE          reduce using rule 9 (EXPVARIDB -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    PLUS            reduce using rule 9 (EXPVARIDB -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    MINUS           reduce using rule 9 (EXPVARIDB -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    GT              reduce using rule 9 (EXPVARIDB -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    LT              reduce using rule 9 (EXPVARIDB -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    EQ              reduce using rule 9 (EXPVARIDB -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    DIFF            reduce using rule 9 (EXPVARIDB -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    AND             reduce using rule 9 (EXPVARIDB -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    OR              reduce using rule 9 (EXPVARIDB -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    SEMICOLON       reduce using rule 9 (EXPVARIDB -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    RPAR            reduce using rule 9 (EXPVARIDB -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    LARROW          reduce using rule 9 (EXPVARIDB -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    LTRIAN          reduce using rule 9 (EXPVARIDB -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    COMMA           reduce using rule 9 (EXPVARIDB -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    RSQUARE         reduce using rule 9 (EXPVARIDB -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)


state 262

    (80) WHILE_BLOCK -> WHILE W1 DDOT EXPRESSION A1 BLOCK W2 .

    ID              reduce using rule 80 (WHILE_BLOCK -> WHILE W1 DDOT EXPRESSION A1 BLOCK W2 .)
    WHILE           reduce using rule 80 (WHILE_BLOCK -> WHILE W1 DDOT EXPRESSION A1 BLOCK W2 .)
    LRITT           reduce using rule 80 (WHILE_BLOCK -> WHILE W1 DDOT EXPRESSION A1 BLOCK W2 .)
    IF              reduce using rule 80 (WHILE_BLOCK -> WHILE W1 DDOT EXPRESSION A1 BLOCK W2 .)
    DISP            reduce using rule 80 (WHILE_BLOCK -> WHILE W1 DDOT EXPRESSION A1 BLOCK W2 .)
    PLAYT           reduce using rule 80 (WHILE_BLOCK -> WHILE W1 DDOT EXPRESSION A1 BLOCK W2 .)
    STREAMT         reduce using rule 80 (WHILE_BLOCK -> WHILE W1 DDOT EXPRESSION A1 BLOCK W2 .)
    MST             reduce using rule 80 (WHILE_BLOCK -> WHILE W1 DDOT EXPRESSION A1 BLOCK W2 .)
    INPUT           reduce using rule 80 (WHILE_BLOCK -> WHILE W1 DDOT EXPRESSION A1 BLOCK W2 .)
    RETURN          reduce using rule 80 (WHILE_BLOCK -> WHILE W1 DDOT EXPRESSION A1 BLOCK W2 .)
    RTRIAN          reduce using rule 80 (WHILE_BLOCK -> WHILE W1 DDOT EXPRESSION A1 BLOCK W2 .)
    RRITT           reduce using rule 80 (WHILE_BLOCK -> WHILE W1 DDOT EXPRESSION A1 BLOCK W2 .)


state 263

    (82) W2 -> e .

    ID              reduce using rule 82 (W2 -> e .)
    WHILE           reduce using rule 82 (W2 -> e .)
    LRITT           reduce using rule 82 (W2 -> e .)
    IF              reduce using rule 82 (W2 -> e .)
    DISP            reduce using rule 82 (W2 -> e .)
    PLAYT           reduce using rule 82 (W2 -> e .)
    STREAMT         reduce using rule 82 (W2 -> e .)
    MST             reduce using rule 82 (W2 -> e .)
    INPUT           reduce using rule 82 (W2 -> e .)
    RETURN          reduce using rule 82 (W2 -> e .)
    RTRIAN          reduce using rule 82 (W2 -> e .)
    RRITT           reduce using rule 82 (W2 -> e .)


state 264

    (71) IF_B -> BLOCK F_ELSE A2 .

    ID              reduce using rule 71 (IF_B -> BLOCK F_ELSE A2 .)
    WHILE           reduce using rule 71 (IF_B -> BLOCK F_ELSE A2 .)
    LRITT           reduce using rule 71 (IF_B -> BLOCK F_ELSE A2 .)
    IF              reduce using rule 71 (IF_B -> BLOCK F_ELSE A2 .)
    DISP            reduce using rule 71 (IF_B -> BLOCK F_ELSE A2 .)
    PLAYT           reduce using rule 71 (IF_B -> BLOCK F_ELSE A2 .)
    STREAMT         reduce using rule 71 (IF_B -> BLOCK F_ELSE A2 .)
    MST             reduce using rule 71 (IF_B -> BLOCK F_ELSE A2 .)
    INPUT           reduce using rule 71 (IF_B -> BLOCK F_ELSE A2 .)
    RETURN          reduce using rule 71 (IF_B -> BLOCK F_ELSE A2 .)
    RTRIAN          reduce using rule 71 (IF_B -> BLOCK F_ELSE A2 .)
    RRITT           reduce using rule 71 (IF_B -> BLOCK F_ELSE A2 .)


state 265

    (68) A2 -> e .

    ID              reduce using rule 68 (A2 -> e .)
    WHILE           reduce using rule 68 (A2 -> e .)
    LRITT           reduce using rule 68 (A2 -> e .)
    IF              reduce using rule 68 (A2 -> e .)
    DISP            reduce using rule 68 (A2 -> e .)
    PLAYT           reduce using rule 68 (A2 -> e .)
    STREAMT         reduce using rule 68 (A2 -> e .)
    MST             reduce using rule 68 (A2 -> e .)
    INPUT           reduce using rule 68 (A2 -> e .)
    RETURN          reduce using rule 68 (A2 -> e .)
    RTRIAN          reduce using rule 68 (A2 -> e .)
    RRITT           reduce using rule 68 (A2 -> e .)
    LTRIAN          reduce using rule 68 (A2 -> e .)


state 266

    (76) F_ELSE -> ELSE A3 . A2 A3B ELSE_BLOCK
    (68) A2 -> . e
    (139) e -> .

    LTRIAN          reduce using rule 139 (e -> .)
    IF              reduce using rule 139 (e -> .)

    A2                             shift and go to state 275
    e                              shift and go to state 265

state 267

    (69) A3 -> e .

    LTRIAN          reduce using rule 69 (A3 -> e .)
    IF              reduce using rule 69 (A3 -> e .)


state 268

    (72) IF_B -> LARROW IF_ARROW SEMICOLON . A2
    (68) A2 -> . e
    (139) e -> .

    ID              reduce using rule 139 (e -> .)
    WHILE           reduce using rule 139 (e -> .)
    LRITT           reduce using rule 139 (e -> .)
    IF              reduce using rule 139 (e -> .)
    DISP            reduce using rule 139 (e -> .)
    PLAYT           reduce using rule 139 (e -> .)
    STREAMT         reduce using rule 139 (e -> .)
    MST             reduce using rule 139 (e -> .)
    INPUT           reduce using rule 139 (e -> .)
    RETURN          reduce using rule 139 (e -> .)
    RTRIAN          reduce using rule 139 (e -> .)
    RRITT           reduce using rule 139 (e -> .)

    A2                             shift and go to state 276
    e                              shift and go to state 265

state 269

    (62) BLOCK -> LTRIAN STATEMENTS RTRIAN .

    ELSE            reduce using rule 62 (BLOCK -> LTRIAN STATEMENTS RTRIAN .)
    ID              reduce using rule 62 (BLOCK -> LTRIAN STATEMENTS RTRIAN .)
    WHILE           reduce using rule 62 (BLOCK -> LTRIAN STATEMENTS RTRIAN .)
    LRITT           reduce using rule 62 (BLOCK -> LTRIAN STATEMENTS RTRIAN .)
    IF              reduce using rule 62 (BLOCK -> LTRIAN STATEMENTS RTRIAN .)
    DISP            reduce using rule 62 (BLOCK -> LTRIAN STATEMENTS RTRIAN .)
    PLAYT           reduce using rule 62 (BLOCK -> LTRIAN STATEMENTS RTRIAN .)
    STREAMT         reduce using rule 62 (BLOCK -> LTRIAN STATEMENTS RTRIAN .)
    MST             reduce using rule 62 (BLOCK -> LTRIAN STATEMENTS RTRIAN .)
    INPUT           reduce using rule 62 (BLOCK -> LTRIAN STATEMENTS RTRIAN .)
    RETURN          reduce using rule 62 (BLOCK -> LTRIAN STATEMENTS RTRIAN .)
    RTRIAN          reduce using rule 62 (BLOCK -> LTRIAN STATEMENTS RTRIAN .)
    RRITT           reduce using rule 62 (BLOCK -> LTRIAN STATEMENTS RTRIAN .)


state 270

    (53) PLAYFUNCS -> PLAYT LPAR SILENCE COMMA EXP COMMA EXP . RPAR

    RPAR            shift and go to state 277


state 271

    (8) EXPVARID -> LSQUARE C1 EXP C2 RSQUARE . EXPVARIDB
    (9) EXPVARIDB -> . LSQUARE C1 EXP C2 RSQUARE EXPVARIDB
    (10) EXPVARIDB -> . e
    (139) e -> .

    LSQUARE         shift and go to state 88
    TIMES           reduce using rule 139 (e -> .)
    DIVIDE          reduce using rule 139 (e -> .)
    PLUS            reduce using rule 139 (e -> .)
    MINUS           reduce using rule 139 (e -> .)
    GT              reduce using rule 139 (e -> .)
    LT              reduce using rule 139 (e -> .)
    EQ              reduce using rule 139 (e -> .)
    DIFF            reduce using rule 139 (e -> .)
    AND             reduce using rule 139 (e -> .)
    OR              reduce using rule 139 (e -> .)
    SEMICOLON       reduce using rule 139 (e -> .)
    RPAR            reduce using rule 139 (e -> .)
    LARROW          reduce using rule 139 (e -> .)
    LTRIAN          reduce using rule 139 (e -> .)
    COMMA           reduce using rule 139 (e -> .)
    RSQUARE         reduce using rule 139 (e -> .)

    EXPVARIDB                      shift and go to state 278
    e                              shift and go to state 89

state 272

    (122) ARRAY -> LSQUARE C1 EXP C2 ARRAYB . RSQUARE

    RSQUARE         shift and go to state 279


state 273

    (123) ARRAYB -> COMMA . C1 EXP C2 ARRAYB
    (40) C1 -> . e
    (139) e -> .

    NUMBER          reduce using rule 139 (e -> .)
    ID              reduce using rule 139 (e -> .)
    LPAR            reduce using rule 139 (e -> .)
    PLUS            reduce using rule 139 (e -> .)
    MINUS           reduce using rule 139 (e -> .)
    NOTE            reduce using rule 139 (e -> .)
    BOOL            reduce using rule 139 (e -> .)
    STRING          reduce using rule 139 (e -> .)
    INPUT           reduce using rule 139 (e -> .)

    C1                             shift and go to state 280
    e                              shift and go to state 136

state 274

    (124) ARRAYB -> e .

    RSQUARE         reduce using rule 124 (ARRAYB -> e .)


state 275

    (76) F_ELSE -> ELSE A3 A2 . A3B ELSE_BLOCK
    (70) A3B -> . e
    (139) e -> .

    LTRIAN          reduce using rule 139 (e -> .)
    IF              reduce using rule 139 (e -> .)

    A3B                            shift and go to state 281
    e                              shift and go to state 282

state 276

    (72) IF_B -> LARROW IF_ARROW SEMICOLON A2 .

    ID              reduce using rule 72 (IF_B -> LARROW IF_ARROW SEMICOLON A2 .)
    WHILE           reduce using rule 72 (IF_B -> LARROW IF_ARROW SEMICOLON A2 .)
    LRITT           reduce using rule 72 (IF_B -> LARROW IF_ARROW SEMICOLON A2 .)
    IF              reduce using rule 72 (IF_B -> LARROW IF_ARROW SEMICOLON A2 .)
    DISP            reduce using rule 72 (IF_B -> LARROW IF_ARROW SEMICOLON A2 .)
    PLAYT           reduce using rule 72 (IF_B -> LARROW IF_ARROW SEMICOLON A2 .)
    STREAMT         reduce using rule 72 (IF_B -> LARROW IF_ARROW SEMICOLON A2 .)
    MST             reduce using rule 72 (IF_B -> LARROW IF_ARROW SEMICOLON A2 .)
    INPUT           reduce using rule 72 (IF_B -> LARROW IF_ARROW SEMICOLON A2 .)
    RETURN          reduce using rule 72 (IF_B -> LARROW IF_ARROW SEMICOLON A2 .)
    RTRIAN          reduce using rule 72 (IF_B -> LARROW IF_ARROW SEMICOLON A2 .)
    RRITT           reduce using rule 72 (IF_B -> LARROW IF_ARROW SEMICOLON A2 .)


state 277

    (53) PLAYFUNCS -> PLAYT LPAR SILENCE COMMA EXP COMMA EXP RPAR .

    SEMICOLON       reduce using rule 53 (PLAYFUNCS -> PLAYT LPAR SILENCE COMMA EXP COMMA EXP RPAR .)


state 278

    (8) EXPVARID -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .

    TIMES           reduce using rule 8 (EXPVARID -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    DIVIDE          reduce using rule 8 (EXPVARID -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    PLUS            reduce using rule 8 (EXPVARID -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    MINUS           reduce using rule 8 (EXPVARID -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    GT              reduce using rule 8 (EXPVARID -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    LT              reduce using rule 8 (EXPVARID -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    EQ              reduce using rule 8 (EXPVARID -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    DIFF            reduce using rule 8 (EXPVARID -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    AND             reduce using rule 8 (EXPVARID -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    OR              reduce using rule 8 (EXPVARID -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    SEMICOLON       reduce using rule 8 (EXPVARID -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    RPAR            reduce using rule 8 (EXPVARID -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    LARROW          reduce using rule 8 (EXPVARID -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    LTRIAN          reduce using rule 8 (EXPVARID -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    COMMA           reduce using rule 8 (EXPVARID -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)
    RSQUARE         reduce using rule 8 (EXPVARID -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB .)


state 279

    (122) ARRAY -> LSQUARE C1 EXP C2 ARRAYB RSQUARE .

    SEMICOLON       reduce using rule 122 (ARRAY -> LSQUARE C1 EXP C2 ARRAYB RSQUARE .)


state 280

    (123) ARRAYB -> COMMA C1 . EXP C2 ARRAYB
    (103) EXP -> . EXPR P7 EXPB
    (109) EXPR -> . TERM P4 EXPR_B
    (115) TERM -> . FACTOR P5 TERM_B
    (125) FACTOR -> . NUMBER
    (126) FACTOR -> . ID
    (127) FACTOR -> . FACTOR_CTE
    (128) FACTOR -> . LPAR P6 EXPRESSION RPAR
    (129) FACTOR -> . IDVARID
    (130) FACTOR -> . FUNCCALL
    (131) FACTOR -> . VARCTE
    (132) FACTOR -> . READ
    (134) FACTOR_CTE -> . PLUS NUMBER
    (135) FACTOR_CTE -> . MINUS NUMBER
    (121) IDVARID -> . ID EXPVARID
    (44) FUNCCALL -> . ID LPAR CALLARGS RPAR
    (136) VARCTE -> . NOTE
    (137) VARCTE -> . BOOL
    (138) VARCTE -> . STRING
    (45) READ -> . INPUT LPAR READAUX RPAR

    NUMBER          shift and go to state 117
    ID              shift and go to state 118
    LPAR            shift and go to state 120
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    NOTE            shift and go to state 127
    BOOL            shift and go to state 128
    STRING          shift and go to state 129
    INPUT           shift and go to state 70

    EXP                            shift and go to state 283
    EXPR                           shift and go to state 114
    TERM                           shift and go to state 115
    FACTOR                         shift and go to state 116
    FACTOR_CTE                     shift and go to state 119
    IDVARID                        shift and go to state 121
    FUNCCALL                       shift and go to state 122
    VARCTE                         shift and go to state 123
    READ                           shift and go to state 124

state 281

    (76) F_ELSE -> ELSE A3 A2 A3B . ELSE_BLOCK
    (78) ELSE_BLOCK -> . BLOCK
    (79) ELSE_BLOCK -> . IF_BLOCK
    (62) BLOCK -> . LTRIAN STATEMENTS RTRIAN
    (66) IF_BLOCK -> . IF DDOT EXPRESSION A1 IF_B

    LTRIAN          shift and go to state 230
    IF              shift and go to state 65

    ELSE_BLOCK                     shift and go to state 284
    BLOCK                          shift and go to state 285
    IF_BLOCK                       shift and go to state 286

state 282

    (70) A3B -> e .

    LTRIAN          reduce using rule 70 (A3B -> e .)
    IF              reduce using rule 70 (A3B -> e .)


state 283

    (123) ARRAYB -> COMMA C1 EXP . C2 ARRAYB
    (41) C2 -> . e
    (139) e -> .

    COMMA           reduce using rule 139 (e -> .)
    RSQUARE         reduce using rule 139 (e -> .)

    C2                             shift and go to state 287
    e                              shift and go to state 223

state 284

    (76) F_ELSE -> ELSE A3 A2 A3B ELSE_BLOCK .

    ID              reduce using rule 76 (F_ELSE -> ELSE A3 A2 A3B ELSE_BLOCK .)
    WHILE           reduce using rule 76 (F_ELSE -> ELSE A3 A2 A3B ELSE_BLOCK .)
    LRITT           reduce using rule 76 (F_ELSE -> ELSE A3 A2 A3B ELSE_BLOCK .)
    IF              reduce using rule 76 (F_ELSE -> ELSE A3 A2 A3B ELSE_BLOCK .)
    DISP            reduce using rule 76 (F_ELSE -> ELSE A3 A2 A3B ELSE_BLOCK .)
    PLAYT           reduce using rule 76 (F_ELSE -> ELSE A3 A2 A3B ELSE_BLOCK .)
    STREAMT         reduce using rule 76 (F_ELSE -> ELSE A3 A2 A3B ELSE_BLOCK .)
    MST             reduce using rule 76 (F_ELSE -> ELSE A3 A2 A3B ELSE_BLOCK .)
    INPUT           reduce using rule 76 (F_ELSE -> ELSE A3 A2 A3B ELSE_BLOCK .)
    RETURN          reduce using rule 76 (F_ELSE -> ELSE A3 A2 A3B ELSE_BLOCK .)
    RTRIAN          reduce using rule 76 (F_ELSE -> ELSE A3 A2 A3B ELSE_BLOCK .)
    RRITT           reduce using rule 76 (F_ELSE -> ELSE A3 A2 A3B ELSE_BLOCK .)


state 285

    (78) ELSE_BLOCK -> BLOCK .

    ID              reduce using rule 78 (ELSE_BLOCK -> BLOCK .)
    WHILE           reduce using rule 78 (ELSE_BLOCK -> BLOCK .)
    LRITT           reduce using rule 78 (ELSE_BLOCK -> BLOCK .)
    IF              reduce using rule 78 (ELSE_BLOCK -> BLOCK .)
    DISP            reduce using rule 78 (ELSE_BLOCK -> BLOCK .)
    PLAYT           reduce using rule 78 (ELSE_BLOCK -> BLOCK .)
    STREAMT         reduce using rule 78 (ELSE_BLOCK -> BLOCK .)
    MST             reduce using rule 78 (ELSE_BLOCK -> BLOCK .)
    INPUT           reduce using rule 78 (ELSE_BLOCK -> BLOCK .)
    RETURN          reduce using rule 78 (ELSE_BLOCK -> BLOCK .)
    RTRIAN          reduce using rule 78 (ELSE_BLOCK -> BLOCK .)
    RRITT           reduce using rule 78 (ELSE_BLOCK -> BLOCK .)


state 286

    (79) ELSE_BLOCK -> IF_BLOCK .

    ID              reduce using rule 79 (ELSE_BLOCK -> IF_BLOCK .)
    WHILE           reduce using rule 79 (ELSE_BLOCK -> IF_BLOCK .)
    LRITT           reduce using rule 79 (ELSE_BLOCK -> IF_BLOCK .)
    IF              reduce using rule 79 (ELSE_BLOCK -> IF_BLOCK .)
    DISP            reduce using rule 79 (ELSE_BLOCK -> IF_BLOCK .)
    PLAYT           reduce using rule 79 (ELSE_BLOCK -> IF_BLOCK .)
    STREAMT         reduce using rule 79 (ELSE_BLOCK -> IF_BLOCK .)
    MST             reduce using rule 79 (ELSE_BLOCK -> IF_BLOCK .)
    INPUT           reduce using rule 79 (ELSE_BLOCK -> IF_BLOCK .)
    RETURN          reduce using rule 79 (ELSE_BLOCK -> IF_BLOCK .)
    RTRIAN          reduce using rule 79 (ELSE_BLOCK -> IF_BLOCK .)
    RRITT           reduce using rule 79 (ELSE_BLOCK -> IF_BLOCK .)


state 287

    (123) ARRAYB -> COMMA C1 EXP C2 . ARRAYB
    (123) ARRAYB -> . COMMA C1 EXP C2 ARRAYB
    (124) ARRAYB -> . e
    (139) e -> .

    COMMA           shift and go to state 273
    RSQUARE         reduce using rule 139 (e -> .)

    ARRAYB                         shift and go to state 288
    e                              shift and go to state 274

state 288

    (123) ARRAYB -> COMMA C1 EXP C2 ARRAYB .

    RSQUARE         reduce using rule 123 (ARRAYB -> COMMA C1 EXP C2 ARRAYB .)

