
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'PROGRAMAND OR BOOL COMMA PLUS MINUS TIMES DIVIDE NUMBER STRING ID NOTE LIST LPAR RPAR LARROW RARROW LTRIAN RTRIAN DDOT SEMICOLON LSQUARE RSQUARE EQ ASSIGNATION GT LT DIFF LRITT RRITT COLON IF ELSE PRINTF SILENCE VAR FUNC LISTTYPE NUMBERTYPE NOTETYPE STRINGTYPE COMP RETURN MAIN BOOLTYPE INPUT DISP WHILE PLAYT STREAMT MST MIDITPROGRAM : COMP ID G1 F_VARDEC G2 F_FUNCDEC F1 MAIN_BLOCKF_FUNCDEC : FUNCDEC F_FUNCDEC\n                | e VARDEC : VAR LPAR TYPE ID VARIDB VARDECB RPARVARID : LSQUARE NUMBER RSQUARE VARIDB \n             VARIDB : LSQUARE NUMBER RSQUARE VARIDB \n             | e\n             EXPVARID : LSQUARE C1 EXP C2 RSQUARE EXPVARIDB EXPVARIDB : LSQUARE C1 EXP  C2 RSQUARE EXPVARIDB \n             | e\n             VARDECB : COMMA TYPE ID VARIDB VARDECB \n               | eFUNCDEC : FUNC F1 AUXFUNCDEC  FUNCBLOCKAUXFUNCDEC : ID DDOT F_ARGS LARROW RETTYPEF_ARGS : ARGS \n              | eFUNCBLOCK :  LTRIAN F_VARDEC STATEMENTS F_RETURN RTRIANF_VARDEC : VARDEC \n                | eF_RETURN : RETURN EXP SEMICOLON \n                | eSTATEMENTS :  STATEMENT N0 STATEMENTS \n                  | eN0 : eMAIN_BLOCK : MAIN FUNCBLOCKSTATEMENT : ASSIGN SEMICOLON\n                | FUNCCALL SEMICOLON\n                | WHILE_BLOCK\n                | RITORNELLO\n                | IF_BLOCK\n                | PRINT SEMICOLON\n                | PLAYFUNCS SEMICOLON\n                | MUSICFUNCS SEMICOLON\n                ARGS : TYPE ID H_ARGSH_ARGS : COMMA ARGS \n              | eCALLARGS : C1 EXP C2 H_CALLARGS \n                | eC1 : eC2 : eH_CALLARGS :  COMMA CALLARGS\n                  | eFUNCCALL : ID LPAR CALLARGS RPAR PRINT :  DISP LPAR EXP RPAR MUSICFUNCS : STREAMT LPAR EXP RPAR \n                    | MIDIT LPAR RPAR \n                    | MST LPAR RPAR PLAYFUNCS : PLAYT LPAR EXP COMMA EXP RPAR \n                | PLAYT LPAR SILENCE COMMA EXP COMMA EXP RPAR TYPE :  NUMBERTYPE \n            | LISTTYPE\n            | NOTETYPE \n            | BOOLTYPE\n            | STRINGTYPERETTYPE :  NUMBERTYPE \n                | LISTTYPE\n                | NOTETYPE \n                | BOOLTYPE \n                | SILENCEBLOCK : LTRIAN STATEMENTS RTRIANASSIGN : ID EXPVARIDB ASSIGNATION EXPIF_BLOCK : IF DDOT EXP A1 IF_B A1 : eA2 : eA3 : eA3B : eIF_B : BLOCK F_ELSE A2\n            | LARROW IF_ARROW SEMICOLON A2\n            IF_ARROW : FUNCCALL \n                | ASSIGN \n                F_ELSE : ELSE A3 A2 A3B ELSE_BLOCK \n              | e ELSE_BLOCK : BLOCK \n                  | IF_BLOCKWHILE_BLOCK : WHILE W1 DDOT EXP A1 BLOCK W2W1 : eW2 : eRITORNELLO : LRITT RITARG STATEMENTS RRITT RITARG : LPAR EXP RPAR LARROW \n                | eEXP : EXPR EXP2 P7P7 : eEXP2 : e\n            | EXP2_ops EXPR \n            EXP2_ops : GT \n            | LT \n            | DIFF \n            | EQ\n            | OR \n            | AND \n            EXPR : TERM P4 EXPR_BP4 : eEXPR_B : EXPR_B_OPS EXPR \n              | eEXPR_B_OPS : PLUS \n                  | MINUSTERM : FACTOR P5 TERM_BP5 : eTERM_B : TERM_B_OPS TERM \n              | eTERM_B_OPS : TIMES\n                 | DIVIDEIDVARID : ID EXPVARID ARRAY : LSQUARE C1 EXP C2 ARRAYB RSQUAREARRAYB : COMMA C1 EXP C2 ARRAYB\n             |  e    FACTOR :  NUMBER \n              | ID\n              | FACTOR_CTE \n              | LPAR P6 EXP RPAR \n              | IDVARID \n              | FUNCCALL\n              | VARCTE\n              | ARRAY\n              P6 : eFACTOR_CTE :  PLUS NUMBER  \n                  | MINUS NUMBER VARCTE : NOTE \n              | BOOL\n              | STRINGe :  F1 : e F2 : e G1 : e G2 : e'
    
_lr_action_items = {'COMP':([0,],[2,]),'$end':([1,28,35,110,],[0,-1,-25,-17,]),'ID':([2,7,8,16,17,18,19,20,21,22,24,26,36,43,47,48,49,52,56,57,58,64,76,78,79,80,81,82,83,84,86,87,91,92,93,94,95,96,97,118,128,130,132,133,134,135,136,151,152,153,154,155,156,157,163,164,165,168,174,179,180,186,188,189,191,193,194,195,202,203,204,205,206,215,218,219,221,228,231,235,236,237,238,241,242,246,248,255,256,257,],[3,-18,-19,-121,27,-50,-51,-52,-53,-54,-122,31,-121,62,72,-4,73,-121,-28,-29,-30,-121,116,62,-24,-26,-27,-31,-32,-33,-121,-121,62,116,-80,116,116,116,116,-121,-121,116,116,-39,116,-39,116,116,-85,-86,-87,-88,-89,-90,-121,116,-115,116,-78,116,116,116,-95,-96,116,-101,-102,116,-79,-62,-121,225,62,-121,-121,-121,-72,116,-121,-75,-77,-67,-64,-121,-60,116,-68,-71,-73,-74,]),'VAR':([3,4,5,36,],[-121,9,-124,9,]),'FUNC':([3,4,5,6,7,8,10,11,14,37,48,110,],[-121,-121,-124,-121,-18,-19,16,-125,16,-13,-4,-17,]),'MAIN':([3,4,5,6,7,8,10,11,13,14,15,23,24,25,37,48,110,],[-121,-121,-124,-121,-18,-19,-121,-125,-121,-121,-3,29,-122,-2,-13,-4,-17,]),'WHILE':([7,8,36,43,48,52,56,57,58,64,78,79,80,81,82,83,84,91,93,174,202,203,204,206,218,219,221,235,236,237,238,241,242,248,255,256,257,],[-18,-19,-121,63,-4,-121,-28,-29,-30,-121,63,-24,-26,-27,-31,-32,-33,63,-80,-78,-79,-62,-121,63,-121,-121,-72,-75,-77,-67,-64,-121,-60,-68,-71,-73,-74,]),'LRITT':([7,8,36,43,48,52,56,57,58,64,78,79,80,81,82,83,84,91,93,174,202,203,204,206,218,219,221,235,236,237,238,241,242,248,255,256,257,],[-18,-19,-121,64,-4,-121,-28,-29,-30,-121,64,-24,-26,-27,-31,-32,-33,64,-80,-78,-79,-62,-121,64,-121,-121,-72,-75,-77,-67,-64,-121,-60,-68,-71,-73,-74,]),'IF':([7,8,36,43,48,52,56,57,58,64,78,79,80,81,82,83,84,91,93,174,202,203,204,206,218,219,220,221,235,236,237,238,239,240,241,242,247,248,252,253,255,256,257,],[-18,-19,-121,65,-4,-121,-28,-29,-30,-121,65,-24,-26,-27,-31,-32,-33,65,-80,-78,-79,-62,-121,65,-121,-121,-121,-72,-75,-77,-67,-64,-121,-65,-121,-60,-121,-68,65,-66,-71,-73,-74,]),'DISP':([7,8,36,43,48,52,56,57,58,64,78,79,80,81,82,83,84,91,93,174,202,203,204,206,218,219,221,235,236,237,238,241,242,248,255,256,257,],[-18,-19,-121,66,-4,-121,-28,-29,-30,-121,66,-24,-26,-27,-31,-32,-33,66,-80,-78,-79,-62,-121,66,-121,-121,-72,-75,-77,-67,-64,-121,-60,-68,-71,-73,-74,]),'PLAYT':([7,8,36,43,48,52,56,57,58,64,78,79,80,81,82,83,84,91,93,174,202,203,204,206,218,219,221,235,236,237,238,241,242,248,255,256,257,],[-18,-19,-121,67,-4,-121,-28,-29,-30,-121,67,-24,-26,-27,-31,-32,-33,67,-80,-78,-79,-62,-121,67,-121,-121,-72,-75,-77,-67,-64,-121,-60,-68,-71,-73,-74,]),'STREAMT':([7,8,36,43,48,52,56,57,58,64,78,79,80,81,82,83,84,91,93,174,202,203,204,206,218,219,221,235,236,237,238,241,242,248,255,256,257,],[-18,-19,-121,68,-4,-121,-28,-29,-30,-121,68,-24,-26,-27,-31,-32,-33,68,-80,-78,-79,-62,-121,68,-121,-121,-72,-75,-77,-67,-64,-121,-60,-68,-71,-73,-74,]),'MIDIT':([7,8,36,43,48,52,56,57,58,64,78,79,80,81,82,83,84,91,93,174,202,203,204,206,218,219,221,235,236,237,238,241,242,248,255,256,257,],[-18,-19,-121,69,-4,-121,-28,-29,-30,-121,69,-24,-26,-27,-31,-32,-33,69,-80,-78,-79,-62,-121,69,-121,-121,-72,-75,-77,-67,-64,-121,-60,-68,-71,-73,-74,]),'MST':([7,8,36,43,48,52,56,57,58,64,78,79,80,81,82,83,84,91,93,174,202,203,204,206,218,219,221,235,236,237,238,241,242,248,255,256,257,],[-18,-19,-121,70,-4,-121,-28,-29,-30,-121,70,-24,-26,-27,-31,-32,-33,70,-80,-78,-79,-62,-121,70,-121,-121,-72,-75,-77,-67,-64,-121,-60,-68,-71,-73,-74,]),'RETURN':([7,8,36,43,48,51,52,53,56,57,58,78,79,80,81,82,83,84,129,174,203,204,218,219,221,235,236,237,238,241,242,248,255,256,257,],[-18,-19,-121,-121,-4,76,-121,-23,-28,-29,-30,-121,-24,-26,-27,-31,-32,-33,-22,-78,-62,-121,-121,-121,-72,-75,-77,-67,-64,-121,-60,-68,-71,-73,-74,]),'RTRIAN':([7,8,36,43,48,51,52,53,56,57,58,75,77,78,79,80,81,82,83,84,129,148,174,203,204,206,218,219,221,226,235,236,237,238,241,242,248,255,256,257,],[-18,-19,-121,-121,-4,-121,-121,-23,-28,-29,-30,110,-21,-121,-24,-26,-27,-31,-32,-33,-22,-20,-78,-62,-121,-121,-121,-121,-72,242,-75,-77,-67,-64,-121,-60,-68,-71,-73,-74,]),'LPAR':([9,62,64,66,67,68,69,70,76,86,87,92,94,95,96,97,116,118,128,130,132,133,134,135,136,151,152,153,154,155,156,157,163,164,165,168,179,180,186,188,189,191,193,194,195,215,225,228,231,246,],[12,86,92,95,96,97,98,99,118,-121,-121,118,118,118,118,118,86,-121,-121,118,118,-39,118,-39,118,118,-85,-86,-87,-88,-89,-90,-121,118,-115,118,118,118,118,-95,-96,118,-101,-102,118,-121,86,118,-121,118,]),'NUMBERTYPE':([12,38,40,71,107,],[18,18,18,101,18,]),'LISTTYPE':([12,38,40,71,107,],[19,19,19,102,19,]),'NOTETYPE':([12,38,40,71,107,],[20,20,20,103,20,]),'BOOLTYPE':([12,38,40,71,107,],[21,21,21,104,21,]),'STRINGTYPE':([12,38,40,107,],[22,22,22,22,]),'LSQUARE':([27,50,62,73,76,86,87,92,94,95,96,97,116,118,128,130,132,133,134,135,136,151,152,153,154,155,156,157,163,164,165,168,179,180,186,188,189,191,193,194,195,215,217,225,228,231,244,246,],[33,33,87,33,128,-121,-121,128,128,128,128,128,163,-121,-121,128,128,-39,128,-39,128,128,-85,-86,-87,-88,-89,-90,-121,128,-115,128,128,128,128,-95,-96,128,-101,-102,128,-121,87,87,128,-121,87,128,]),'COMMA':([27,32,34,50,72,73,74,88,109,112,113,114,115,116,117,119,120,121,122,125,126,127,141,142,149,150,158,159,160,161,162,166,167,170,171,182,183,184,185,187,190,192,197,198,199,208,209,210,212,213,217,234,244,245,250,251,254,],[-121,40,-7,-121,107,-121,-6,-10,40,-121,-121,-121,-107,-108,-109,-111,-112,-113,-114,-118,-119,-120,179,180,-121,-83,-121,-92,-121,-98,-103,-116,-117,-43,-121,-81,-82,-84,-91,-94,-97,-100,-121,215,-40,228,-93,-99,-110,231,-121,-9,-121,-104,-8,-121,231,]),'RPAR':([27,32,34,39,41,50,73,74,86,88,98,99,109,112,113,114,115,116,117,119,120,121,122,125,126,127,131,133,138,140,143,147,149,150,158,159,160,161,162,166,167,170,171,182,183,184,185,187,190,192,196,198,199,207,209,210,212,214,215,216,217,233,234,243,244,245,250,],[-121,-121,-7,48,-12,-121,-121,-6,-121,-10,144,145,-121,-121,-121,-121,-107,-108,-109,-111,-112,-113,-114,-118,-119,-120,170,-38,175,178,181,-11,-121,-83,-121,-92,-121,-98,-103,-116,-117,-43,-121,-81,-82,-84,-91,-94,-97,-100,212,-121,-40,227,-93,-99,-110,-37,-121,-42,-121,-41,-9,249,-121,-104,-8,]),'LTRIAN':([29,30,88,100,101,102,103,104,105,112,113,114,115,116,117,119,120,121,122,125,126,127,139,149,150,158,159,160,161,162,166,167,170,173,176,177,182,183,184,185,187,190,192,201,209,210,212,217,220,234,238,239,240,244,245,247,250,252,253,],[36,36,-10,-14,-55,-56,-57,-58,-59,-121,-121,-121,-107,-108,-109,-111,-112,-113,-114,-118,-119,-120,-121,-121,-83,-121,-92,-121,-98,-103,-116,-117,-43,-121,206,-63,-81,-82,-84,-91,-94,-97,-100,206,-93,-99,-110,-121,-121,-9,-64,-121,-65,-121,-104,-121,-8,206,-66,]),'DDOT':([31,63,65,89,90,],[38,-121,94,136,-76,]),'NUMBER':([33,76,86,87,92,94,95,96,97,118,123,124,128,130,132,133,134,135,136,151,152,153,154,155,156,157,163,164,165,168,179,180,186,188,189,191,193,194,195,215,228,231,246,],[42,115,-121,-121,115,115,115,115,115,-121,166,167,-121,115,115,-39,115,-39,115,115,-85,-86,-87,-88,-89,-90,-121,115,-115,115,115,115,115,-95,-96,115,-101,-102,115,-121,115,-121,115,]),'LARROW':([38,44,45,46,72,88,106,108,112,113,114,115,116,117,119,120,121,122,125,126,127,139,146,149,150,158,159,160,161,162,166,167,170,175,176,177,182,183,184,185,187,190,192,209,210,212,217,234,244,245,250,],[-121,71,-15,-16,-121,-10,-34,-36,-121,-121,-121,-107,-108,-109,-111,-112,-113,-114,-118,-119,-120,-121,-35,-121,-83,-121,-92,-121,-98,-103,-116,-117,-43,202,205,-63,-81,-82,-84,-91,-94,-97,-100,-93,-99,-110,-121,-9,-121,-104,-8,]),'RSQUARE':([42,88,112,113,114,115,116,117,119,120,121,122,125,126,127,149,150,158,159,160,161,162,166,167,170,172,182,183,184,185,187,190,192,197,199,200,209,210,211,212,213,217,229,230,232,234,244,245,250,251,254,258,],[50,-10,-121,-121,-121,-107,-108,-109,-111,-112,-113,-114,-118,-119,-120,-121,-83,-121,-92,-121,-98,-103,-116,-117,-43,-121,-81,-82,-84,-91,-94,-97,-100,-121,-40,217,-93,-99,-121,-110,-121,-121,244,245,-106,-9,-121,-104,-8,-121,-121,-105,]),'RRITT':([52,53,56,57,58,64,78,79,80,81,82,83,84,91,93,129,137,174,202,203,204,218,219,221,235,236,237,238,241,242,248,255,256,257,],[-121,-23,-28,-29,-30,-121,-121,-24,-26,-27,-31,-32,-33,-121,-80,-22,174,-78,-79,-62,-121,-121,-121,-72,-75,-77,-67,-64,-121,-60,-68,-71,-73,-74,]),'SEMICOLON':([54,55,59,60,61,88,111,112,113,114,115,116,117,119,120,121,122,125,126,127,144,145,149,150,158,159,160,161,162,166,167,169,170,178,181,182,183,184,185,187,190,192,209,210,212,217,222,223,224,227,234,244,245,249,250,],[80,81,82,83,84,-10,148,-121,-121,-121,-107,-108,-109,-111,-112,-113,-114,-118,-119,-120,-46,-47,-121,-83,-121,-92,-121,-98,-103,-116,-117,-61,-43,-44,-45,-81,-82,-84,-91,-94,-97,-100,-93,-99,-110,-121,241,-69,-70,-48,-9,-121,-104,-49,-8,]),'ASSIGNATION':([62,85,88,217,225,234,],[-121,130,-10,-121,-121,-9,]),'SILENCE':([71,96,],[105,142,]),'PLUS':([76,86,87,88,92,94,95,96,97,113,114,115,116,117,118,119,120,121,122,125,126,127,128,130,132,133,134,135,136,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,179,180,186,188,189,190,191,192,193,194,195,210,212,215,217,228,231,234,244,245,246,250,],[123,-121,-121,-10,123,123,123,123,123,-121,-121,-107,-108,-109,-121,-111,-112,-113,-114,-118,-119,-120,-121,123,123,-39,123,-39,123,123,-85,-86,-87,-88,-89,-90,188,-92,-121,-98,-103,-121,123,-115,-116,-117,123,-43,123,123,123,-95,-96,-97,123,-100,-101,-102,123,-99,-110,-121,-121,123,-121,-9,-121,-104,123,-8,]),'MINUS':([76,86,87,88,92,94,95,96,97,113,114,115,116,117,118,119,120,121,122,125,126,127,128,130,132,133,134,135,136,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,179,180,186,188,189,190,191,192,193,194,195,210,212,215,217,228,231,234,244,245,246,250,],[124,-121,-121,-10,124,124,124,124,124,-121,-121,-107,-108,-109,-121,-111,-112,-113,-114,-118,-119,-120,-121,124,124,-39,124,-39,124,124,-85,-86,-87,-88,-89,-90,189,-92,-121,-98,-103,-121,124,-115,-116,-117,124,-43,124,124,124,-95,-96,-97,124,-100,-101,-102,124,-99,-110,-121,-121,124,-121,-9,-121,-104,124,-8,]),'NOTE':([76,86,87,92,94,95,96,97,118,128,130,132,133,134,135,136,151,152,153,154,155,156,157,163,164,165,168,179,180,186,188,189,191,193,194,195,215,228,231,246,],[125,-121,-121,125,125,125,125,125,-121,-121,125,125,-39,125,-39,125,125,-85,-86,-87,-88,-89,-90,-121,125,-115,125,125,125,125,-95,-96,125,-101,-102,125,-121,125,-121,125,]),'BOOL':([76,86,87,92,94,95,96,97,118,128,130,132,133,134,135,136,151,152,153,154,155,156,157,163,164,165,168,179,180,186,188,189,191,193,194,195,215,228,231,246,],[126,-121,-121,126,126,126,126,126,-121,-121,126,126,-39,126,-39,126,126,-85,-86,-87,-88,-89,-90,-121,126,-115,126,126,126,126,-95,-96,126,-101,-102,126,-121,126,-121,126,]),'STRING':([76,86,87,92,94,95,96,97,118,128,130,132,133,134,135,136,151,152,153,154,155,156,157,163,164,165,168,179,180,186,188,189,191,193,194,195,215,228,231,246,],[127,-121,-121,127,127,127,127,127,-121,-121,127,127,-39,127,-39,127,127,-85,-86,-87,-88,-89,-90,-121,127,-115,127,127,127,127,-95,-96,127,-101,-102,127,-121,127,-121,127,]),'TIMES':([88,114,115,116,117,119,120,121,122,125,126,127,160,161,162,166,167,170,212,217,234,244,245,250,],[-10,-121,-107,-108,-109,-111,-112,-113,-114,-118,-119,-120,193,-98,-103,-116,-117,-43,-110,-121,-9,-121,-104,-8,]),'DIVIDE':([88,114,115,116,117,119,120,121,122,125,126,127,160,161,162,166,167,170,212,217,234,244,245,250,],[-10,-121,-107,-108,-109,-111,-112,-113,-114,-118,-119,-120,194,-98,-103,-116,-117,-43,-110,-121,-9,-121,-104,-8,]),'GT':([88,112,113,114,115,116,117,119,120,121,122,125,126,127,158,159,160,161,162,166,167,170,185,187,190,192,209,210,212,217,234,244,245,250,],[-10,152,-121,-121,-107,-108,-109,-111,-112,-113,-114,-118,-119,-120,-121,-92,-121,-98,-103,-116,-117,-43,-91,-94,-97,-100,-93,-99,-110,-121,-9,-121,-104,-8,]),'LT':([88,112,113,114,115,116,117,119,120,121,122,125,126,127,158,159,160,161,162,166,167,170,185,187,190,192,209,210,212,217,234,244,245,250,],[-10,153,-121,-121,-107,-108,-109,-111,-112,-113,-114,-118,-119,-120,-121,-92,-121,-98,-103,-116,-117,-43,-91,-94,-97,-100,-93,-99,-110,-121,-9,-121,-104,-8,]),'DIFF':([88,112,113,114,115,116,117,119,120,121,122,125,126,127,158,159,160,161,162,166,167,170,185,187,190,192,209,210,212,217,234,244,245,250,],[-10,154,-121,-121,-107,-108,-109,-111,-112,-113,-114,-118,-119,-120,-121,-92,-121,-98,-103,-116,-117,-43,-91,-94,-97,-100,-93,-99,-110,-121,-9,-121,-104,-8,]),'EQ':([88,112,113,114,115,116,117,119,120,121,122,125,126,127,158,159,160,161,162,166,167,170,185,187,190,192,209,210,212,217,234,244,245,250,],[-10,155,-121,-121,-107,-108,-109,-111,-112,-113,-114,-118,-119,-120,-121,-92,-121,-98,-103,-116,-117,-43,-91,-94,-97,-100,-93,-99,-110,-121,-9,-121,-104,-8,]),'OR':([88,112,113,114,115,116,117,119,120,121,122,125,126,127,158,159,160,161,162,166,167,170,185,187,190,192,209,210,212,217,234,244,245,250,],[-10,156,-121,-121,-107,-108,-109,-111,-112,-113,-114,-118,-119,-120,-121,-92,-121,-98,-103,-116,-117,-43,-91,-94,-97,-100,-93,-99,-110,-121,-9,-121,-104,-8,]),'AND':([88,112,113,114,115,116,117,119,120,121,122,125,126,127,158,159,160,161,162,166,167,170,185,187,190,192,209,210,212,217,234,244,245,250,],[-10,157,-121,-121,-107,-108,-109,-111,-112,-113,-114,-118,-119,-120,-121,-92,-121,-98,-103,-116,-117,-43,-91,-94,-97,-100,-93,-99,-110,-121,-9,-121,-104,-8,]),'ELSE':([204,242,],[220,-60,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAM':([0,],[1,]),'G1':([3,],[4,]),'e':([3,4,6,10,13,14,16,27,32,36,38,43,50,51,52,62,63,64,72,73,78,86,87,91,109,112,113,114,118,128,139,149,158,160,163,171,172,173,197,198,204,206,211,213,215,217,218,219,220,225,231,239,241,244,247,251,254,],[5,8,11,15,24,15,24,34,41,8,46,53,34,77,79,88,90,93,108,34,53,133,135,53,41,150,159,161,165,135,177,183,187,192,135,199,199,177,199,216,221,53,199,232,133,88,236,238,240,88,135,238,238,88,253,199,232,]),'F_VARDEC':([4,36,],[6,43,]),'VARDEC':([4,36,],[7,7,]),'G2':([6,],[10,]),'F_FUNCDEC':([10,14,],[13,25,]),'FUNCDEC':([10,14,],[14,14,]),'TYPE':([12,38,40,107,],[17,47,49,47,]),'F1':([13,16,],[23,26,]),'MAIN_BLOCK':([23,],[28,]),'AUXFUNCDEC':([26,],[30,]),'VARIDB':([27,50,73,],[32,74,109,]),'FUNCBLOCK':([29,30,],[35,37,]),'VARDECB':([32,109,],[39,147,]),'F_ARGS':([38,],[44,]),'ARGS':([38,107,],[45,146,]),'STATEMENTS':([43,78,91,206,],[51,129,137,226,]),'STATEMENT':([43,78,91,206,],[52,52,52,52,]),'ASSIGN':([43,78,91,205,206,],[54,54,54,224,54,]),'FUNCCALL':([43,76,78,91,92,94,95,96,97,130,132,134,136,151,164,168,179,180,186,191,195,205,206,228,246,],[55,120,55,55,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,223,55,120,120,]),'WHILE_BLOCK':([43,78,91,206,],[56,56,56,56,]),'RITORNELLO':([43,78,91,206,],[57,57,57,57,]),'IF_BLOCK':([43,78,91,206,252,],[58,58,58,58,257,]),'PRINT':([43,78,91,206,],[59,59,59,59,]),'PLAYFUNCS':([43,78,91,206,],[60,60,60,60,]),'MUSICFUNCS':([43,78,91,206,],[61,61,61,61,]),'F_RETURN':([51,],[75,]),'N0':([52,],[78,]),'EXPVARIDB':([62,217,225,244,],[85,234,85,250,]),'W1':([63,],[89,]),'RITARG':([64,],[91,]),'RETTYPE':([71,],[100,]),'H_ARGS':([72,],[106,]),'EXP':([76,92,94,95,96,97,130,132,134,136,164,168,179,180,195,228,246,],[111,138,139,140,141,143,169,171,172,173,196,197,207,208,211,243,251,]),'EXPR':([76,92,94,95,96,97,130,132,134,136,151,164,168,179,180,186,195,228,246,],[112,112,112,112,112,112,112,112,112,112,184,112,112,112,112,209,112,112,112,]),'TERM':([76,92,94,95,96,97,130,132,134,136,151,164,168,179,180,186,191,195,228,246,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,210,113,113,113,]),'FACTOR':([76,92,94,95,96,97,130,132,134,136,151,164,168,179,180,186,191,195,228,246,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'FACTOR_CTE':([76,92,94,95,96,97,130,132,134,136,151,164,168,179,180,186,191,195,228,246,],[117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,]),'IDVARID':([76,92,94,95,96,97,130,132,134,136,151,164,168,179,180,186,191,195,228,246,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'VARCTE':([76,92,94,95,96,97,130,132,134,136,151,164,168,179,180,186,191,195,228,246,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'ARRAY':([76,92,94,95,96,97,130,132,134,136,151,164,168,179,180,186,191,195,228,246,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,]),'CALLARGS':([86,215,],[131,233,]),'C1':([86,87,128,163,215,231,],[132,134,168,195,132,246,]),'EXP2':([112,],[149,]),'EXP2_ops':([112,],[151,]),'P4':([113,],[158,]),'P5':([114,],[160,]),'EXPVARID':([116,],[162,]),'P6':([118,],[164,]),'A1':([139,173,],[176,201,]),'P7':([149,],[182,]),'EXPR_B':([158,],[185,]),'EXPR_B_OPS':([158,],[186,]),'TERM_B':([160,],[190,]),'TERM_B_OPS':([160,],[191,]),'C2':([171,172,197,211,251,],[198,200,213,229,254,]),'IF_B':([176,],[203,]),'BLOCK':([176,201,252,],[204,218,256,]),'H_CALLARGS':([198,],[214,]),'F_ELSE':([204,],[219,]),'IF_ARROW':([205,],[222,]),'ARRAYB':([213,254,],[230,258,]),'W2':([218,],[235,]),'A2':([219,239,241,],[237,247,248,]),'A3':([220,],[239,]),'A3B':([247,],[252,]),'ELSE_BLOCK':([252,],[255,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAM","S'",1,None,None,None),
  ('PROGRAM -> COMP ID G1 F_VARDEC G2 F_FUNCDEC F1 MAIN_BLOCK','PROGRAM',8,'p_main','Sostenuto-2.py',173),
  ('F_FUNCDEC -> FUNCDEC F_FUNCDEC','F_FUNCDEC',2,'p_F_FUNCDEC','Sostenuto-2.py',178),
  ('F_FUNCDEC -> e','F_FUNCDEC',1,'p_F_FUNCDEC','Sostenuto-2.py',179),
  ('VARDEC -> VAR LPAR TYPE ID VARIDB VARDECB RPAR','VARDEC',7,'p_VARDEC','Sostenuto-2.py',184),
  ('VARID -> LSQUARE NUMBER RSQUARE VARIDB','VARID',4,'p_VARID','Sostenuto-2.py',193),
  ('VARIDB -> LSQUARE NUMBER RSQUARE VARIDB','VARIDB',4,'p_VARIDB','Sostenuto-2.py',197),
  ('VARIDB -> e','VARIDB',1,'p_VARIDB','Sostenuto-2.py',198),
  ('EXPVARID -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB','EXPVARID',6,'p_EXPVARID','Sostenuto-2.py',206),
  ('EXPVARIDB -> LSQUARE C1 EXP C2 RSQUARE EXPVARIDB','EXPVARIDB',6,'p_EXPVARIDB','Sostenuto-2.py',219),
  ('EXPVARIDB -> e','EXPVARIDB',1,'p_EXPVARIDB','Sostenuto-2.py',220),
  ('VARDECB -> COMMA TYPE ID VARIDB VARDECB','VARDECB',5,'p_VARDECB','Sostenuto-2.py',237),
  ('VARDECB -> e','VARDECB',1,'p_VARDECB','Sostenuto-2.py',238),
  ('FUNCDEC -> FUNC F1 AUXFUNCDEC FUNCBLOCK','FUNCDEC',4,'p_FUNCDEC','Sostenuto-2.py',245),
  ('AUXFUNCDEC -> ID DDOT F_ARGS LARROW RETTYPE','AUXFUNCDEC',5,'p_auxFUNDEC','Sostenuto-2.py',253),
  ('F_ARGS -> ARGS','F_ARGS',1,'p_F_ARGS','Sostenuto-2.py',266),
  ('F_ARGS -> e','F_ARGS',1,'p_F_ARGS','Sostenuto-2.py',267),
  ('FUNCBLOCK -> LTRIAN F_VARDEC STATEMENTS F_RETURN RTRIAN','FUNCBLOCK',5,'p_FUNCBLOCK','Sostenuto-2.py',270),
  ('F_VARDEC -> VARDEC','F_VARDEC',1,'p_F_VARDEC','Sostenuto-2.py',275),
  ('F_VARDEC -> e','F_VARDEC',1,'p_F_VARDEC','Sostenuto-2.py',276),
  ('F_RETURN -> RETURN EXP SEMICOLON','F_RETURN',3,'p_F_RETURN','Sostenuto-2.py',279),
  ('F_RETURN -> e','F_RETURN',1,'p_F_RETURN','Sostenuto-2.py',280),
  ('STATEMENTS -> STATEMENT N0 STATEMENTS','STATEMENTS',3,'p_STATEMENTS','Sostenuto-2.py',292),
  ('STATEMENTS -> e','STATEMENTS',1,'p_STATEMENTS','Sostenuto-2.py',293),
  ('N0 -> e','N0',1,'p_N0','Sostenuto-2.py',297),
  ('MAIN_BLOCK -> MAIN FUNCBLOCK','MAIN_BLOCK',2,'p_MAIN','Sostenuto-2.py',306),
  ('STATEMENT -> ASSIGN SEMICOLON','STATEMENT',2,'p_STATEMENT','Sostenuto-2.py',310),
  ('STATEMENT -> FUNCCALL SEMICOLON','STATEMENT',2,'p_STATEMENT','Sostenuto-2.py',311),
  ('STATEMENT -> WHILE_BLOCK','STATEMENT',1,'p_STATEMENT','Sostenuto-2.py',312),
  ('STATEMENT -> RITORNELLO','STATEMENT',1,'p_STATEMENT','Sostenuto-2.py',313),
  ('STATEMENT -> IF_BLOCK','STATEMENT',1,'p_STATEMENT','Sostenuto-2.py',314),
  ('STATEMENT -> PRINT SEMICOLON','STATEMENT',2,'p_STATEMENT','Sostenuto-2.py',315),
  ('STATEMENT -> PLAYFUNCS SEMICOLON','STATEMENT',2,'p_STATEMENT','Sostenuto-2.py',316),
  ('STATEMENT -> MUSICFUNCS SEMICOLON','STATEMENT',2,'p_STATEMENT','Sostenuto-2.py',317),
  ('ARGS -> TYPE ID H_ARGS','ARGS',3,'p_ARGS','Sostenuto-2.py',321),
  ('H_ARGS -> COMMA ARGS','H_ARGS',2,'p_H_ARGS','Sostenuto-2.py',331),
  ('H_ARGS -> e','H_ARGS',1,'p_H_ARGS','Sostenuto-2.py',332),
  ('CALLARGS -> C1 EXP C2 H_CALLARGS','CALLARGS',4,'p_CALLARGS','Sostenuto-2.py',336),
  ('CALLARGS -> e','CALLARGS',1,'p_CALLARGS','Sostenuto-2.py',337),
  ('C1 -> e','C1',1,'p_C1','Sostenuto-2.py',347),
  ('C2 -> e','C2',1,'p_C2','Sostenuto-2.py',353),
  ('H_CALLARGS -> COMMA CALLARGS','H_CALLARGS',2,'p_H_CALLARGS','Sostenuto-2.py',358),
  ('H_CALLARGS -> e','H_CALLARGS',1,'p_H_CALLARGS','Sostenuto-2.py',359),
  ('FUNCCALL -> ID LPAR CALLARGS RPAR','FUNCCALL',4,'p_FUNCCALL','Sostenuto-2.py',363),
  ('PRINT -> DISP LPAR EXP RPAR','PRINT',4,'p_PRINT','Sostenuto-2.py',402),
  ('MUSICFUNCS -> STREAMT LPAR EXP RPAR','MUSICFUNCS',4,'p_MUSICFUNCS','Sostenuto-2.py',413),
  ('MUSICFUNCS -> MIDIT LPAR RPAR','MUSICFUNCS',3,'p_MUSICFUNCS','Sostenuto-2.py',414),
  ('MUSICFUNCS -> MST LPAR RPAR','MUSICFUNCS',3,'p_MUSICFUNCS','Sostenuto-2.py',415),
  ('PLAYFUNCS -> PLAYT LPAR EXP COMMA EXP RPAR','PLAYFUNCS',6,'p_PLAY','Sostenuto-2.py',433),
  ('PLAYFUNCS -> PLAYT LPAR SILENCE COMMA EXP COMMA EXP RPAR','PLAYFUNCS',8,'p_PLAY','Sostenuto-2.py',434),
  ('TYPE -> NUMBERTYPE','TYPE',1,'p_TYPE','Sostenuto-2.py',471),
  ('TYPE -> LISTTYPE','TYPE',1,'p_TYPE','Sostenuto-2.py',472),
  ('TYPE -> NOTETYPE','TYPE',1,'p_TYPE','Sostenuto-2.py',473),
  ('TYPE -> BOOLTYPE','TYPE',1,'p_TYPE','Sostenuto-2.py',474),
  ('TYPE -> STRINGTYPE','TYPE',1,'p_TYPE','Sostenuto-2.py',475),
  ('RETTYPE -> NUMBERTYPE','RETTYPE',1,'p_RETTYPE','Sostenuto-2.py',479),
  ('RETTYPE -> LISTTYPE','RETTYPE',1,'p_RETTYPE','Sostenuto-2.py',480),
  ('RETTYPE -> NOTETYPE','RETTYPE',1,'p_RETTYPE','Sostenuto-2.py',481),
  ('RETTYPE -> BOOLTYPE','RETTYPE',1,'p_RETTYPE','Sostenuto-2.py',482),
  ('RETTYPE -> SILENCE','RETTYPE',1,'p_RETTYPE','Sostenuto-2.py',483),
  ('BLOCK -> LTRIAN STATEMENTS RTRIAN','BLOCK',3,'p_BLOCK','Sostenuto-2.py',486),
  ('ASSIGN -> ID EXPVARIDB ASSIGNATION EXP','ASSIGN',4,'p_ASSIGN','Sostenuto-2.py',489),
  ('IF_BLOCK -> IF DDOT EXP A1 IF_B','IF_BLOCK',5,'p_IF','Sostenuto-2.py',516),
  ('A1 -> e','A1',1,'p_A1','Sostenuto-2.py',520),
  ('A2 -> e','A2',1,'p_A2','Sostenuto-2.py',535),
  ('A3 -> e','A3',1,'p_A3','Sostenuto-2.py',545),
  ('A3B -> e','A3B',1,'p_A3B','Sostenuto-2.py',550),
  ('IF_B -> BLOCK F_ELSE A2','IF_B',3,'p_IF_B','Sostenuto-2.py',556),
  ('IF_B -> LARROW IF_ARROW SEMICOLON A2','IF_B',4,'p_IF_B','Sostenuto-2.py',557),
  ('IF_ARROW -> FUNCCALL','IF_ARROW',1,'p_IF_ARROW','Sostenuto-2.py',562),
  ('IF_ARROW -> ASSIGN','IF_ARROW',1,'p_IF_ARROW','Sostenuto-2.py',563),
  ('F_ELSE -> ELSE A3 A2 A3B ELSE_BLOCK','F_ELSE',5,'p_F_ELSE','Sostenuto-2.py',568),
  ('F_ELSE -> e','F_ELSE',1,'p_F_ELSE','Sostenuto-2.py',569),
  ('ELSE_BLOCK -> BLOCK','ELSE_BLOCK',1,'p_ELSE_BLOCK','Sostenuto-2.py',573),
  ('ELSE_BLOCK -> IF_BLOCK','ELSE_BLOCK',1,'p_ELSE_BLOCK','Sostenuto-2.py',574),
  ('WHILE_BLOCK -> WHILE W1 DDOT EXP A1 BLOCK W2','WHILE_BLOCK',7,'p_WHILE','Sostenuto-2.py',578),
  ('W1 -> e','W1',1,'p_W1','Sostenuto-2.py',582),
  ('W2 -> e','W2',1,'p_W2','Sostenuto-2.py',587),
  ('RITORNELLO -> LRITT RITARG STATEMENTS RRITT','RITORNELLO',4,'p_RITORNELLO','Sostenuto-2.py',595),
  ('RITARG -> LPAR EXP RPAR LARROW','RITARG',4,'p_RIT_ARG','Sostenuto-2.py',606),
  ('RITARG -> e','RITARG',1,'p_RIT_ARG','Sostenuto-2.py',607),
  ('EXP -> EXPR EXP2 P7','EXP',3,'p_EXP','Sostenuto-2.py',634),
  ('P7 -> e','P7',1,'p_p7','Sostenuto-2.py',638),
  ('EXP2 -> e','EXP2',1,'p_EXP2','Sostenuto-2.py',645),
  ('EXP2 -> EXP2_ops EXPR','EXP2',2,'p_EXP2','Sostenuto-2.py',646),
  ('EXP2_ops -> GT','EXP2_ops',1,'p_EXP2_ops','Sostenuto-2.py',654),
  ('EXP2_ops -> LT','EXP2_ops',1,'p_EXP2_ops','Sostenuto-2.py',655),
  ('EXP2_ops -> DIFF','EXP2_ops',1,'p_EXP2_ops','Sostenuto-2.py',656),
  ('EXP2_ops -> EQ','EXP2_ops',1,'p_EXP2_ops','Sostenuto-2.py',657),
  ('EXP2_ops -> OR','EXP2_ops',1,'p_EXP2_ops','Sostenuto-2.py',658),
  ('EXP2_ops -> AND','EXP2_ops',1,'p_EXP2_ops','Sostenuto-2.py',659),
  ('EXPR -> TERM P4 EXPR_B','EXPR',3,'p_EXPR','Sostenuto-2.py',665),
  ('P4 -> e','P4',1,'p_P4','Sostenuto-2.py',669),
  ('EXPR_B -> EXPR_B_OPS EXPR','EXPR_B',2,'p_EXPR_B','Sostenuto-2.py',677),
  ('EXPR_B -> e','EXPR_B',1,'p_EXPR_B','Sostenuto-2.py',678),
  ('EXPR_B_OPS -> PLUS','EXPR_B_OPS',1,'p_EXPR_B_OPS','Sostenuto-2.py',685),
  ('EXPR_B_OPS -> MINUS','EXPR_B_OPS',1,'p_EXPR_B_OPS','Sostenuto-2.py',686),
  ('TERM -> FACTOR P5 TERM_B','TERM',3,'p_TERM','Sostenuto-2.py',692),
  ('P5 -> e','P5',1,'p_P5','Sostenuto-2.py',696),
  ('TERM_B -> TERM_B_OPS TERM','TERM_B',2,'p_TERM_B','Sostenuto-2.py',703),
  ('TERM_B -> e','TERM_B',1,'p_TERM_B','Sostenuto-2.py',704),
  ('TERM_B_OPS -> TIMES','TERM_B_OPS',1,'p_TERM_B_OPS','Sostenuto-2.py',711),
  ('TERM_B_OPS -> DIVIDE','TERM_B_OPS',1,'p_TERM_B_OPS','Sostenuto-2.py',712),
  ('IDVARID -> ID EXPVARID','IDVARID',2,'p_FACTORVARID','Sostenuto-2.py',717),
  ('ARRAY -> LSQUARE C1 EXP C2 ARRAYB RSQUARE','ARRAY',6,'p_ARRAY','Sostenuto-2.py',728),
  ('ARRAYB -> COMMA C1 EXP C2 ARRAYB','ARRAYB',5,'p_ARRAYB','Sostenuto-2.py',764),
  ('ARRAYB -> e','ARRAYB',1,'p_ARRAYB','Sostenuto-2.py',765),
  ('FACTOR -> NUMBER','FACTOR',1,'p_FACTOR','Sostenuto-2.py',769),
  ('FACTOR -> ID','FACTOR',1,'p_FACTOR','Sostenuto-2.py',770),
  ('FACTOR -> FACTOR_CTE','FACTOR',1,'p_FACTOR','Sostenuto-2.py',771),
  ('FACTOR -> LPAR P6 EXP RPAR','FACTOR',4,'p_FACTOR','Sostenuto-2.py',772),
  ('FACTOR -> IDVARID','FACTOR',1,'p_FACTOR','Sostenuto-2.py',773),
  ('FACTOR -> FUNCCALL','FACTOR',1,'p_FACTOR','Sostenuto-2.py',774),
  ('FACTOR -> VARCTE','FACTOR',1,'p_FACTOR','Sostenuto-2.py',775),
  ('FACTOR -> ARRAY','FACTOR',1,'p_FACTOR','Sostenuto-2.py',776),
  ('P6 -> e','P6',1,'p_P6','Sostenuto-2.py',825),
  ('FACTOR_CTE -> PLUS NUMBER','FACTOR_CTE',2,'p_FACTOR_CTE','Sostenuto-2.py',831),
  ('FACTOR_CTE -> MINUS NUMBER','FACTOR_CTE',2,'p_FACTOR_CTE','Sostenuto-2.py',832),
  ('VARCTE -> NOTE','VARCTE',1,'p_VARCTE','Sostenuto-2.py',844),
  ('VARCTE -> BOOL','VARCTE',1,'p_VARCTE','Sostenuto-2.py',845),
  ('VARCTE -> STRING','VARCTE',1,'p_VARCTE','Sostenuto-2.py',846),
  ('e -> <empty>','e',0,'p_empty','Sostenuto-2.py',851),
  ('F1 -> e','F1',1,'p_f1','Sostenuto-2.py',986),
  ('F2 -> e','F2',1,'p_f2','Sostenuto-2.py',992),
  ('G1 -> e','G1',1,'p_g1','Sostenuto-2.py',998),
  ('G2 -> e','G2',1,'p_g2','Sostenuto-2.py',1003),
]
